easy pred: select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select T1.Abbreviation from airlines as T1 join flights as T2 where T2.FlightNo = 1
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select FlightNo from flights
easy gold: SELECT Abbreviation FROM AIRLINES

easy pred: select DestAirport from flights where DestAirport = 1
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

medium pred: select T1.Airline , T2.SourceAirport from airlines as T1 join flights as T2
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES

medium pred: select T2.DestAirport , T2.SourceAirport from airlines as T1 join flights as T2 where T1.Country = 1
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

medium pred: select AirportCode , AirportCode from airports where City = 1
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

easy pred: select FlightNo from flights
easy gold: SELECT * FROM FLIGHTS

easy pred: select DestAirport from flights where FlightNo like 1
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

easy pred: select T2.DestAirport from airlines as T1 join flights as T2 where T1.Country = 1
easy gold: SELECT airline FROM AIRLINES WHERE Country  =  "USA"

medium pred: select City , City from airports where City = 1
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

easy pred: select AirportCode from airports
easy gold: SELECT AirportName FROM AIRPORTS

easy pred: select T1.AirportCode from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T2.SourceAirport = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

easy pred: select AirportCode from airports
easy gold: SELECT AirportName FROM AIRPORTS

easy pred: select AirportCode from airports where City = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

easy pred: select FlightNo from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select count ( FlightNo ) from flights where FlightNo = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select FlightNo from flights where SourceAirport = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "ATO"

medium pred: select * from flights where FlightNo = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count ( * ) from flights where FlightNo = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select * from flights where FlightNo = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count ( * ) from flights where FlightNo = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select * from flights where FlightNo = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

hard pred: select FlightNo from flights where SourceAirport = 1 and FlightNo = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

hard pred: select count ( * ) from flights where SourceAirport = 1 and FlightNo = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

medium pred: select DestAirport from flights where FlightNo = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

medium pred: select count ( FlightNo ) from flights where FlightNo = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

easy pred: select Abbreviation from airlines
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

easy pred: select count ( Abbreviation ) from airlines
easy gold: SELECT count(*) FROM AIRLINES WHERE Airline  =  "United Airlines"

medium pred: select count ( * ) from flights where SourceAirport = 1 and FlightNo = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

easy pred: select Abbreviation from airlines
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

medium pred: select T1.Abbreviation from airlines as T1 join flights as T2 where T2.SourceAirport = 1
medium gold: SELECT * FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

medium pred: select count ( T2.SourceAirport ) from airlines as T1 join flights as T2 where T1.Abbreviation = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

hard pred: select T1.Abbreviation from airlines as T1 join flights as T2 where T2.FlightNo = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

hard pred: select count ( SourceAirport ) from flights where FlightNo = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

easy pred: select City from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:1
hard pred: select T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by T1.AirportCode order by count ( T2.* )
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by T1.AirportCode order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

easy pred: select City from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport

eval_err_num:2
hard pred: select T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by T1.AirportCode order by count ( T2.* )
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC

easy pred: select T1.AirportCode from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T2.FlightNo = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: select DestAirport , FlightNo from flights where FlightNo = 1 or FlightNo = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

easy pred: select T1.AirportCode from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T2.FlightNo = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: select DestAirport , FlightNo from flights where FlightNo = 1 or FlightNo = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

medium pred: select count ( T2.Airline ) , T1.Airline from airlines as T1 join flights as T2 group by T1.Airline
medium gold: SELECT count(*) ,  T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline

extra pred: select Airline from flights group by Airline order by count ( Airline ) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

medium pred: select Airline , Country from airlines
medium gold: SELECT Abbreviation ,  Country FROM AIRLINES

hard pred: select T1.Abbreviation , T1.Country from airlines as T1 join flights as T2 order by T2.FlightNo
hard gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*)

extra pred: select T1.Airline , T1.Country from airlines as T1 join flights as T2 group by T1.Airline order by count ( T2.Airline ) asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

easy pred: select * from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "AHD"

medium pred: select DestAirport from flights where FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

easy pred: select * from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "AHD"

medium pred: select DestAirport from flights where FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

medium pred: select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

extra pred: select DestAirport from flights where FlightNo = 1 and FlightNo = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

medium pred: select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

extra pred: select DestAirport from flights where FlightNo = 1 intersect select DestAirport from flights where FlightNo = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

easy pred: select * from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: select T2.DestAirport from airlines as T1 join flights as T2 group by T1.Airline having count ( T2.Airline ) > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

easy pred: select * from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: select DestAirport from flights where DestAirport > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

easy pred: select DestAirport from flights
easy gold: SELECT FlightNo FROM FLIGHTS

medium pred: select T2.DestAirport from airlines as T1 join flights as T2 where T1.Abbreviation = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

easy pred: select DestAirport from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select DestAirport from flights where FlightNo = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select DestAirport from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select DestAirport , FlightNo from flights where SourceAirport = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

easy pred: select DestAirport from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select DestAirport from flights where FlightNo = 1
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode

medium pred: select DestAirport from flights where FlightNo = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

easy pred: select DestAirport from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select DestAirport from flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode

medium pred: select DestAirport from flights where FlightNo = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select FlightNo from flights where FlightNo = 1
medium gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen"

hard pred: select T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1 or T2.FlightNo = 1
hard gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: select count ( * ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1 or T2.FlightNo = 1
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

easy pred: select * from airports
easy gold: SELECT SourceAirport FROM Flights

hard pred: select AirportCode , AirportCode from airports
hard gold: SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights

hard pred: select AirportCode from airports where AirportCode not in ( select AirportCode from airports )
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

eval_err_num:3
easy pred: select T3.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID order by T1.Age
easy gold: SELECT * FROM pets ORDER BY pet_age

easy pred: select weight , weight from Pets
easy gold: SELECT weight FROM pets ORDER BY pet_age

eval_err_num:4
medium pred: select T3.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID order by T1.Age desc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

easy pred: select weight from Pets
easy gold: SELECT DISTINCT petType FROM pets

medium pred: select weight , weight from Pets
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

eval_err_num:5
medium pred: select T3.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age > 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select count ( * ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age > 1
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select * from Student where Sex = 1 and Sex = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'

hard pred: select count ( * ) from Student where Sex = 1 and Major = 1
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

easy pred: select weight from Pets
easy gold: SELECT DISTINCT pettype FROM pets

easy pred: select count ( weight ) from Pets
easy gold: SELECT count(DISTINCT pettype) FROM pets

hard pred: select Fname from Student
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

extra pred: select T1.Fname , T1.LName , T2.PetID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

hard pred: select T1.StuID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select T1.StuID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 1
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 1
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

hard pred: select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.weight = 1
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:6
hard pred: select T1.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 1
hard gold: SELECT major FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

extra pred: select Fname , Age from Student where StuID in ( select T1.StuID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 1 )
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

hard pred: select StuID from Student where StuID in ( select StuID from Student )
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

hard pred: select StuID from Student where StuID not in ( select StuID from Student )
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

hard pred: select * from Student
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:7
extra pred: select * from Student except select T1.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 1
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

extra pred: select Fname , Age from Student where StuID not in ( select StuID from Student )
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:8
medium pred: select pets from Student order by Age asc limit 1
medium gold: SELECT * FROM pets ORDER BY pet_age LIMIT 1

medium pred: select weight from Pets
medium gold: SELECT pettype FROM pets ORDER BY pet_age LIMIT 1

medium pred: select pet_age , weight from Pets
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

easy pred: select StuID from Student
easy gold: SELECT petid FROM pets

easy pred: select StuID from Student where Age > 1
easy gold: SELECT petid FROM pets WHERE pet_age  >  1

medium pred: select T1.StuID , T3.weight from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age > 1
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

easy pred: select weight from Pets
easy gold: SELECT DISTINCT pettype FROM pets

medium pred: select T3.weight , max ( T1.Age ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID group by T3.weight
medium gold: SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select avg ( Age ) from Student
medium gold: SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select avg ( weight ) from Pets
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

easy pred: select * from Student
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: select Fname from Student
easy gold: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select Fname , Age from Student
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: select * from Student
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select * from Student where LName = 1 and LName = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

medium pred: select StuID from Student where LName = 1
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

easy pred: select StuID from Student
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select count ( * ) , StuID from Student group by StuID
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

medium pred: select Fname from Student where Sex = 1 group by StuID having count ( * ) > 1
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: select max ( Age ) from Student where Sex = 1
medium gold: SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'

hard pred: select StuID from Student where Fname = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

hard pred: select LName from Student where Age = ( select max ( Age ) from Student )
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

hard pred: select * from Student except select * from Student
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

extra pred: select avg ( Age ) from Student where StuID in ( select StuID from Student )
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

easy pred: select Name from country where Continent > 1
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

easy pred: select count ( * ) from country where Code = 1
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE Region  =  "Caribbean"

easy pred: select Region from country where Region = 1
easy gold: SELECT SurfaceArea FROM country WHERE Region  =  "Caribbean"

easy pred: select sum ( T1.Percentage ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

easy pred: select Region from country
easy gold: SELECT Continent FROM country

easy pred: select Region from country where Code = 1
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

medium pred: select Name from city where District = 1
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

easy pred: select Region from country
easy gold: SELECT LANGUAGE FROM countrylanguage

extra pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1 group by T1.Code order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

medium pred: select T2.Population , T1.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode
medium gold: SELECT Population ,  LifeExpectancy FROM country

medium pred: select T1.Population , T2.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

easy pred: select Region from country where Region = 1
easy gold: SELECT Region FROM country WHERE Name  =  "Angola"

easy pred: select Region from country where Region = 1
easy gold: SELECT Population FROM country WHERE Name  =  "Angola"

easy pred: select Population from country
easy gold: SELECT LifeExpectancy FROM country

easy pred: select Population from country where Region = 1
easy gold: SELECT LifeExpectancy FROM country WHERE Region  =  "Central Africa"

easy pred: select avg ( T2.Population ) from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

easy pred: select Name from country where Region = 1
easy gold: SELECT Name FROM country WHERE Continent  =  "Asia"

hard pred: select Name from city order by Population asc limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

easy pred: select count ( * ) from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1
easy gold: SELECT sum(Population) FROM country WHERE Continent  =  "Asia"

easy pred: select count ( * ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1 order by T1.Percentage desc limit 1
easy gold: SELECT max(GNP) FROM country WHERE Continent  =  "Asia"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Africa"

medium pred: select Region from country where Region = 1 intersect select Region from country where Region = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select avg ( T2.Population ) from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select Region from country where Region = 1 or Region = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select Region from country where Region = 1
medium gold: SELECT SurfaceArea FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select sum ( T1.Percentage ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

easy pred: select T1.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.District = 1
easy gold: SELECT Population FROM city WHERE District  =  "Gelderland"

easy pred: select Population from country
easy gold: SELECT * FROM country

easy pred: select Population from country where Region = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "US Territory"

medium pred: select avg ( T1.Percentage ) , sum ( T1.Percentage ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region != 1
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

easy pred: select Region from country where Region = 1
easy gold: SELECT DISTINCT GovernmentForm FROM country WHERE Continent  =  "Africa"

easy pred: select count ( Region ) from country where Region = 1
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

medium pred: select count ( * ) from country where Name = 1
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select Region from country where Region = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan"

medium pred: select T1.Language from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1 order by T2.LocalName
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

medium pred: select T1.Region , count ( * ) from country as T1 join city as T2 on T1.Code = T2.CountryCode group by T1.Region
medium gold: SELECT count(*) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name

extra pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode group by T1.Region order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select T1.Region , count ( * ) from country as T1 join city as T2 on T1.Code = T2.CountryCode group by T1.Region
medium gold: SELECT COUNT(*) ,  T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent

extra pred: select Region from country group by Region order by count ( * ) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select Region from country where Region = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select Region from country where Name = 1 intersect select Region from country where Region = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch"

easy pred: select count ( * ) from country where Code = 1 or Region = 1
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

medium pred: select Name from country where Region = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select Name from country where Name = 1 except select Name from country where Name = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

medium pred: select Region from country
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

medium pred: select Region from country where Region = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T"

extra pred: select Name from country where Code = 1 intersect select Name from country where Region = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

medium pred: select Region from country where Region = 1
medium gold: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select Region from country where Region = 1
medium gold: SELECT DISTINCT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select count ( Continent ) from country where Region = 1
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

hard pred: select Region from country where Region = 1 or Region = 1
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

medium pred: select Region from country
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE IsOfficial  =  "T"

extra pred: select LocalName from country where Region = 1 intersect select Region from country where Region = 1
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

medium pred: select Region from country where Region = 1
medium gold: SELECT DISTINCT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia"

extra pred: select Name from country where Region = 1 group by Region order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

easy pred: select Region from country except select Region from country
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "Republic"

hard pred: select Region from country where Region like 1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

medium pred: select T2.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select T2.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1 order by T1.Population desc limit 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

medium pred: select T2.Name , T2.Population , T1.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode
medium gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia"

hard pred: select T2.Name , T2.Population , T1.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode order by T1.Region desc
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select Region from country
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

hard pred: select Region from country where Code != 1
hard gold: SELECT * FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

extra pred: select Region from country where Region != 1
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

hard pred: select T2.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region != 1
hard gold: SELECT Name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

extra pred: select count ( * ) from country where Region != 1
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

medium pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Name = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

medium pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

medium pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

easy pred: select Name from country where Continent > 1
easy gold: SELECT T1.Name FROM country AS t1 WHERE  IndepYear  <  1930

medium pred: select count ( Region ) , Region from country where Continent > 1 group by Code
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

easy pred: select * from country where Region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Europe"

easy pred: select T1.seq from sqlite_sequence as T1 join country as T2 where T2.Region = 1
easy gold: SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe"

hard pred: select Region from country where Region > 1
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

easy pred: select max ( T1.Percentage ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Asia"

extra pred: select Region from country where Region < ( select max ( Region ) from country where Region = 1 )
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

easy pred: select T2.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Africa"

extra pred: select Region from country where Region > ( select min ( Region ) from country where Region = 1 )
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

easy pred: select Region from country
easy gold: SELECT CountryCode FROM countrylanguage

hard pred: select Region from country except select Region from country where Code = 1
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

easy pred: select Region from country
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage

easy pred: select Region from country where Code != 1
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE ! =  "English"

easy pred: select Region from country where Code != 1
easy gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic"

hard pred: select Region from country where Code != 1
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

medium pred: select Name from country where Region = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English'

extra pred: select Name from country where Region != 1
extra gold: SELECT Name FROM country WHERE Continent  =  'Europe' AND Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English')

extra pred: select Region from country where Region = 1 except select Name from city
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

medium pred: select Region from country where Region = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select Region from country where Region = 1 and Region = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

hard pred: select T2.District from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Region = 1 or T1.Region = 1
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select Region from country order by Region asc limit 1
medium gold: SELECT * FROM country ORDER BY Population LIMIT 1

medium pred: select T1.Name , T1.Region , T1.SurfaceArea from country as T1 join city as T2 on T1.Code = T2.CountryCode order by T2.Population asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

medium pred: select Region from country order by SurfaceArea desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select T1.Region , T1.GovernmentForm , T1.GovernmentForm from country as T1 join city as T2 on T1.Code = T2.CountryCode order by T2.District desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode group by T1.Region having count ( * ) > = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

medium pred: select Region , count ( * ) from country group by Region having count ( * ) > = 1
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

easy pred: select Population from city
easy gold: SELECT avg(Population) FROM city

extra pred: select District , count ( * ) from city where Population > ( select avg ( Population ) from city )
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

easy pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Population > 1
easy gold: SELECT * FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: select T1.Region , T1.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Population > 1 group by T1.Region having avg ( T2.Population ) > 1
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

easy pred: select T1.Name from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Population > 1
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select T1.Population , avg ( T2.Population ) from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.Population > 1 group by T1.Population
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select Region from country order by SurfaceArea desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 5

medium pred: select T2.Name , T2.Name from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Percentage desc
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

easy pred: select Region from country order by Population desc
easy gold: SELECT * FROM country ORDER BY Population DESC

easy pred: select Region from country order by Population
easy gold: SELECT * FROM country ORDER BY Population

medium pred: select Name from country order by Population asc
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE continent  =  "Asia"

easy pred: select count ( Region ) from country where Region = 1
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE continent  =  "Europe"

medium pred: select Name from country where Region > 1
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "North America"

medium pred: select T1.Region from country as T1 join city as T2 on T1.Code = T2.CountryCode where T2.District > 1
medium gold: SELECT * FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

hard pred: select avg ( T1.Percentage ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1 and T1.Percentage > 1
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

easy pred: select District from city
easy gold: SELECT name FROM city

easy pred: select Name from city where Population > 1
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000

easy pred: select Region from country
easy gold: SELECT LANGUAGE FROM countrylanguage

hard pred: select T1.Language from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Region order by count ( * ) desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

easy pred: select T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "Day of the Dark Knight!"

easy pred: select * from TV_Channel where Language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Italy"

easy pred: select * from TV_Channel where Language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Poland"

hard pred: select Country from TV_Channel where Language = 1 intersect select Country from TV_Channel where Language = 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1

easy pred: select T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!"

hard pred: select T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
hard gold: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!")

medium pred: select T2.series_name , T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel

easy pred: select T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Rock TV"

easy pred: select series_name from TV_Channel where series_name = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Rock TV"

hard pred: select Language from TV_Channel where Language = 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1

easy pred: select Directed_by from Cartoon where Title = 1
easy gold: SELECT Written_by FROM Cartoon WHERE Title = "The Rise of the Blue Beetle!"

medium pred: select T2.Content from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"

easy pred: select T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

easy pred: select T2.Rating from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Double Down"

easy pred: select T2.Rating from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Keepers"

medium pred: select T1.series_name , T2.18_49_Rating_Share from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3

easy pred: select T2.Weekly_Rank from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "Emily"

easy pred: select T2.Weekly_Rank from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Share FROM TV_series WHERE Episode = "Emily"

medium pred: select min ( T2.Weekly_Rank ) , max ( T2.Weekly_Rank ) from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series

easy pred: select T3.Rating from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id join TV_series as T3 on T2.id = T3.Channel where T1.Title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "A Love of a Lifetime"

easy pred: select T3.Weekly_Rank from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id join TV_series as T3 on T2.id = T3.Channel where T1.Title = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

medium pred: select T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"

easy pred: select T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

easy pred: select T2.Episode from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Sky Radio"

medium pred: select series_name from TV_Channel where series_name = 1
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

easy pred: select T3.Episode from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id join TV_series as T3 on T2.id = T3.Channel where T1.Title = 1
easy gold: SELECT Original_air_date FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

easy pred: select T2.Hight_definition_TV from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

medium pred: select T1.Production_code , T2.Language from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id order by T1.Title desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

easy pred: select Title from Cartoon where Directed_by = 1 and Directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"

medium pred: select T2.Country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Directed_by = 1 and T1.Directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Todd Casey'

medium pred: select T2.Country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Steven Melching'

hard pred: select T2.Country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Directed_by = 1 except select T4.Country from Cartoon as T3 join TV_Channel as T4 on T3.Channel = T4.id where T3.Directed_by = 1
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

easy pred: select Directed_by from Cartoon where Title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Deep Cover for Batman!"

extra pred: select T2.series_name , T2.Country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Directed_by = 1 and T2.series_name = 1
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

easy pred: select count ( * ) from TV_Channel where series_name = 1
easy gold: SELECT COUNT(*) FROM TV_Channel WHERE Country = "Italy"

easy pred: select Language from TV_Channel group by Language having count ( * ) > 1
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

hard pred: select T2.id from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Directed_by = 1 or T1.Directed_by = 1
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

easy pred: select Money_Rank from poker_player
easy gold: SELECT * FROM poker_player

easy pred: select Money_Rank , Money_Rank from poker_player
easy gold: SELECT Earnings FROM poker_player

easy pred: select Money_Rank from poker_player group by Money_Rank order by count ( * ) desc
easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC

medium pred: select Final_Table_Made , Final_Table_Made , Best_Finish from poker_player
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

easy pred: select Money_Rank , Money_Rank from poker_player
easy gold: SELECT Earnings FROM poker_player

easy pred: select Best_Finish from poker_player
easy gold: SELECT avg(Earnings) FROM poker_player

easy pred: select Money_Rank from poker_player group by Money_Rank order by count ( * ) desc
easy gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC

medium pred: select Money_Rank from poker_player order by Money_Rank desc limit 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

easy pred: select Earnings from poker_player where Earnings < 1
easy gold: SELECT * FROM poker_player WHERE Earnings  <  200000

easy pred: select Final_Table_Made from poker_player where Money_Rank > 1 order by Final_Table_Made desc limit 1
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: select Money_Rank from poker_player
easy gold: SELECT * FROM poker_player

easy pred: select Best_Finish from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

easy pred: select Earnings from poker_player where Earnings > 1
easy gold: SELECT * FROM poker_player WHERE Earnings  >  300000

easy pred: select Best_Finish from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

easy pred: select Birth_Date from people
easy gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select Best_Finish from poker_player where Money_Rank = 1 group by Best_Finish order by count ( * )
medium gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings

hard pred: select Final_Table_Made from poker_player order by Money_Rank asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

easy pred: select Money_Rank from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

hard pred: select Name from people order by Height desc limit 1
hard gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

easy pred: select Money_Rank from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select * from people where Height > 1
medium gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

medium pred: select avg ( Earnings ) from poker_player where Money_Rank > 1
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

easy pred: select * from poker_player order by Money_Rank desc
easy gold: SELECT * FROM poker_player ORDER BY Earnings DESC

medium pred: select T1.Name from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID order by T2.Money_Rank desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

easy pred: select Nationality from people group by Nationality
easy gold: SELECT * FROM people GROUP BY Nationality

medium pred: select T1.Nationality , count ( * ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by T1.Nationality
medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality

easy pred: select count ( * ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by T1.Nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

hard pred: select T1.Nationality from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by T1.Nationality order by count ( * ) desc limit 1
hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select count ( * ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by T1.Nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

easy pred: select T1.Nationality from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by T1.Nationality having count ( * ) > = 1
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2

easy pred: select Money_Rank from poker_player
easy gold: SELECT * FROM poker_player

hard pred: select * from poker_player where Money_Rank = 1
hard gold: SELECT * FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

hard pred: select T1.Name from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID where T2.Money_Rank != 1
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

easy pred: select injured from death
easy gold: SELECT killed FROM death

easy pred: select max ( injured ) from death
easy gold: SELECT max(killed) FROM death

easy pred: select min ( injured ) from death
easy gold: SELECT min(killed) FROM death

medium pred: select max ( injured ) , min ( injured ) from death
medium gold: SELECT max(killed) ,  min(killed) FROM death

easy pred: select injured from death
easy gold: SELECT * FROM death as T1 JOIN ship as T2 ON T1.caused_by_ship_id  =  T2.id

medium pred: select * from ship where disposition_of_ship != 1
medium gold: SELECT * FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

medium pred: select T2.injured from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T1.id not in ( select T4.id from ship as T3 join battle as T4 on T3.lost_in_battle = T4.id where T3.ship_type = 1 )
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

easy pred: select id , name from battle
easy gold: SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle

hard pred: select injured , killed from death
hard gold: SELECT T1.id ,  T1.name, sum(T3.killed), sum(T3.injured) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id

hard pred: select killed from death where killed > = 1
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

medium pred: select T1.id , T2.name , T3.injured from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id join death as T3 on T1.id = T3.caused_by_ship_id
medium gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id

hard pred: select id , name , count ( * ) from ship group by id order by count ( * ) desc
hard gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured)

extra pred: select T1.id , T2.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id join death as T3 on T1.id = T3.caused_by_ship_id group by T1.id order by sum ( T3.injured ) desc limit 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured) DESC LIMIT 1

easy pred: select name from battle where latin_commander = 1
easy gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan'

easy pred: select date from battle where latin_commander = 1
easy gold: SELECT name FROM battle WHERE latin_commander  =  'Baldwin I'

medium pred: select T1.lost_in_battle from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T2.latin_commander = 1 intersect select name from battle where latin_commander = 1
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

easy pred: select T2.id from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T1.disposition_of_ship != 1
easy gold: SELECT lost_in_battle FROM ship WHERE tonnage  =  '225'

medium pred: select T2.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.id not in ( select T4.id from ship as T3 join battle as T4 on T3.lost_in_battle = T4.id where T3.ship_type = 1 )
medium gold: SELECT T2.id, T2.name from ship AS T1 join battle AS T2 ON T1.lost_in_battle = T2.id WHERE tonnage  =  '225'

extra pred: select T2.id from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.id not in ( select T4.id from ship as T3 join battle as T4 on T3.lost_in_battle = T4.id where T3.ship_type != 1 )
extra gold: SELECT id, name FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select count ( * ) from ship where id not in ( select T2.id from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.ship_type = 1 )
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

medium pred: select T2.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice'

medium pred: select T2.date from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name = 1 and T2.name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atlanta'

extra pred: select T2.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name = 1 and T2.name = 1
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

medium pred: select T3.id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T1.name = 1
medium gold: SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

extra pred: select T2.id from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.id not in ( select id from battle where name = 1 )
extra gold: SELECT T1.id, T1.name FROM battle EXCEPT SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

extra pred: select T2.name , T3.killed , T1.location from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id join death as T3 on T1.id = T3.caused_by_ship_id where T1.location = 1 and T2.name = 1
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

easy pred: select count ( Continent ) from countries
easy gold: SELECT count(*) FROM CONTINENTS;

medium pred: select T1.Continent , T5.Make from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country join model_list as T4 on T3.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model
medium gold: SELECT ContId ,  Continent FROM CONTINENTS;

medium pred: select CountryId , CountryName from countries
medium gold: SELECT T1.ContId ,  T1.Continent , * FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent;

medium pred: select CountryName , count ( * ) from countries group by Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

medium pred: select T1.Continent , T3.Id from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country
medium gold: Select FullName, ID From CAR_MAKERS;

medium pred: select T1.CountryName , T5.Id from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id
medium gold: Select Country, FullName, ID From CAR_MAKERS;

medium pred: select Continent , count ( * ) , count ( Continent ) from countries group by Continent
medium gold: SELECT count(*), T1.Country, T1.FullName, T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

medium pred: select CountryName , count ( * ) , count ( * ) from countries group by Continent
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

hard pred: select max ( Horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower DESC LIMIT 1;

hard pred: select min ( Horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

hard pred: select Horsepower from cars_data order by Weight desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:9
extra pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight < ( select avg ( Weight ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  >  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:10
extra pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight < ( select avg ( Weight ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

extra pred: select T2.Make from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where T1.Weight < ( select avg ( Weight ) from cars_data )
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

medium pred: select T2.Id , T4.Weight , T1.Model from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join car_names as T3 on T1.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
medium gold: Select T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

medium pred: select T1.Id , T4.Weight , T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
medium gold: Select T1.horsepower, T1.mpg, T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

extra pred: select T1.Id , T3.Make , T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
extra gold: SELECT T1.Maker, T4.horsepower, T4.mpg, T4.id, T2.model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

extra pred: select T1.Continent from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T5.Year = 1
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

medium pred: select T1.Model , T3.Weight from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id
medium gold: SELECT Make , Model from Car_Names;

medium pred: select T1.Model , T3.Horsepower , T3.Year from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id
medium gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId;

extra pred: select T1.Model , T3.Horsepower from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year = ( select max ( Year ) from cars_data )
extra gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

extra pred: select Year , Year from cars_data order by Year limit 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

easy pred: select Horsepower from cars_data
easy gold: SELECT DISTINCT model FROM MODEL_LIST;

medium pred: select T1.Model , T3.Year from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id
medium gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id;

hard pred: select T1.Model , T3.Year from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year > 1
hard gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

hard pred: select Horsepower from cars_data where Year > 1
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: select T4.Make , T1.CountryName from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model
medium gold: Select T1.Maker, T2.CountryName from Car_Makers as T1 JOIN Countries as T2 on T1.Country = T2.CountryId;

medium pred: select CountryName , CountryName from countries
medium gold: SELECT T1.Continent,  T3.Maker, T2.CountryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country;

hard pred: select CountryName , count ( * ) from countries group by CountryName
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

medium pred: select Continent , count ( * ) from countries group by Continent
medium gold: SELECT *, count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country;

extra pred: select CountryName from countries group by CountryName order by count ( * ) asc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) ASC LIMIT 1;

extra pred: select CountryName from countries group by CountryName order by count ( * ) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

easy pred: select count ( * ) from countries
easy gold: Select Count(*) FROM CAR_MAKERS;

medium pred: select T1.Continent , T4.Make , T2.Id from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model
medium gold: SELECT FullName, id FROM CAR_MAKERS;

medium pred: select T1.Continent , T4.Make , T2.Id from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model
medium gold: SELECT T1.Model ,  T2.FullName, T2.id  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id;

medium pred: select T2.Continent , count ( * ) , sum ( T1.Continent ) from continents as T1 join countries as T2 on T1.ContId = T2.Continent group by T1.ContId
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

eval_err_num:11
medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.* = 1
medium gold: SELECT T1.ID FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:12
medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.* = 1
medium gold: SELECT T1.Horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:13
medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.* = 1
medium gold: SELECT T1.MPG FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

medium pred: select T1.Horsepower from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where T2.Model = 1
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

easy pred: select Country from car_makers
easy gold: SELECT distinct Maker FROM CAR_MAKERS;

medium pred: select CountryName from countries
medium gold: SELECT T1.Maker, T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId;

medium pred: select CountryName from countries where CountryName = 1
medium gold: SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

medium pred: select count ( * ) from countries where CountryName = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

easy pred: select count ( * ) from car_makers
easy gold: SELECT count(*) FROM MODEL_LIST;

hard pred: select count ( * ) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T1.CountryName = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Germany';

hard pred: select count ( * ) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T1.CountryName = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'japan';

hard pred: select count ( * ) from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where T1.CountryName = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:14
easy pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
easy gold: SELECT * FROM CARS_DATA WHERE YEAR  =  1974;

medium pred: select T1.Model , T3.Horsepower from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE YEAR  =  1974;

medium pred: select T1.Model , T2.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974;

hard pred: select min ( Weight ) from cars_data where Year = 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

hard pred: select CountryName from countries
hard gold: Select CountryName FROM COUNTRIES where CountryID not in (Select Country from CAR_MAKERS);

medium pred: select CountryName from countries
medium gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: select CountryName , CountryId from countries where CountryId not in ( select Continent from continents )
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: select Continent , CountryName from countries
medium gold: SELECT T3.Maker, T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country;

hard pred: select Continent , count ( * ) from countries group by Continent
hard gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country GROUP BY T1.CountryName;

extra pred: select CountryName from countries where CountryName = 1 group by Continent
extra gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName;

extra pred: select CountryName from countries where CountryName = 1 group by Continent having count ( * ) > = 1
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

medium pred: select T1.Model , T3.Horsepower from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:15
medium pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  8;

medium pred: select Horsepower from cars_data where Horsepower = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3;

extra pred: select max ( Horsepower ) from cars_data where Horsepower = 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Weight desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY horsepower DESC LIMIT 1;

medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Weight desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1;

hard pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Weight desc limit 1
hard gold: SELECT T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

hard pred: select Horsepower from cars_data order by Weight desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

easy pred: select avg ( Horsepower ) from cars_data
easy gold: SELECT avg(edispl) FROM CARS_DATA;

medium pred: select T3.Make , avg ( T3.Make ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Id
medium gold: SELECT T1.Make, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Make;

medium pred: select T1.Id , avg ( T4.Horsepower ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Id
medium gold: SELECT T1.Model, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Model;

medium pred: select avg ( T3.Horsepower ) , T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id group by T2.Model
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

easy pred: select Model from model_list
easy gold: SELECT distinct Model from CAR_NAMES;

medium pred: select T1.Model , T3.Weight from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id
medium gold: SELECT Model, Make FROM CAR_NAMES;

medium pred: select count ( * ) , T1.Model from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id group by T1.Model
medium gold: SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model;

hard pred: select Make from car_names group by Model order by count ( * ) desc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

easy pred: select Make from car_names
easy gold: SELECT FullName FROM CAR_MAKERS;

medium pred: select T1.Continent , T4.Make , T5.Horsepower from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select T4.Make , T5.Horsepower from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T1.CountryName = 1
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

medium pred: select count ( * ) from countries where CountryName = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

easy pred: select * from model_list where Maker = 1
easy gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select * from car_makers where FullName > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  1;

medium pred: select Maker from car_makers where FullName > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

medium pred: select T3.Make , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T1.FullName > 1
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

hard pred: select count ( T1.Model ) from model_list as T1 join car_names as T2 on T1.Model = T2.Model where T2.Make = 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id WHERE T3.FullName  =  'General Motors';

hard pred: select count ( T1.Model ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where T2.FullName > 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T1.MakeId  =  T3.Id WHERE T3.weight > 3500;

extra pred: select count ( T1.Model ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join car_names as T3 on T1.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T2.FullName = 1 and T4.Horsepower > 1
extra gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

extra pred: select T2.Model from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where T2.Make = 1 and T1.Horsepower > 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

easy pred: select Year from cars_data where Weight > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  <  4000;

medium pred: select Year from cars_data where Weight > 1 or Weight < 1
medium gold: SELECT DISTINCT Year FROM CARS_DATA WHERE Weight  >  3000 AND Weight  <  4000;

medium pred: select min ( Accelerate ) from cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate ASC LIMIT 1;

medium pred: select min ( Accelerate ) from cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

hard pred: select T1.Id , T1.Maker , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Accelerate desc limit 1
hard gold: SELECT T1.ID, T2.Make, T2.Model FROM CARS_DATA as T1 JOIN CAR_NAMES as T2 ON T1.ID = T2.MakeID ORDER BY T1.accelerate DESC LIMIT 1;

medium pred: select T1.Id , T4.Horsepower from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Accelerate desc limit 1
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

eval_err_num:16
medium pred: select T2.* from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where T1.Model = 1
medium gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo';

extra pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T1.Model = 1 order by T3.Accelerate asc limit 1
extra gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select Horsepower from cars_data order by Accelerate asc limit 1
extra gold: SELECT T1.horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select count ( * ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where T1.Model = 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

medium pred: select max ( Weight ) from cars_data
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

medium pred: select Accelerate from cars_data order by Weight desc limit 1
medium gold: SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

hard pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight > ( select max ( Horsepower ) from cars_data )
hard gold: SELECT id FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: select count ( * ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight > ( select max ( Horsepower ) from cars_data )
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: select CountryName from countries except select CountryName from countries
hard gold: SELECT CountryName FROM COUNTRIES where CountryId not in (SELECT T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country);

easy pred: select CountryName from countries except select CountryName from countries
easy gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country;

easy pred: select count ( * ) from countries ( select CountryName from countries group by CountryName having count ( * ) > 1 )
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  1 );

easy pred: select CountryName from countries group by Continent having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

medium pred: select Horsepower , Weight from cars_data
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

medium pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight = 1
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4;

extra pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Weight limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower ASC LIMIT 1;

extra pred: select Horsepower from cars_data order by Weight desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

easy pred: select min ( Weight ) from cars_data
easy gold: SELECT min(Horsepower) FROM CARS_DATA;

extra pred: select T1.Id , T3.Make from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower > ( select min ( Weight ) from cars_data )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA);

extra pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight > = 1 intersect select T5.Id , T7.Make from car_makers as T5 join model_list as T6 on T5.Id = T6.Maker join car_names as T7 on T6.Model = T7.Model join cars_data as T8 on T7.MakeId = T8.Id where T8.Horsepower > = 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 5;

extra pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight > = 1 intersect select T5.Id , T7.Make from car_makers as T5 join model_list as T6 on T5.Id = T6.Maker join car_names as T7 on T6.Model = T7.Model join cars_data as T8 on T7.MakeId = T8.Id where T8.Horsepower > 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 3;

medium pred: select T1.Model , T3.Horsepower from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Year > 1
medium gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE YEAR  <  1980;

extra pred: select Year , Weight from cars_data where Year > 1
extra gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980;

extra pred: select max ( Horsepower ) , max ( Weight ) from cars_data where Year < 1
extra gold: SELECT accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY accelerate DESC LIMIT 1;

extra pred: select max ( Horsepower ) , max ( Weight ) from cars_data where Year < 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

medium pred: select * from car_names where Model = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName = 'Ford Motor Company';

medium pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model where T2.Model = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName != 'Ford Motor Company';

extra pred: select T1.Model , T3.Weight , T3.Weight from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T2.Model = 1
extra gold: SELECT T1.model, T2.Make, T3.weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'

extra pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight > 1
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

easy pred: select CountryName from countries
easy gold: SELECT distinct T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:17
hard pred: select T3.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T1.Id not in ( select Id from cars_data )
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

medium pred: select T1.Id , T3.Make , T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id
medium gold: SELECT T1.Id ,  T1.Maker, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select T4.Id , T1.Maker , count ( * ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Id
medium gold: SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

medium pred: select T1.Id , T3.Make , T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Id having count ( * ) > = 1
medium gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2;

eval_err_num:18
extra pred: select T1.Id , T3.Make from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Id having count ( * ) > 1 union select T4.Id , T6.Make , T7.Weight from car_makers as T7 join model_list as T5 on T7.Id = T5.Maker join car_names as T6 on T5.Model = T6.Model join cars_data as T7 on T6.MakeId = T7.Id group by T4.Id having count ( * ) > 1
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

easy pred: select count ( minutes ) from matches
easy gold: SELECT count(*) FROM matches

medium pred: select avg ( T1.minutes ) , min ( T1.minutes ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id where T3.ranking_points = 1
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

easy pred: select count ( winner_name ) from matches
easy gold: SELECT count(DISTINCT tourney_name) FROM matches

easy pred: select winner_name from matches group by winner_name having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  20

easy pred: select winner_name from matches group by winner_name having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

easy pred: select count ( winner_entry ) from matches where year = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE year = 2013

easy pred: select count ( * ) from matches where year = 1 and year = 1
easy gold: SELECT count(*) FROM (SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016)

hard pred: select T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.year = 1 and T2.year = 1
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

easy pred: select count ( minutes ) from matches
easy gold: SELECT count(*) FROM matches

easy pred: select count ( * ) from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.first_name = 1
easy gold: SELECT count(*) FROM matches WHERE loser_hand = "L"

medium pred: select count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id where T1.year = 1 and T1.year = 1
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

easy pred: select count ( * ) from rankings
easy gold: SELECT count(*) FROM players

medium pred: select T2.year , T2.year , T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.winner_entry = 1 and T2.winner_entry = 1
medium gold: SELECT T1.last_name, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships'

medium pred: select T1.first_name , T2.year , T1.country_code from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.winner_entry = 1
medium gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships'

extra pred: select T1.last_name , T2.year from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.winner_entry = 1 and T2.year = 1
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

medium pred: select birth_date from players order by birth_date asc limit 1
medium gold: SELECT birth_date FROM players ORDER BY birth_date DESC LIMIT 1

medium pred: select T2.player_id , T1.last_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id order by T1.birth_date asc limit 1
medium gold: SELECT player_id ,  last_name FROM players ORDER BY birth_date LIMIT 1

medium pred: select T2.player_id , T1.last_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id order by T1.birth_date asc limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

easy pred: select T1.hand from players as T1 join rankings as T2 on T1.player_id = T2.player_id where T1.hand = 1 and T2.ranking_points = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'L'

medium pred: select T2.winner_entry , T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.first_name = 1 and T1.last_name = 1
medium gold: SELECT country_code ,  birth_date FROM players WHERE hand  =  'L'

medium pred: select T2.winner_entry , T1.birth_date , T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.first_name = 1 order by T1.birth_date
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

easy pred: select count ( * ) from rankings
easy gold: SELECT count(*) FROM players

hard pred: select count ( * ) from matches ( select winner_name from matches group by winner_name order by count ( * ) asc limit 1 )
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours ASC LIMIT 1

hard pred: select count ( * ) from matches group by winner_name order by count ( * ) desc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select T1.first_name , T1.country_code from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.winner_name order by count ( * ) desc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

easy pred: select count ( minutes ) from matches
easy gold: SELECT count(*) FROM matches

hard pred: select winner_entry from matches group by winner_entry order by count ( * ) desc limit 1
hard gold: SELECT surface FROM matches GROUP BY surface ORDER  BY count(*) DESC LIMIT 1

hard pred: select T1.year from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id order by count ( * ) desc limit 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.first_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.player_id order by count ( * ) desc limit 1
hard gold: SELECT loser_name FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T2.loser_rank_points , T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T1.birth_date desc limit 1
hard gold: SELECT loser_name, loser_rank_points FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.first_name , T2.ranking_points from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.player_id order by count ( * ) desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.first_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id order by T2.ranking_points desc limit 1
medium gold: SELECT loser_name FROM matches ORDER BY loser_rank_points DESC LIMIT 1

hard pred: select T1.first_name , T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id join rankings as T3 on T1.player_id = T3.player_id where T2.winner_rank = 1 order by T3.ranking_points desc limit 1
hard gold: SELECT loser_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY loser_rank_points DESC LIMIT 1

hard pred: select T1.first_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id order by T2.ranking_points desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: select year from matches order by year asc limit 1
medium gold: SELECT minutes FROM matches ORDER BY minutes ASC LIMIT 1

medium pred: select max ( minutes ) from matches
medium gold: SELECT minutes FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select T2.winner_entry , T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.score asc limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select T2.winner_name , T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id
medium gold: SELECT T2.tours, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select avg ( ranking_points ) from rankings
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.first_name , count ( * ) from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.player_id
medium gold: SELECT tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.first_name , avg ( T2.loser_rank_points ) from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.winner_name
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select sum ( T2.ranking_points ) , T1.first_name , T1.first_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.player_id
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

easy pred: select count ( * ) , country_code from players group by country_code
easy gold: SELECT count(*) FROM players GROUP BY country_code

hard pred: select T1.country_code from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code order by count ( * ) asc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.surface , count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.surface
medium gold: SELECT count(*), hand FROM players GROUP BY hand

medium pred: select T1.country_code , count ( * ) from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code

medium pred: select country_code from players group by country_code having count ( * ) > 1
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code HAVING count(*) > 50

easy pred: select T1.country_code from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code having count ( * ) > 1
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

medium pred: select first_name from players order by birth_date asc limit 1
medium gold: SELECT DISTINCT loser_name FROM matches ORDER BY loser_age DESC LIMIT 3

medium pred: select first_name from players order by birth_date asc limit 1
medium gold: SELECT DISTINCT winner_name FROM matches ORDER BY winner_age DESC LIMIT 3

medium pred: select T2.loser_rank_points , T3.ranking_points from players as T1 join matches as T2 on T1.player_id = T2.winner_id join rankings as T3 on T1.player_id = T3.player_id order by T1.birth_date asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

easy pred: select count ( * ) from players where country_code = 1
easy gold: SELECT count(DISTINCT loser_name) FROM matches WHERE tourney_name  =  'Australian Open'

easy pred: select count ( * ) from players where country_code = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Australian Open'

medium pred: select T2.winner_hand from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.country_code = 1 or T2.winner_entry = 1
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

easy pred: select T2.Age from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Conductor_ID in ( select Conductor_ID from orchestra )
easy gold: SELECT Age FROM conductor

easy pred: select * from conductor
easy gold: SELECT Record_Company FROM orchestra

medium pred: select Nationality from conductor where Nationality = 1
medium gold: SELECT Record_Company, Year_of_Founded FROM orchestra

easy pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Conductor_ID in ( select Conductor_ID from orchestra order by Year_of_Founded desc limit 1 )
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

easy pred: select Weekly_rank from performance
easy gold: SELECT Attendance FROM SHOW

easy pred: select T1.Name , T3.Share from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID join performance as T3 on T2.Orchestra_ID = T3.Orchestra_ID
easy gold: SELECT SHARE FROM performance

eval_err_num:19
easy pred: select T1.* from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID join performance as T3 on T2.Orchestra_ID = T3.Orchestra_ID where T3.Type = 1
easy gold: SELECT SHARE FROM performance WHERE TYPE != "Live final"

medium pred: select max ( Share ) , min ( Share ) from performance where Type = 1
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

easy pred: select T2.Year_of_Work from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Conductor_ID in ( select Conductor_ID from orchestra )
easy gold: SELECT Year_of_Work FROM conductor

easy pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID group by T1.Conductor_ID order by count ( * ) desc
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

easy pred: select T2.Year_of_Work from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Conductor_ID in ( select Conductor_ID from orchestra )
easy gold: SELECT Year_of_Work FROM conductor

medium pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID group by T1.Conductor_ID order by count ( * ) desc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

medium pred: select Name , Name from conductor
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

extra pred: select Name from conductor group by Name order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select Record_Company from orchestra except select Name from conductor
easy gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company

medium pred: select Name , count ( * ) from conductor group by Nationality
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

easy pred: select Type from performance
easy gold: SELECT Major_Record_Format FROM orchestra

medium pred: select Attendance from show order by Attendance asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

easy pred: select * from orchestra
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:20
hard pred: select T2.* from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID group by T1.Conductor_ID order by count ( * ) desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID group by T1.Conductor_ID
easy gold: SELECT Orchestra FROM orchestra

hard pred: select T1.Name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID join performance as T3 on T2.Orchestra_ID = T3.Orchestra_ID join show as T4 on T3.Performance_ID = T4.Performance_ID where T4.Show_ID not in ( select Conductor_ID from orchestra )
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

easy pred: select Name from conductor
easy gold: SELECT Record_Company FROM orchestra

easy pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Year_of_Founded > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003

easy pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Year_of_Founded > 1 and T1.Year_of_Founded > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

hard pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Year_of_Founded > 1 or T1.Year_of_Founded > 1
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

medium pred: select * from conductor where Name = 1 except select Name from conductor where Name = 1
medium gold: SELECT * FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select count ( * ) from conductor where Name = 1
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select Template_ID , Document_Description , Document_Description from Documents
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

medium pred: select Document_Name from Documents where Document_Name like 1
medium gold: SELECT document_name FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select Document_Name , Template_ID from Documents where Document_Name like 1
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select Document_ID , Document_Description , Document_Description from Documents where Document_Name = 1
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

medium pred: select Template_Type_Code , Template_Type_Code , Template_Type_Code from Templates
medium gold: SELECT T1.document_id, T2.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID

medium pred: select T1.Template_ID , T2.Template_Type_Code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where T2.Template_Type_Code = 1
medium gold: SELECT T1.document_id FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID where T2.Template_Type_Code  =  'PPT'

medium pred: select Template_Type_Code , Template_Type_Code from Templates
medium gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id

medium pred: select T2.Template_Type_Code , count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
medium gold: SELECT count(*), T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id

extra pred: select T2.Template_Type_Code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code order by count ( * ) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

easy pred: select Template_ID from Documents
easy gold: SELECT template_id FROM Templates

hard pred: select Template_ID from Documents where Template_ID not in ( select Template_ID from Documents )
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

easy pred: select * from Documents
easy gold: SELECT * FROM Templates

easy pred: select count ( * ) from Documents
easy gold: SELECT count(*) FROM Templates

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_id FROM Templates

medium pred: select Template_Type_Code , Template_Type_Code , Template_Type_Code from Templates
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_id FROM Templates

medium pred: select T1.Template_ID from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where T2.Template_Type_Code = 1
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

easy pred: select Template_Type_Code from Templates
easy gold: SELECT version_number FROM Templates

easy pred: select Template_Type_Code from Templates where Version_Number = 1
easy gold: SELECT version_number FROM Templates WHERE version_number  >  5

medium pred: select Template_Type_Code , Template_Type_Code from Templates where Version_Number > 1
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

medium pred: select T2.Template_Type_Code , count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

medium pred: select T2.Template_Type_Code , count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

hard pred: select T2.Template_Type_Code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code order by count ( * ) desc limit 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

medium pred: select T2.Template_Type_Code , count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

easy pred: select T2.Template_Type_Code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code having count ( * ) > 1
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

easy pred: select Template_Type_Code from Templates
easy gold: SELECT Version_Number FROM Templates

medium pred: select T2.Template_Type_Code , T1.Template_Type_Code , T1.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

medium pred: select Template_Type_Code , Template_Type_Code from Templates
medium gold: SELECT T2.document_name, T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: select Template_Type_Code from Templates where Template_Type_Code = 1
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

medium pred: select T2.Template_Type_Code , T1.Template_ID from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T1.template_type_code , T2.document_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

hard pred: select Template_Type_Code from Templates where Template_Type_Code not in ( select Template_Type_Code from Templates )
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_type_code FROM Ref_template_types

medium pred: select T1.Template_Type_Code , T2.Template_Type_Description from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

medium pred: select T1.Template_Type_Code , T2.Template_Type_Description from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

easy pred: select Template_Type_Code from Templates where Template_Type_Code = 1
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_type_code FROM Ref_template_types

medium pred: select T1.Template_Type_Code , T2.Template_Type_Description from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code , template_type_description FROM Ref_template_types

easy pred: select T1.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Description = 1
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

medium pred: select Template_Type_Code , Template_Type_Code from Templates
medium gold: select T2.Template_ID, T1.template_type_code from Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.template_ID

medium pred: select Template_Type_Code , Template_Type_Code from Templates
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: select Template_Type_Code from Templates
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

easy pred: select Template_ID from Documents
easy gold: SELECT template_id from Templates

medium pred: select T1.Template_Type_Code , T2.Template_Type_Description from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT T2.template_id, T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code

medium pred: select Template_Type_Code from Templates where Template_Details = 1
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

easy pred: select Paragraph_Text from Paragraphs
easy gold: SELECT * FROM Paragraphs

easy pred: select count ( * ) from Documents
easy gold: SELECT count(*) FROM Paragraphs

easy pred: select Document_ID from Paragraphs
easy gold: SELECT paragraph_id FROM Paragraphs

medium pred: select T2.Document_ID , T1.Document_Name from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID
medium gold: SELECT T1.paragraph_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID

medium pred: select T2.Document_ID from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 1
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select count ( * ) from Documents where Document_Name = 1
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select T3.Paragraph_Text , T1.Template_Details from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID join Paragraphs as T3 on T2.Document_ID = T3.Document_ID
medium gold: SELECT Other_Details, paragraph_text FROM Paragraphs

easy pred: select T1.Template_Details from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID join Paragraphs as T3 on T2.Document_ID = T3.Document_ID where T3.Paragraph_Text like 1
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

medium pred: select T1.Document_ID , T3.Template_Type_Description from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID join Ref_Template_Types as T3 on T2.Template_Type_Code = T3.Template_Type_Code
medium gold: SELECT paragraph_id ,  paragraph_text FROM Paragraphs

medium pred: select Document_Name , Document_Description , Document_Description from Documents
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text, T2.Document_Name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select T1.Document_ID , T2.Paragraph_Text from Documents as T1 join Paragraphs as T2 on T1.Document_ID = T2.Document_ID where T1.Document_Name = 1
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

medium pred: select Document_Name , Document_Name from Documents
medium gold: SELECT T1.paragraph_text, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select Document_Name from Documents where Document_Name = 1
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Template_ID , count ( * ) from Documents group by Template_ID
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id

medium pred: select Document_ID from Documents group by Template_ID order by count ( * )
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select Document_ID from Documents
medium gold: SELECT document_id ,  document_name FROM Documents

medium pred: select Document_ID , Document_Name , count ( * ) from Documents group by Template_ID
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Template_ID , count ( * ) from Documents group by Template_ID
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select Template_ID from Documents group by Template_ID having count ( * ) > = 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

medium pred: select Template_ID , Document_Name from Documents
medium gold: SELECT document_id ,  document_name FROM Documents

medium pred: select Template_ID , Document_Name , Template_ID from Documents
medium gold: SELECT T1.document_id ,  T2.document_name , T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select Template_ID , Document_Name , count ( * ) from Documents group by Template_ID
medium gold: SELECT T1.document_id ,  T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

eval_err_num:21
extra pred: select Template_ID , Document_Name from Documents order by paragraphs desc limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Template_ID , count ( * ) from Documents group by Template_ID
medium gold: SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id

medium pred: select Template_ID from Documents group by Template_ID order by count ( * )
medium gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*)

hard pred: select Template_ID from Documents group by Template_ID order by count ( * ) asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Template_ID , count ( * ) from Documents group by Template_ID
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select Template_ID from Documents group by Template_ID having count ( * ) between 1 and 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

medium pred: select Name , Age , Age from singer
medium gold: SELECT name ,  country ,  age FROM singer

medium pred: select Name , Age , Age from singer order by Age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

easy pred: select Age from singer where Is_male = 1
easy gold: select age from singer

medium pred: select avg ( Age ) , min ( Age ) , min ( Age ) from singer where Country = 1
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

easy pred: select Name from stadium
easy gold: select song_name from singer

medium pred: select T2.Name , T1.Year from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT song_name ,  song_release_year FROM singer

medium pred: select T2.Name , T1.Year from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T1.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID order by T4.Age
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age

medium pred: select T2.Name , T1.Year from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T1.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID order by T4.Age asc limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

easy pred: select T4.Country from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T1.Average > 1
easy gold: SELECT country FROM singer WHERE age  >  20

easy pred: select T4.Country from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T1.Average > 1
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

hard pred: select T1.Name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T4.Age < ( select avg ( Age ) from singer )
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

medium pred: select Year from concert where Year = 1 or Year = 1
medium gold: SELECT * FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select count ( * ) from concert where Year = 1 and Year = 1
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select Name , count ( * ) from stadium group by Stadium_ID
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

extra pred: select T2.Name , T2.Capacity from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID where T1.Year > = 1 order by T2.Capacity desc
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC

extra pred: select T2.Name , T2.Capacity from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID where T1.Year > = 1 group by T2.Name order by count ( * ) desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.Year from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID order by T2.Highest desc
medium gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC

easy pred: select Stadium_ID from stadium
easy gold: SELECT stadium_id FROM concert

hard pred: select Country from singer where Age < 1 intersect select Country from singer where Age < 1
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

medium pred: select T2.Name , T1.Theme from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT concert_name ,  theme from concert

medium pred: select T2.Name , T1.Theme , count ( * ) from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID group by T1.concert_ID
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

medium pred: select T3.Name , count ( * ) from concert as T1 join singer_in_concert as T2 on T1.concert_ID = T2.concert_ID join singer as T3 on T2.Singer_ID = T3.Singer_ID group by T1.concert_ID
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

extra pred: select T2.Name , T2.Location from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID where T1.Year > 1 and T1.Year = 1
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

medium pred: select Name from singer where Birth_Year > = 1 and Birth_Year > = 1
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

medium pred: select Name , Citizenship , count ( * ) from singer group by Citizenship
medium gold: SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship

medium pred: select T1.Title from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID where T2.Net_Worth_Millions > 1
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID WHERE t2.Sales > 300000

medium pred: select T1.Title from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID where T2.Net_Worth_Millions > 1
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

medium pred: select T1.Name , T2.Highest_Position from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID
medium gold: SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

medium pred: select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID having count ( * ) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

medium pred: select Title from song
medium gold: SELECT title, Sales from song

medium pred: select Title , Sales from song where Title = 1
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

easy pred: select Singer_ID from song group by Singer_ID having count ( * ) > = 1
easy gold: SELECT DISTINCT Singer_ID from song

hard pred: select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID where T2.Singer_ID not in ( select Singer_ID from song )
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

easy pred: select T1.District from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID join employee as T3 on T2.Employee_ID = T3.Employee_ID where T3.Age > 1
easy gold: SELECT city FROM employee WHERE age  <  30

medium pred: select T1.Location from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID join employee as T3 on T2.Employee_ID = T3.Employee_ID where T3.Age > 1 group by T3.City having count ( * ) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

easy pred: select count ( * ) from shop
easy gold: SELECT sum(number_products) FROM shop

extra pred: select T2.Name , T1.Employee_ID from hiring as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID group by T1.Employee_ID order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

easy pred: select Name from employee
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

extra pred: select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID order by T1.Year_awarded desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

hard pred: select T1.Employee_ID , T1.Employee_ID from hiring as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID join evaluation as T3 on T2.Employee_ID = T3.Employee_ID order by T3.Year_awarded desc limit 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

easy pred: select count ( Employee_ID ) from hiring
easy gold: SELECT count(distinct Employee_ID) FROM evaluation

easy pred: select Name from employee
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

hard pred: select Name from employee
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

easy pred: select count ( * ) from shop
easy gold: SELECT count(distinct Shop_ID) FROM hiring

easy pred: select Name from shop
easy gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id

extra pred: select T2.Name from hiring as T1 join shop as T2 on T1.Shop_ID = T2.Shop_ID join employee as T3 on T1.Employee_ID = T3.Employee_ID group by T1.Employee_ID order by count ( * ) desc limit 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

hard pred: select Name from shop except select Name from shop
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

easy pred: select count ( * ) from employee
easy gold: SELECT count(*) FROM hiring

medium pred: select Name , count ( * ) from shop group by Shop_ID
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

medium pred: select Name from visitor where Level_of_membership < = 1 except select Name from visitor where Level_of_membership < = 1
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

medium pred: select Name , Level_of_membership from visitor where Age > 1
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

medium pred: select Name from museum group by Museum_ID order by avg ( Num_of_Staff ) desc limit 1
medium gold: SELECT name FROM museum ORDER BY num_of_staff DESC LIMIT 1

easy pred: select Name from museum where Open_Year < 1
easy gold: SELECT name FROM museum WHERE open_year  >  2010

easy pred: select min ( Num_of_Staff ) from museum where Open_Year < 1
easy gold: SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010

hard pred: select T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.ID not in ( select T4.Museum_ID from visit as T4 join museum as T5 on T4.Museum_ID = T5.Museum_ID where T5.Open_Year < 1 )
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

easy pred: select T1.Name , T3.Num_of_Staff from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID
easy gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id

medium pred: select T1.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID group by T2.Museum_ID having count ( * ) > 1
medium gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

medium pred: select Name , Age , ID from visitor group by ID having count ( * ) > = 1
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

extra pred: select Name from visitor
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

extra pred: select T1.ID , T1.Level_of_membership from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID where T2.Total_spent = ( select max ( Total_spent ) from visit )
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

medium pred: select Museum_ID , Name , count ( * ) from museum group by Museum_ID
medium gold: SELECT t2.Museum_ID ,  t1.name, count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID

extra pred: select Museum_ID , Name from museum group by Museum_ID order by count ( * ) desc limit 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

extra pred: select count ( * ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.ID not in ( select Museum_ID from visit )
extra gold: SELECT count(*) FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

hard pred: select Name from museum except select Name from museum
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:22
easy pred: select count ( * )
easy gold: SELECT sum(num_of_ticket) FROM visit

medium pred: select T1.ID from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID order by T2.Num_of_Ticket desc limit 1
medium gold: SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1

hard pred: select T1.Name , T1.Age from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID where T2.Num_of_Ticket = ( select max ( Num_of_Ticket ) from visit )
hard gold: SELECT t1.name,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

easy pred: select sum ( Num_of_Ticket ) from visit
easy gold: SELECT max(Total_spent) FROM visit

medium pred: select avg ( Total_spent ) , max ( Total_spent ) from visit
medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit

medium pred: select T2.Num_of_Ticket from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID where T1.Level_of_membership = 1
medium gold: SELECT t2.Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

medium pred: select sum ( T2.Num_of_Ticket ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID where T1.Level_of_membership = 1
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

extra pred: select T1.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T3.Open_Year > 1 intersect select T4.Name from visitor as T4 join visit as T5 on T4.ID = T5.visitor_ID join museum as T6 on T5.Museum_ID = T6.Museum_ID where T6.Open_Year = 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

medium pred: select count ( * ) from museum where Open_Year > 1
medium gold: SELECT count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010

extra pred: select count ( T1.Name ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T3.Open_Year > 1
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

easy pred: select count ( * ) from Likes where student_id in ( select student_id from Likes )
easy gold: SELECT count(*) FROM Highschooler

medium pred: select count ( * ) , T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.grade = 1 group by T1.student_id
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  11 OR grade  =  12

medium pred: select count ( * ) , T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.grade = 1 and T2.grade = 1 group by T1.student_id
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

hard pred: select T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T2.grade order by count ( * ) asc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) ASC LIMIT 1

hard pred: select T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T2.grade order by count ( * ) desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

easy pred: select count ( * ) from Likes
easy gold: SELECT count(*) FROM Highschooler

medium pred: select T2.grade , count ( * ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T2.grade
medium gold: SELECT grade, count(*) FROM Highschooler GROUP BY grade

easy pred: select * from Likes group by student_id having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  10

easy pred: select * from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T2.grade having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

easy pred: select T2.name , T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID
easy gold: SELECT name FROM highschooler

eval_err_num:23
medium pred: select friend , friend
medium gold: SELECT T2.name, T3.name FROM friend as T1 join highschooler as T2  on friend_id = T2.ID join highschooler as T3 on student_id = T3.ID

eval_err_num:24
medium pred: select friend , count ( * ) from Likes group by student_id
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

easy pred: select name , grade from Highschooler
easy gold: SELECT name FROM highschooler

medium pred: select T1.student_id , T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

extra pred: select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T1.student_id order by count ( * ) asc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) ASC LIMIT 1

extra pred: select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T1.student_id order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

easy pred: select count ( * ) from Likes ( select count ( * ) from Likes group by student_id having count ( * ) > 1 )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  > 5)

easy pred: select * from Likes group by student_id having count ( * ) > = 1
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 3)

eval_err_num:25
medium pred: select T3.* from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id group by T1.student_id having count ( * ) > 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:26
easy pred: select T1.* from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.* = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:27
hard pred: select count ( * ) where friend = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:28
hard pred: select friend from Friend where * = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:29
easy pred: select T1.* from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id where T3.* = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:30
hard pred: select friend where friend = 1
hard gold: SELECT T3.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.liked_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:31
hard pred: select friend , friend where friend = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:32
hard pred: select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where friend = 1 and T2.name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

easy pred: select student_id from Likes
easy gold: SELECT ID FROM highschooler

medium pred: select count ( * ) from Likes group by student_id
medium gold: SELECT student_id, count(*) FROM friend group by student_id

easy pred: select student_id from Likes group by student_id having count ( * ) > = 1
easy gold: SELECT student_id FROM Friend

hard pred: select student_id from Likes group by student_id having count ( * ) > = 1
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

easy pred: select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T1.student_id in ( select student_id from Likes )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 5)

easy pred: select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T1.student_id in ( select T3.student_id from Likes as T3 join Highschooler as T4 on T3.student_id = T4.ID group by T3.student_id having sum ( T4.grade ) > = 1 )
easy gold: SELECT distinct T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:33
hard pred: select friend.* where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id in ( select likes.student_id where likes.student_id ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) in
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

easy pred: select student_id from Likes
easy gold: SELECT student_id FROM Friend

eval_err_num:34
medium pred: select T3.student_id , T1.student_id , friend from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id
medium gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id

eval_err_num:35
extra pred: select T3.student_id , T1.student_id , friend from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id where T3.student_id not in ( select student_id from Likes )
extra gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id where T1.student_id in (SELECT liked_id FROM Likes)

eval_err_num:36
hard pred: select student_id , friend , friend from Likes group by student_id
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

easy pred: select count ( student_id ) from Likes
easy gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:37
easy pred: select friend from Friend where student_id not in ( select student_id from Likes )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:38
easy pred: select count ( friend ) from Friend where student_id not in ( select student_id from Likes )
easy gold: SELECT count (*) FROM (SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id)

eval_err_num:39
hard pred: select friend from Friend where student_id not in ( select student_id from Likes )
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:40
hard pred: select friend from Friend where student_id not in ( select student_id from Likes )
hard gold: SELECT name FROM Highschooler where ID not in (SELECT student_id FROM Likes)

eval_err_num:41
easy pred: select friend from Likes except select student_id from Likes
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:42
medium pred: select count ( * ) , friend group by friend
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

easy pred: select count ( * ) from Likes where student_id in ( select student_id from Likes )
easy gold: SELECT count(distinct student_id) FROM likes

easy pred: select name from Highschooler
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

extra pred: select count ( * ) from ( select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T1.student_id having count ( * ) < = 1 )
extra gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:43
extra pred: select friend , friend from Likes group by student_id order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:44
easy pred: select friend , friend
easy gold: SELECT name FROM highschooler

eval_err_num:45
medium pred: select T3.* , friend , count ( * ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id group by T1.student_id
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  1

eval_err_num:46
medium pred: select friend , friend , count ( * ) from Likes group by student_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:47
medium pred: select friend , friend
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:48
medium pred: select friend , friend from Likes where student_id in ( select student_id from Likes )
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select T1.student_id , T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T1.student_id having count ( * ) > = 1
medium gold: SELECT T2.name, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

hard pred: select name from Highschooler where grade > 1
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:49
easy pred: select * where friend = 1
easy gold: SELECT grade FROM highschooler where name = "Kyle"

eval_err_num:50
medium pred: select count ( * ) where friend = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:51
hard pred: select T2.name from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where friend = 1 and T1.* = 1
hard gold: SELECT T3.name  FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id JOIN Highschooler as T3 on T3.ID = T1.student_id WHERE T2.name  =  "Kyle"

eval_err_num:52
medium pred: select count ( * ) where friend = 1 or friend = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:53
medium pred: select T3.student_id , T2.* , T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id
medium gold: SELECT id, grade FROM highschooler

extra pred: select T3.student_id , avg ( T2.grade ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id where T1.student_id not in ( select student_id from Likes )
extra gold: SELECT avg(grade) FROM Highschooler WHERE id not IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: select T1.student_id , avg ( T2.grade ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T1.student_id not in ( select student_id from Likes )
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

easy pred: select Age from teacher
easy gold: SELECT Hometown FROM teacher

easy pred: select Hometown from teacher where Hometown = 1
easy gold: SELECT * FROM teacher WHERE Hometown != "Little Lever Urban Distric"

easy pred: select Age from teacher where Age < 1
easy gold: SELECT * FROM teacher WHERE Age  =  32

medium pred: select Age from teacher where Age = 1 or Age = 1
medium gold: SELECT * FROM teacher WHERE Age  =  32 OR Age  =  33

medium pred: select Name from teacher order by Age asc limit 1
medium gold: SELECT * FROM teacher ORDER BY Age ASC LIMIT 1

medium pred: select Hometown from teacher where Age = ( select max ( Age ) from teacher )
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

easy pred: select Hometown from teacher order by Hometown
easy gold: SELECT * FROM teacher order BY Hometown

easy pred: select Hometown , count ( * ) from teacher group by Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

hard pred: select count ( * ) , Hometown from teacher group by Hometown order by count ( * ) desc limit 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select Hometown , count ( * ) from teacher group by Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

easy pred: select * from course
easy gold: SELECT * FROM course_arrange

medium pred: select Course , Course from course group by Course
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

easy pred: select * from course
easy gold: SELECT * FROM course_arrange

hard pred: select T1.Name , T3.Course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID order by T3.Course
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

easy pred: select * from course
easy gold: SELECT * FROM course_arrange

hard pred: select T1.Name , T3.Course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID group by T3.Course
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

medium pred: select T1.Name , count ( * ) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select T1.Name , count ( * ) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID having count ( * ) > = 1
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

easy pred: select property_type_description from Ref_Property_Types
easy gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code

medium pred: select property_type_code from Ref_Property_Types
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

easy pred: select T1.state , T2.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
easy gold: SELECT * FROM area_code_state

easy pred: select count ( state ) from AREA_CODE_STATE
easy gold: SELECT count(*) FROM area_code_state

medium pred: select T2.contestant_name , T1.contestant_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number
medium gold: SELECT contestant_number ,  contestant_name FROM contestants

medium pred: select contestant_name from CONTESTANTS order by contestant_name desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

easy pred: select * from CONTESTANTS
easy gold: SELECT state FROM votes

medium pred: select vote_id , contestant_number from VOTES
medium gold: SELECT vote_id,  state FROM votes

medium pred: select contestant_number , phone_number , contestant_number from VOTES
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

medium pred: select T2.contestant_name , T1.contestant_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number order by T1.phone_number asc limit 1
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

easy pred: select contestant_name from CONTESTANTS
easy gold: SELECT * FROM votes

easy pred: select created from VOTES where state = 1
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

easy pred: select contestant_name from CONTESTANTS where contestant_name like 1
easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'

easy pred: select contestant_number from CONTESTANTS
easy gold: SELECT * FROM votes

easy pred: select contestant_number from CONTESTANTS
easy gold: SELECT state FROM votes

medium pred: select state from VOTES
medium gold: SELECT DISTINCT state ,  created FROM votes

easy pred: select contestant_name from CONTESTANTS
easy gold: SELECT * FROM votes

medium pred: select T2.contestant_name , T1.contestant_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number having T1.phone_number > = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

medium pred: select T2.contestant_name , T2.contestant_name from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number having T1.phone_number > = 1
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

easy pred: select contestant_name from CONTESTANTS
easy gold: SELECT * FROM votes

extra pred: select T2.contestant_name , T1.contestant_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number order by T1.vote_id asc
extra gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

extra pred: select T2.contestant_name , T2.contestant_name , count ( * ) from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number group by T1.contestant_number
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

easy pred: select contestant_name from CONTESTANTS
easy gold: SELECT * FROM votes

medium pred: select T2.phone_number from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T1.area_code = 1 or T1.area_code = 1
medium gold: SELECT * FROM votes WHERE state  =  'NY' OR state  =  'CA'

medium pred: select count ( * ) from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T2.state = 1 or T1.area_code = 1
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

hard pred: select T2.contestant_name from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number where T1.vote_id not in ( select * from VOTES )
hard gold: SELECT * FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

extra pred: select count ( contestant_name ) from CONTESTANTS
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

easy pred: select T1.state , T2.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
easy gold: SELECT * FROM area_code_state

easy pred: select contestant_number , state , contestant_number from VOTES
easy gold: SELECT * FROM votes

medium pred: select T1.area_code , count ( * ) from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state group by T2.state
medium gold: SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code

extra pred: select area_code from AREA_CODE_STATE group by area_code order by count ( * ) desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

easy pred: select contestant_name from CONTESTANTS
easy gold: SELECT * FROM votes

medium pred: select * from CONTESTANTS where contestant_name = 1 and contestant_name = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

medium pred: select T2.contestant_name , T1.state , T1.phone_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number where T2.contestant_name = 1
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

easy pred: select area_code from AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

hard pred: select T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number where T3.contestant_name = 1
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

extra pred: select T1.area_code from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number where T3.contestant_name = 1 and T3.contestant_name = 1
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

extra pred: select T5.department_description , count ( * ) from Transcript_Contents as T1 join Student_Enrolment_Courses as T2 on T1.student_course_id = T2.student_course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Degree_Programs as T4 on T3.degree_program_id = T4.degree_program_id join Departments as T5 on T4.department_id = T5.department_id group by T1.transcript_id order by sum ( T4.degree_summary_description ) desc limit 1
extra gold: SELECT T2.department_description ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T2.department_name , T3.student_id from Degree_Programs as T1 join Departments as T2 on T1.department_id = T2.department_id join Student_Enrolment as T3 on T1.degree_program_id = T3.degree_program_id group by T3.semester_id order by sum ( T1.degree_summary_description ) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

medium pred: select * from Departments where department_name = 1
medium gold: SELECT * FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select count ( * ) from Departments where department_name = 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select * from Student_Enrolment group by semester_id having count ( * ) = 1
medium gold: SELECT * FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  =  2

medium pred: select T3.course_name , T1.semester_id from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id group by T1.semester_id having count ( * ) > = 1
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

extra pred: select T2.first_name , T1.student_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.student_id order by count ( * ) asc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) ASC LIMIT 1

extra pred: select T2.middle_name , T1.student_id , count ( * ) from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.semester_id order by count ( * ) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:54
medium pred: select T1.* from Transcript_Contents as T1 join Student_Enrolment_Courses as T2 on T1.student_course_id = T2.student_course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Degree_Programs as T4 on T3.degree_program_id = T4.degree_program_id join Departments as T5 on T4.department_id = T5.department_id where T5.department_name like 1
medium gold: SELECT * FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select course_name from Courses where course_name like 1
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select count ( * ) from Student_Enrolment group by semester_id
medium gold: SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:55
medium pred: select T2.first_name , T2.last_name , T2.ssn from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id where T1.semester_id in ( select T5.semester_id from Courses as T5 join Student_Enrolment_Courses as T4 on T5.course_id = T4.course_id join Student_Enrolment as T5 on T4.student_enrolment_id = T5.student_enrolment_id where T3.course_description = 1 )
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

hard pred: select count ( * ) from Degree_Programs as T1 join Student_Enrolment as T2 on T1.degree_program_id = T2.degree_program_id join Student_Enrolment_Courses as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Courses as T4 on T3.course_id = T4.course_id where T1.degree_summary_description = 1
hard gold: SELECT DISTINCT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

hard pred: select T5.other_student_details , T5.cell_mobile_number , T4.course_name from Degree_Programs as T1 join Student_Enrolment as T2 on T1.degree_program_id = T2.degree_program_id join Student_Enrolment_Courses as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Courses as T4 on T3.course_id = T4.course_id join Students as T5 on T2.student_id = T5.student_id where T1.degree_summary_name = 1
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

extra pred: select course_description from Courses group by course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 3

extra pred: select T3.course_name from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id group by T1.semester_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T3.course_description from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id group by T1.semester_id order by count ( * ) asc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1

extra pred: select T3.course_name from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id group by T1.semester_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T3.semester_id , T1.course_description from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id group by T3.semester_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.student_id , T2.first_name , T2.last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 3

extra pred: select T1.student_id , T2.first_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

hard pred: select T3.course_description from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id where T1.semester_id in ( select semester_id from Student_Enrolment )
hard gold: SELECT semester_description FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

hard pred: select T2.first_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id where T1.semester_id in ( select semester_id from Student_Enrolment )
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

extra pred: select course_name from Courses group by course_name order by count ( * ) asc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) ASC LIMIT 1

extra pred: select count ( * ) , T1.course_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Semesters as T4 on T3.semester_id = T4.semester_id group by T1.course_name order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T3.course_name from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id group by T1.semester_id order by count ( * ) desc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

medium pred: select count ( * ) from Addresses where state_province_county = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina'

extra pred: select count ( T1.student_id ) from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Addresses as T3 on T2.permanent_address_id = T3.address_id where T3.state_province_county = 1
extra gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:56
extra pred: select T2.last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id where T1.student_id not in ( select T3.student_id from Student_Enrolment as T5 join Students as T4 on T5.student_id = T4.student_id join Addresses as T5 on T4.permanent_address_id = T5.address_id where T5.state_province_county = 1 )
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

medium pred: select T1.transcript_date , T4.semester_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id group by T4.semester_id having count ( * ) = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  = 2

medium pred: select T1.transcript_date , T4.semester_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id group by T4.semester_id having count ( * ) > = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

medium pred: select email_address from Students where first_name = 1 and last_name = 1
medium gold: SELECT current_address_id FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

medium pred: select T2.first_name , T2.last_name , T1.student_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id order by T2.date_first_registered limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered DESC LIMIT 1

medium pred: select first_name , last_name from Students where email_address = 1 order by date_first_registered limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: select first_name , last_name , last_name from Students order by date_left asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left DESC LIMIT 1

medium pred: select first_name , last_name from Students where date_first_registered = 1 order by date_first_registered limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

extra pred: select student_id from Student_Enrolment group by student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select count ( * ) from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T2.student_id in ( select student_id from Student_Enrolment )
extra gold: SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.transcript_id , count ( * ) from Transcript_Contents as T1 join Student_Enrolment_Courses as T2 on T1.student_course_id = T2.student_course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id group by T3.student_id
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

medium pred: select transcript_date from Transcripts
medium gold: SELECT other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select T4.date_left from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id where T1.course_name = 1 and T4.last_name = 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select date_first_registered from Students order by date_left desc limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

hard pred: select T1.semester_id , min ( T2.ssn ) from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.semester_id
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1

hard pred: select count ( * ) , T3.semester_id from Transcript_Contents as T1 join Student_Enrolment_Courses as T2 on T1.student_course_id = T2.student_course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id group by T3.semester_id order by count ( * ) desc limit 1
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T3.course_name from Transcript_Contents as T1 join Student_Enrolment_Courses as T2 on T1.student_course_id = T2.student_course_id join Courses as T3 on T2.course_id = T3.course_id group by T1.transcript_id order by count ( * ) asc limit 1
extra gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

extra pred: select T1.transcript_date , T4.student_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id group by T4.semester_id order by count ( * ) asc limit 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

medium pred: select T1.semester_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id where T2.first_name = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'

medium pred: select * from Students where first_name = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

extra pred: select T2.semester_name from Student_Enrolment as T1 join Semesters as T2 on T1.semester_id = T2.semester_id join Students as T3 on T1.student_id = T3.student_id where T3.first_name = 1 and T1.semester_id in ( select T4.semester_id from Student_Enrolment as T4 join Students as T5 on T4.student_id = T5.student_id where T5.first_name = 1 )
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

easy pred: select role_code from Professionals
easy gold: SELECT state FROM Professionals

hard pred: select T4.state from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T1.role_code = 1 intersect select state from Professionals where role_code = 1
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

easy pred: select * from Dogs
easy gold: SELECT age FROM Dogs

hard pred: select gender from Dogs where weight = ( select max ( weight ) from Dogs )
hard gold: SELECT * FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

hard pred: select weight from Dogs where age = ( select max ( age ) from Dogs )
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

easy pred: select * from Professionals
easy gold: SELECT * FROM Professionals WHERE role_code = 'Employee'

easy pred: select count ( * ) from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T1.role_code = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Connecticut'

easy pred: select count ( * ) from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T1.role_code = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Indiana'

medium pred: select role_code from Professionals where role_code = 1 intersect select * from Professionals where role_code = 1
medium gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1

extra pred: select T3.treatment_id , T4.last_name , T1.zip_code from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count ( * ) > 1 union select T8.first_name , T5.last_name from Professionals as T5 join Treatments as T6 on T5.professional_id = T6.professional_id join Dogs as T7 on T6.dog_id = T7.dog_id join Owners as T8 on T7.owner_id = T8.owner_id where T5.role_code = 1
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2 where T2.charge_amount > 1
medium gold: SELECT name FROM Treatments  AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 500

hard pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2 where T2.charge_amount > 1
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

hard pred: select T3.name , T1.last_name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id where T1.role_code = 1
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

easy pred: select T3.name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id where T1.first_name = 1
easy gold: SELECT name FROM Dogs

hard pred: select name from Dogs where name not in ( select T3.name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id where T1.first_name = 1 )
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

medium pred: select T1.first_name , T3.treatment_type_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Treatment_Types as T3 on T2.treatment_type_code = T3.treatment_type_code
medium gold: SELECT T1.first_name, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T1.professional_id , T1.first_name , T4.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id group by T2.professional_id
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.email_address, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

extra pred: select professional_id , first_name , email_address from Professionals group by professional_id having count ( * ) = 1
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select count ( * ) , T1.charge_id from Charges as T1 join Owners as T2 group by T2.owner_id
medium gold: SELECT T1.owner_id ,count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id

medium pred: select owner_id from Owners group by owner_id order by count ( * ) desc limit 1
medium gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name, count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id Having count(*) = 2

extra pred: select T2.owner_id from Charges as T1 join Owners as T2 where T1.charge_id = ( select T3.owner_id from Dogs as T3 join Charges as T4 group by T4.charge_id order by count ( * ) desc limit 1 )
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

medium pred: select count ( * ) from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.professional_id
medium gold: SELECT T1.professional_id , count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select first_name from Professionals group by professional_id having count ( * ) = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) = 1

medium pred: select first_name from Professionals group by professional_id having count ( * ) > = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) >= 2

medium pred: select T3.owner_id , T1.first_name , T1.first_name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id group by T1.professional_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

medium pred: select count ( * ) , T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.zip_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

medium pred: select T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.zip_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 2

medium pred: select T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.zip_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 1

extra pred: select T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.zip_code order by count ( * ) desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

hard pred: select T1.name , T2.cost_of_treatment from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id
hard gold: SELECT T1.owner_id, T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id

extra pred: select T2.first_name , T2.last_name , T1.weight from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id where T1.weight = ( select max ( weight ) from Dogs )
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

easy pred: select T4.size_code , T1.treatment_type_description from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Sizes as T4 on T3.size_code = T4.size_code
easy gold: SELECT * FROM Treatment_Types

extra pred: select T3.size_code , sum ( T1.charge_amount ) from Charges as T1 join Treatments as T2 join Sizes as T3 group by T2.treatment_type_code order by count ( * ) desc
extra gold: SELECT treatment_type_code, sum(cost_of_treatment) FROM Treatments group by treatment_type_code order by sum(cost_of_treatment) desc

extra pred: select T2.treatment_type_description , T2.treatment_type_description from Charges as T1 join Treatment_Types as T2 join Sizes as T3 group by T3.size_code order by sum ( T1.charge_amount ) desc
extra gold: SELECT T2.treatment_type_code, T1.treatment_type_description,  sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

extra pred: select T2.treatment_type_description , sum ( T1.charge_amount ) from Charges as T1 join Treatment_Types as T2 join Treatments as T3 group by T3.treatment_type_code order by sum ( T1.charge_amount ) desc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

medium pred: select count ( * ) from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id join Sizes as T3 on T2.size_code = T3.size_code where T3.size_description > 1
medium gold: SELECT count(name) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 700

hard pred: select T2.owner_id , T1.charge_amount from Charges as T1 join Owners as T2 where T1.charge_amount > 1 and T1.charge_amount > 1
hard gold: SELECT T1.owner_id ,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id Having sum(T3.cost_of_treatment) > 400

extra pred: select T2.owner_id , T1.charge_amount from Charges as T1 join Owners as T2 where T1.charge_amount > 1 order by T1.charge_amount desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

medium pred: select name , weight from Dogs
medium gold: SELECT T1.first_name, T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T1.first_name , T3.name , T3.weight , count ( * ) from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Breeds as T4 on T3.breed_code = T4.breed_code group by T4.breed_name
medium gold: SELECT T1.first_name, T2.treatment_type_code, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T1.first_name , T3.weight , T4.cell_number from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id group by T1.professional_id having count ( * ) = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  = 1

medium pred: select T1.professional_id , T4.home_phone from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id group by T1.professional_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

extra pred: select T1.first_name , T4.last_name , T3.weight from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id order by T2.cost_of_treatment asc limit 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT min(cost_of_treatment) FROM Treatments )

extra pred: select T1.name , T2.last_name , T1.weight from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id join Charges as T3 order by T3.charge_amount desc limit 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT max(cost_of_treatment) FROM Treatments )

extra pred: select T1.first_name , T4.last_name , avg ( T2.cost_of_treatment ) from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id group by T1.first_name order by avg ( T2.cost_of_treatment ) limit 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

medium pred: select count ( * ) , T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.zip_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

hard pred: select T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.zip_code order by count ( * ) desc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) DESC LIMIT 1

hard pred: select T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id group by T1.zip_code order by count ( * ) asc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) ASC LIMIT 1

extra pred: select last_name from Professionals group by zip_code order by count ( * ) asc limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

medium pred: select T1.name , T1.name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id where T2.city = 1
medium gold: SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

medium pred: select T1.name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id where T2.city = 1
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

eval_err_num:57
medium pred: select T2.* from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id order by T1.age asc limit 1
medium gold: SELECT * FROM Dogs order by age asc limit 1

extra pred: select T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id order by T1.age asc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

extra pred: select T2.first_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id order by T1.age asc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT min(age) FROM Dogs )

medium pred: select T4.city , T1.state from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id
medium gold: SELECT city, state FROM professionals

easy pred: select count ( * ) from Professionals where role_code = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Hawaii'

medium pred: select T4.email_address from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T1.role_code = 1 intersect select T8.email_address from Professionals as T5 join Treatments as T6 on T5.professional_id = T6.professional_id join Dogs as T7 on T6.dog_id = T7.dog_id join Owners as T8 on T7.owner_id = T8.owner_id where T5.role_code = 1
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

easy pred: select count ( * ) from Professionals where role_code = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Wisconsin'

medium pred: select T1.zip_code , T4.street , T1.role_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T1.role_code = 1 and T3.age < = 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE state = 'Wisconsin'

medium pred: select T1.role_code , T4.city from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T1.role_code like 1 group by T1.role_code order by count ( * ) asc limit 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

easy pred: select state from Professionals
easy gold: SELECT state FROM Owners

easy pred: select count ( * ) from Professionals where role_code = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Vermont'

medium pred: select T1.first_name , T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Breeds as T3 on T2.breed_code = T3.breed_code where T3.breed_name like 1
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

easy pred: select * from Dogs order by age desc
easy gold: SELECT age FROM Dogs ORDER BY age

easy pred: select count ( * ) from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id where T1.weight < 1
easy gold: SELECT count(*) FROM Dogs WHERE age  < 4

hard pred: select * from Dogs where age < ( select avg ( age ) from Dogs )
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

eval_err_num:58
easy pred: select T1.* from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id join Sizes as T3 on T2.size_code = T3.size_code order by T3.size_description asc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment ASC

eval_err_num:59
easy pred: select T1.* from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id join Sizes as T3 on T2.size_code = T3.size_code order by T3.size_description desc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment DESC

eval_err_num:60
medium pred: select T1.* from Treatments as T1 join Dogs as T2 on T1.dog_id = T2.dog_id join Sizes as T3 on T2.size_code = T3.size_code order by T3.size_description desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

easy pred: select * from Dogs
easy gold: SELECT count(*) FROM Dogs

hard pred: select count ( * ) from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id where T1.dog_id in ( select dog_id from Treatments )
hard gold: SELECT count(*) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

extra pred: select owner_id from Owners except select * from Owners
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

easy pred: select count ( * ) from Breeds where breed_name = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Arizona'

extra pred: select street from Owners except select T2.first_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id where T1.gender = 1
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

                     easy                 medium               hard                 extra                all                  joint_all           
count                481                  441                  145                  133                  1200                 421                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.372                0.138                0.069                0.030                0.212                0.078               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.594                0.357                0.438                0.328                0.461                0.000               
select(no AGG)       0.605                0.367                0.469                0.328                0.472                0.000               
where                0.420                0.324                0.208                0.145                0.315                0.000               
where(no OP)         0.490                0.352                0.292                0.242                0.374                0.000               
group(no Having)     0.462                0.415                0.444                0.404                0.422                0.000               
group                0.423                0.383                0.444                0.385                0.397                0.000               
order                0.562                0.424                0.579                0.633                0.543                0.000               
and/or               1.000                0.935                0.957                0.872                0.957                0.000               
IUEN                 0.000                0.000                0.200                0.000                0.065                0.000               
keywords             0.812                0.790                0.567                0.504                0.714                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.578                0.338                0.393                0.308                0.438                0.000               
select(no AGG)       0.588                0.347                0.421                0.308                0.448                0.000               
where                0.449                0.339                0.190                0.120                0.314                0.000               
where(no OP)         0.524                0.368                0.266                0.200                0.373                0.000               
group(no Having)     0.571                0.328                0.324                0.344                0.353                0.000               
group                0.524                0.303                0.324                0.328                0.332                0.000               
order                0.474                0.362                0.449                0.567                0.461                0.000               
and/or               0.985                0.964                0.964                0.916                0.968                0.000               
IUEN                 0.000                0.000                0.100                0.000                0.045                0.000               
keywords             0.856                0.697                0.469                0.459                0.654                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.586                0.347                0.415                0.318                0.449                1.000               
select(no AGG)       0.596                0.357                0.444                0.318                0.460                1.000               
where                0.434                0.331                0.199                0.131                0.314                1.000               
where(no OP)         0.507                0.360                0.278                0.219                0.374                1.000               
group(no Having)     0.511                0.366                0.375                0.372                0.384                1.000               
group                0.468                0.338                0.375                0.354                0.362                1.000               
order                0.514                0.391                0.506                0.598                0.499                1.000               
and/or               0.993                0.949                0.961                0.893                0.963                1.000               
IUEN                 1.000                1.000                0.133                1.000                0.053                1.000               
keywords             0.833                0.741                0.513                0.480                0.682                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                421                  421                  269                  88                   1                   

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.333                0.183                0.112                0.080                0.000               
