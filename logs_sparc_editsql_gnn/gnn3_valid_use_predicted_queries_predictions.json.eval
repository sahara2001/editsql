easy pred: select * from flights
easy gold: SELECT * FROM AIRLINES

easy pred: select T1.Airline from airlines as T1 join flights as T2 where T2.Airline = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select T1.Country from airlines as T1 join flights as T2 where T2.Airline = 1
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select T1.Abbreviation from airlines as T1 join flights as T2 where T2.Airline = 1
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select * from flights
easy gold: SELECT * FROM AIRLINES

easy pred: select count ( * ) from flights
easy gold: SELECT count(*) FROM AIRLINES

easy pred: select Airline from flights
easy gold: SELECT Airline FROM AIRLINES

easy pred: select T2.Airline from airlines as T1 join flights as T2 where T1.Abbreviation like 1
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

easy pred: select Abbreviation from airlines where Country = 1
easy gold: SELECT airline FROM AIRLINES WHERE Country  =  "USA"

easy pred: select count ( * ) from airlines as T1 join flights as T2 where T1.Country = 1
easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"

medium pred: select T2.City , T1.Country from airlines as T1 join airports as T2
medium gold: SELECT City ,  Country FROM AIRPORTS

medium pred: select T2.City , T1.Country from airlines as T1 join airports as T2 where T2.AirportName = 1
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

easy pred: select T2.AirportName from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T1.SourceAirport = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

easy pred: select AirportCode from airports where City = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

easy pred: select * from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select count ( * ) from flights where FlightNo = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select T1.FlightNo from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.Countryabbrev = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "ATO"

easy pred: select count ( * ) from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.Countryabbrev = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:1
medium pred: select T1.* from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:2
medium pred: select T1.* from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:3
medium pred: select T1.* from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

hard pred: select * from flights where SourceAirport = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

hard pred: select count ( * ) from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

medium pred: select * from flights where Airline = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

medium pred: select count ( * ) from flights where Airline = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

easy pred: select FlightNo from flights
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

easy pred: select count ( * ) from flights where Airline = 1
easy gold: SELECT count(*) FROM AIRLINES WHERE Airline  =  "United Airlines"

medium pred: select count ( * ) from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

easy pred: select FlightNo from flights
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

medium pred: select * from flights where Airline = 1
medium gold: SELECT * FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

medium pred: select count ( * ) from flights where Airline = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

hard pred: select Airline from flights where FlightNo = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

hard pred: select count ( * ) from flights where FlightNo = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

easy pred: select City from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

hard pred: select T2.City from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode order by T1.FlightNo
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select T2.City from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode group by T1.FlightNo order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

easy pred: select City from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport

eval_err_num:4
hard pred: select T2.City from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode group by T1.FlightNo order by count ( T2.* )
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select T2.City from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode group by T1.FlightNo order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

easy pred: select AirportName from airports
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: select T2.AirportName , T1.Airline from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

extra pred: select T2.AirportName from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode group by T1.FlightNo order by count ( * ) desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

easy pred: select AirportName from airports
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: select T2.AirportName , T1.Airline from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

extra pred: select Airline from flights group by FlightNo order by count ( * ) asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

medium pred: select count ( * ) , Airline from flights group by Airline
medium gold: SELECT count(*) ,  T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline

extra pred: select Airline from flights group by Airline order by count ( * ) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

medium pred: select T2.Airline , T1.Country from airlines as T1 join flights as T2
medium gold: SELECT Abbreviation ,  Country FROM AIRLINES

hard pred: select T2.Airline , T1.Country from airlines as T1 join flights as T2 group by T2.Airline order by count ( * )
hard gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*)

extra pred: select T2.Airline , T1.Country from airlines as T1 join flights as T2 group by T2.Airline order by count ( * ) asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

easy pred: select * from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "AHD"

medium pred: select Airline from flights where Airline = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

easy pred: select Airline from flights where Airline = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "AHD"

medium pred: select Airline from flights where Airline = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

medium pred: select Airline from flights where FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

extra pred: select Airline from flights where Airline = 1 and Airline = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

medium pred: select Airline from flights where Airline = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

extra pred: select * from flights where Airline != 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

easy pred: select * from flights
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: select Airline from flights group by Airline having count ( * ) > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

easy pred: select * from flights
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: select T1.Airline from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.AirportName < 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

easy pred: select Airline from flights
easy gold: SELECT FlightNo FROM FLIGHTS

medium pred: select T2.Airline from airlines as T1 join flights as T2 where T1.Country = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

easy pred: select Airline from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select Airline from flights where FlightNo = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select Airline from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select Airline , Airline from flights where SourceAirport = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

easy pred: select Airline from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select Airline from flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode

medium pred: select Airline from flights where FlightNo = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

easy pred: select Airline from flights
easy gold: SELECT FlightNo FROM FLIGHTS

easy pred: select Airline from flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode

medium pred: select T1.Airline from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select T1.FlightNo from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1
medium gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen"

hard pred: select T1.Airline from flights as T1 join airports as T2 on T1.DestAirport = T2.AirportCode where T2.City = 1 or T2.City = 1
hard gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: select count ( * ) from airports where City = 1 or City = 1
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

easy pred: select * from airports
easy gold: SELECT SourceAirport FROM Flights

hard pred: select AirportCode , AirportName from airports
hard gold: SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights

hard pred: select AirportCode from airports where AirportCode not in ( select AirportName from airports )
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

easy pred: select PetType from Pets where weight > 1
easy gold: SELECT * FROM pets WHERE weight  >  10

easy pred: select count ( PetType ) from Pets where weight > 1
easy gold: SELECT count(*) FROM pets WHERE weight  >  10

easy pred: select PetType from Pets order by pet_age
easy gold: SELECT * FROM pets ORDER BY pet_age

easy pred: select PetType from Pets order by pet_age desc limit 1
easy gold: SELECT weight FROM pets ORDER BY pet_age

medium pred: select PetType from Pets order by pet_age asc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

easy pred: select pet_age from Pets
easy gold: SELECT DISTINCT petType FROM pets

medium pred: select pet_age , max ( weight ) from Pets group by pet_age
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

medium pred: select T1.PetType from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T3.Age > 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select count ( T1.PetType ) from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T3.Age > 1
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select * from Student where Sex = 1 and StuID in ( select StuID from Student )
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'

hard pred: select count ( * ) from Student where Sex = 1 and StuID in ( select T3.StuID from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.pet_age = 1 )
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

easy pred: select pet_age from Pets
easy gold: SELECT DISTINCT pettype FROM pets

easy pred: select count ( pet_age ) from Pets
easy gold: SELECT count(DISTINCT pettype) FROM pets

easy pred: select Fname from Student group by Fname
easy gold: SELECT DISTINCT T1.Fname FROM student AS T1

hard pred: select Fname from Student where StuID in ( select Fname from Student )
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

extra pred: select Fname , LName from Student where StuID in ( select T3.Fname from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.pet_age = 1 ) union select T6.Fname from Pets as T4 join Has_Pet as T5 on T4.PetID = T5.PetID join Student as T6 on T5.StuID = T6.StuID where T4.weight = 1
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

eval_err_num:5
hard pred: select T3.* from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select T3.Fname from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID = 1 intersect select * from Pets where pet_age = 1
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select T3.Fname from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID = 1 intersect select T6.Fname from Pets as T4 join Has_Pet as T5 on T4.PetID = T5.PetID join Student as T6 on T5.StuID = T6.StuID where T4.pet_age = 1
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

hard pred: select * from Pets where PetID = 1
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

hard pred: select * from Pets where PetType = 1
hard gold: SELECT major FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

extra pred: select T1.PetType , T3.LName from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T3.StuID in ( select * from Pets where pet_age = 1 )
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

easy pred: select StuID from Student where StuID = 1
easy gold: SELECT stuid FROM student

hard pred: select T3.StuID from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID = ( select T6.StuID from Pets as T4 join Has_Pet as T5 on T4.PetID = T5.PetID join Student as T6 on T5.StuID = T6.StuID where T4.weight = 1 )
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

hard pred: select StuID from Student where StuID in ( select StuID from Student )
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:6
hard pred: select T3.* from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID in ( select T5.StuID from Pets as T4 join Has_Pet as T5 on T4.PetID = T5.PetID where T4.weight = 1 )
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select * from Student where StuID not in ( select StuID from Has_Pet )
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:7
extra pred: select Fname , Age from Student where StuID in ( select PetType from Pets where pet_age = 1 except select student.fname where pet_age = 1 )
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

medium pred: select PetType from Pets order by pet_age asc limit 1
medium gold: SELECT * FROM pets ORDER BY pet_age LIMIT 1

medium pred: select pet_age from Pets order by pet_age asc limit 1
medium gold: SELECT pettype FROM pets ORDER BY pet_age LIMIT 1

medium pred: select pet_age , weight from Pets order by pet_age asc limit 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

easy pred: select PetType from Pets where pet_age > 1
easy gold: SELECT petid FROM pets WHERE pet_age  >  1

medium pred: select pet_age , weight from Pets where pet_age > 1
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

easy pred: select pet_age from Pets
easy gold: SELECT DISTINCT pettype FROM pets

medium pred: select T1.pet_age , max ( T3.Age ) from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID group by T1.pet_age
medium gold: SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select avg ( Age ) from Student
medium gold: SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select pet_age , avg ( weight ) from Pets group by pet_age
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

eval_err_num:8
easy pred: select T3.* from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetType = 1
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: select Fname from Student
easy gold: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select Fname , Age from Student
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:9
easy pred: select T3.* from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID in ( select PetType from Pets )
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select * from Student where LName = 1 and LName = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

medium pred: select StuID from Student where LName = 1
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:10
easy pred: select T3.* from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetType = 1
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select PetType , count ( PetType ) from Pets group by PetType
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

medium pred: select Fname , Sex from Student group by StuID having count ( * ) > 1
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: select T3.StuID from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.pet_age = 1
medium gold: SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'

hard pred: select T3.Fname from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

hard pred: select T3.LName from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where T1.PetID = 1
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

hard pred: select * from Student where StuID not in ( select Fname from Student )
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

extra pred: select avg ( Age ) from Student where StuID not in ( select Fname from Student )
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

easy pred: select Name from country where HeadOfState > 1
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

easy pred: select count ( * ) from country where Region = 1
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE Region  =  "Caribbean"

easy pred: select T2.Region , T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
easy gold: SELECT SurfaceArea FROM country WHERE Region  =  "Caribbean"

easy pred: select Continent , Continent from country
easy gold: SELECT Continent FROM country

easy pred: select Continent from country where Continent = 1
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

medium pred: select Name from city where District = 1
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

extra pred: select T3.Language from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T2.Region = 1 group by T3.Language order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

medium pred: select Population , Population from country
medium gold: SELECT Population ,  LifeExpectancy FROM country

medium pred: select Population , Population from country where Region = 1
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

easy pred: select Region from country where Region = 1
easy gold: SELECT Region FROM country WHERE Name  =  "Angola"

easy pred: select Region , Population from country where Region = 1
easy gold: SELECT Population FROM country WHERE Name  =  "Angola"

easy pred: select Population from country
easy gold: SELECT LifeExpectancy FROM country

easy pred: select T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
easy gold: SELECT LifeExpectancy FROM country WHERE Region  =  "Central Africa"

easy pred: select avg ( T1.Population ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

easy pred: select Name from country where Region = 1
easy gold: SELECT Name FROM country WHERE Continent  =  "Asia"

hard pred: select T2.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

easy pred: select count ( * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
easy gold: SELECT sum(Population) FROM country WHERE Continent  =  "Asia"

easy pred: select count ( * ) from country where Region = 1
easy gold: SELECT max(GNP) FROM country WHERE Continent  =  "Asia"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Africa"

medium pred: select Region , Region from country where Region = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select avg ( T1.Population ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select Continent from country where Region = 1 or Region = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select T2.Continent , T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
medium gold: SELECT SurfaceArea FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select sum ( T2.Percentage ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region = 1 or T1.Region = 1
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

easy pred: select sum ( T2.Population ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.District = 1
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

easy pred: select Continent from country
easy gold: SELECT * FROM country

easy pred: select Continent from country where Continent = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "US Territory"

medium pred: select T2.Region , T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

easy pred: select Continent from country where Continent = 1
easy gold: SELECT DISTINCT GovernmentForm FROM country WHERE Continent  =  "Africa"

easy pred: select count ( Continent ) from country where Continent = 1
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

easy pred: select * from country where Continent = 1
easy gold: SELECT * FROM country WHERE Name  =  "Aruba"

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select count ( * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan"

medium pred: select count ( T2.Language ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

medium pred: select count ( * ) , T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent
medium gold: SELECT count(*) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name

extra pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select count ( * ) , T2.Region from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent
medium gold: SELECT COUNT(*) ,  T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent

extra pred: select T3.Language from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode group by T2.Continent order by count ( * ) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select Continent from country where Continent = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select Continent from country where Name = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch"

easy pred: select count ( Continent ) from country where Name = 1
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

medium pred: select Name from country where Continent = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select Name from country where Name = 1 and Region = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

medium pred: select Language from countrylanguage
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

medium pred: select Language from countrylanguage where Language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T"

extra pred: select CountryCode from countrylanguage where Language = 1 intersect select CountryCode from countrylanguage where Language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

medium pred: select Continent from country where Continent = 1
medium gold: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select Continent from country where Continent = 1
medium gold: SELECT DISTINCT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select count ( Continent ) from country where Continent = 1
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

hard pred: select T2.Region from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Name = 1 or T1.Name = 1
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode group by T1.Continent
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE IsOfficial  =  "T"

extra pred: select GovernmentForm from country where Region = 1 or Region = 1
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Region = 1
medium gold: SELECT DISTINCT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia"

easy pred: select Continent , Continent from country
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "Republic"

hard pred: select Continent from country group by Continent having count ( * ) = 1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

medium pred: select Name from city where CountryCode = 1
medium gold: SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T2.Population desc limit 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

medium pred: select T1.Name , T2.Population , T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code
medium gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia"

hard pred: select T1.Name , T2.Population , T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.District desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select Language from countrylanguage
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

hard pred: select GovernmentForm from country where Region != 1
hard gold: SELECT * FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

extra pred: select T1.GovernmentForm , avg ( T1.Population ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language != 1 group by T1.Continent
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

hard pred: select Name from country where Region != 1
hard gold: SELECT Name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

extra pred: select count ( * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region != 1
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

medium pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Name = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

medium pred: select Continent from country where Name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

eval_err_num:11
medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1 intersect select T5.Language from city as T5 join country as T4 on T5.CountryCode = T4.Code join countrylanguage as T5 on T4.Code = T5.CountryCode where T3.Name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

easy pred: select Name from country where Continent > 1
easy gold: SELECT T1.Name FROM country AS t1 WHERE  IndepYear  <  1930

medium pred: select count ( T2.Language ) , T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Continent > 1 group by T2.Language
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

easy pred: select T1.Region , min ( T2.Percentage ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Continent = 1 group by T1.Continent
easy gold: SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe"

hard pred: select T1.Continent from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Percentage > ( select min ( T4.Percentage ) from country as T3 join countrylanguage as T4 on T3.Code = T4.CountryCode where T3.Continent = 1 )
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

easy pred: select max ( Population ) from country where Region = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Asia"

extra pred: select Region from country where Population < ( select max ( Population ) from country where Continent = 1 )
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

easy pred: select min ( Population ) from country where Region = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Africa"

extra pred: select Region from country where Population > ( select min ( Population ) from country where Region = 1 )
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

easy pred: select Region from country
easy gold: SELECT CountryCode FROM countrylanguage

hard pred: select Continent from country where Region != 1
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

easy pred: select Region from country
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage

easy pred: select Continent from country where Continent != 1
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE ! =  "English"

easy pred: select Region from country where Population != 1
easy gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic"

hard pred: select Continent from country where Population != 1 except select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Name = 1
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

medium pred: select T1.Name from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T2.Language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English'

extra pred: select Continent from country where Region != 1
extra gold: SELECT Name FROM country WHERE Continent  =  'Europe' AND Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English')

eval_err_num:12
extra pred: select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region != 1 except select T3.Name from city as T5 join country as T4 on T5.CountryCode = T4.Code join countrylanguage as T5 on T4.Code = T5.CountryCode where T5.Language = 1
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

medium pred: select Continent from country where Region = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select T1.Continent from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Continent = 1 and T2.Language = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

hard pred: select T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select Region from country order by Population asc limit 1
medium gold: SELECT * FROM country ORDER BY Population LIMIT 1

medium pred: select T2.Name , T2.Continent , T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T2.Population limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

medium pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.District desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select T2.Population , T2.Population , T2.GovernmentForm from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.District desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select Continent from country group by Continent having count ( * ) > = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

medium pred: select Continent , count ( * ) from country group by Continent having count ( * ) > = 1
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

easy pred: select District , District from city
easy gold: SELECT avg(Population) FROM city

extra pred: select count ( * ) , District from city where Population > ( select avg ( Population ) from city )
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

easy pred: select Continent from country where Population > 1
easy gold: SELECT * FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: select Population , Continent from country where Population > 1
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

easy pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Population < 1
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select Region , Population from country where Population < 1
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.District desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 5

medium pred: select T2.Continent , T2.HeadOfState from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.District desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

easy pred: select Population from country order by Population desc
easy gold: SELECT * FROM country ORDER BY Population DESC

medium pred: select Name from country group by Population order by count ( * ) desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

easy pred: select Population from country order by Population
easy gold: SELECT * FROM country ORDER BY Population

medium pred: select Name from country order by Population asc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

easy pred: select Continent from country where Region = 1
easy gold: SELECT * FROM country WHERE continent  =  "Asia"

easy pred: select count ( Region ) from country where Region = 1
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

easy pred: select Continent from country where Continent = 1
easy gold: SELECT * FROM country WHERE continent  =  "Europe"

medium pred: select Name from country where Continent = 1
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "North America"

medium pred: select T1.Continent from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode join sqlite_sequence as T3 where T2.Percentage > 1 and T3.seq > 1
medium gold: SELECT * FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

hard pred: select sum ( T1.Population ) , avg ( T3.seq ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode join sqlite_sequence as T3 where T2.Percentage > 1
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

easy pred: select Name from city group by District
easy gold: SELECT name FROM city

hard pred: select T3.Language from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode group by T2.Continent order by count ( * ) desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

easy pred: select T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "Day of the Dark Knight!"

easy pred: select T2.Written_by from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Country = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Poland"

hard pred: select T1.Country , T2.Channel from TV_Channel as T1 join TV_series as T2 on T1.id = T2.Channel where T1.Country = 1 group by T1.Country order by count ( * ) desc limit 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1

easy pred: select T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!"

hard pred: select T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 1
hard gold: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!")

medium pred: select T1.series_name , T1.series_name , T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 1
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel

easy pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Rock TV"

hard pred: select T2.Title , count ( * ) from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel group by T1.Language order by count ( * ) asc limit 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1

medium pred: select Directed_by , Directed_by from Cartoon where Title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"

easy pred: select * from TV_Channel where series_name = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Double Down"

easy pred: select T1.Rating from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Keepers"

medium pred: select Rating , Rating from TV_series order by Rating desc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3

easy pred: select T1.Weekly_Rank from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id where T2.series_name = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "Emily"

easy pred: select T1.Weekly_Rank from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by = 1
easy gold: SELECT Share FROM TV_series WHERE Episode = "Emily"

medium pred: select min ( T1.18_49_Rating_Share ) , max ( T1.18_49_Rating_Share ) from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Directed_by = 1
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series

easy pred: select * from Cartoon where Title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "A Love of a Lifetime"

easy pred: select T1.Weekly_Rank from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

medium pred: select Weekly_Rank , Weekly_Rank from TV_series
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"

easy pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Sky Radio"

medium pred: select T2.Title from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.series_name = 1
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

medium pred: select T2.Production_code , T1.series_name from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel join TV_series as T3 on T1.id = T3.Channel where T2.Title = 1 order by T3.Air_Date desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

easy pred: select Title from Cartoon where Directed_by = 1 and Directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"

medium pred: select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1 and T2.Directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Todd Casey'

medium pred: select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Steven Melching'

hard pred: select T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1 and T2.Directed_by = 1
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

extra pred: select T1.series_name , T1.Country from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Title = 1 and T1.series_name = 1
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

easy pred: select count ( T2.Directed_by ) from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T1.Language = 1
easy gold: SELECT COUNT(*) FROM TV_Channel WHERE Country = "Italy"

easy pred: select id from TV_Channel where series_name = 1 intersect select series_name from TV_Channel group by Country having count ( * ) > 1
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

hard pred: select T1.id from TV_Channel as T1 join Cartoon as T2 on T1.id = T2.Channel where T2.Directed_by = 1 except select Directed_by from Cartoon where Directed_by = 1
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

easy pred: select * from poker_player order by Earnings desc
easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC

medium pred: select Final_Table_Made , Final_Table_Made from poker_player order by Earnings desc limit 1
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

easy pred: select Earnings from poker_player
easy gold: SELECT Money_Rank FROM poker_player

easy pred: select * from poker_player order by Earnings desc
easy gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC

medium pred: select * from poker_player order by Money_Rank desc limit 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

easy pred: select * from poker_player where Earnings > 1
easy gold: SELECT * FROM poker_player WHERE Earnings  <  200000

easy pred: select * from poker_player where Earnings > 1 and Final_Table_Made > 1
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: select * from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select Best_Finish from poker_player where Earnings > 1
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

easy pred: select * from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select * from poker_player order by Final_Table_Made asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

easy pred: select Birth_Date from people
easy gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

hard pred: select * from poker_player order by Earnings asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

easy pred: select * from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:13
hard pred: select T1.* from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T2.Height desc limit 1
hard gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

easy pred: select * from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select Name from people where Height > 1
medium gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

medium pred: select Final_Table_Made from poker_player order by Earnings desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

easy pred: select Nationality from people group by Nationality
easy gold: SELECT * FROM people GROUP BY Nationality

hard pred: select * from poker_player where * != 1
hard gold: SELECT * FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

hard pred: select * from poker_player where Poker_Player_ID not in ( select * from poker_player )
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

easy pred: select injured from death
easy gold: SELECT killed FROM death

easy pred: select killed from death
easy gold: SELECT * FROM death as T1 JOIN ship as T2 ON T1.caused_by_ship_id  =  T2.id

medium pred: select T2.killed from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T1.disposition_of_ship = 1
medium gold: SELECT * FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

medium pred: select T2.killed , T2.injured from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T1.disposition_of_ship = 1
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

easy pred: select id , name from battle
easy gold: SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle

medium pred: select T2.id , T2.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name = 1
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

hard pred: select killed , injured , injured from death
hard gold: SELECT T1.id ,  T1.name, sum(T3.killed), sum(T3.injured) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id

hard pred: select T1.killed from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id join battle as T3 on T2.lost_in_battle = T3.id group by T3.id having count ( T1.killed ) > = 1
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

medium pred: select T1.id , T1.name , T2.injured from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id
medium gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id

hard pred: select T2.injured , T1.name , count ( * ) from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id group by T1.id order by count ( * ) desc
hard gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured)

easy pred: select id from battle where bulgarian_commander = 1
easy gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan'

easy pred: select id from battle where latin_commander = 1
easy gold: SELECT name FROM battle WHERE latin_commander  =  'Baldwin I'

medium pred: select name from battle where latin_commander = 1 or latin_commander = 1
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

easy pred: select T2.id from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.disposition_of_ship = 1
easy gold: SELECT lost_in_battle FROM ship WHERE tonnage  =  '225'

medium pred: select T2.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name = 1
medium gold: SELECT T2.id, T2.name from ship AS T1 join battle AS T2 ON T1.lost_in_battle = T2.id WHERE tonnage  =  '225'

extra pred: select T2.id , T1.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.disposition_of_ship != 1 except select T4.result , T4.name from ship as T3 join battle as T4 on T3.lost_in_battle = T4.id where T3.disposition_of_ship = 1
extra gold: SELECT id, name FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select count ( T2.killed ) from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T1.tonnage != 1
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select T2.name , T2.date from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name = 1
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

medium pred: select T2.id , T1.name from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name = 1
medium gold: SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

extra pred: select id from battle where id not in ( select T2.caused_by_ship_id from ship as T1 join death as T2 on T1.id = T2.caused_by_ship_id where T1.name = 1 )
extra gold: SELECT T1.id, T1.name FROM battle EXCEPT SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

extra pred: select T2.id , T2.name , T2.latin_commander from ship as T1 join battle as T2 on T1.lost_in_battle = T2.id where T1.name != 1
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

medium pred: select Continent , Continent from continents
medium gold: SELECT ContId ,  Continent FROM CONTINENTS;

medium pred: select T2.Continent , T2.Continent , T1.CountryId from countries as T1 join continents as T2 on T1.Continent = T2.ContId
medium gold: SELECT T1.ContId ,  T1.Continent , * FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent;

medium pred: select Continent , count ( * ) from continents group by Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

medium pred: select Maker , Id from car_makers
medium gold: Select FullName, ID From CAR_MAKERS;

medium pred: select T1.Maker , T1.Country , T2.CountryId from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId
medium gold: Select Country, FullName, ID From CAR_MAKERS;

medium pred: select Maker , count ( * ) from car_makers group by Id
medium gold: SELECT count(*), T1.Country, T1.FullName, T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

medium pred: select Maker , Id , count ( * ) from car_makers group by Id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

hard pred: select max ( Horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower DESC LIMIT 1;

hard pred: select min ( Horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

hard pred: select T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.Id in ( select max ( Horsepower ) from cars_data )
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:14
extra pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight > ( select avg ( Weight ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  >  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:15
extra pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight < ( select avg ( Weight ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

extra pred: select T3.Model from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model where T1.Weight < ( select avg ( Weight ) from cars_data )
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

medium pred: select T1.Id , T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
medium gold: Select T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

medium pred: select T1.Id , T4.Horsepower from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.Country = 1
medium gold: Select T1.horsepower, T1.mpg, T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

extra pred: select T3.Continent , T5.Make , T1.Id from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join continents as T3 on T2.Continent = T3.ContId join model_list as T4 on T1.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model where T1.Country = 1
extra gold: SELECT T1.Maker, T4.horsepower, T4.mpg, T4.id, T2.model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

medium pred: select T1.Id , T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker
medium gold: SELECT Make , Model from Car_Names;

medium pred: select T3.Model , T3.Model , T1.Year from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model
medium gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId;

eval_err_num:16
extra pred: select T1.Id , T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join countries as T3 on T1.Country = T3.CountryId join continents as T4 on T3.Continent = T4.ContId order by T4.* asc limit 1
extra gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

extra pred: select T1.Year , T1.Year from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model join car_makers as T4 on T3.Maker = T4.Id join countries as T5 on T4.Country = T5.CountryId join continents as T6 on T5.Continent = T6.ContId order by T6.Continent asc limit 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

medium pred: select * , Year from cars_data
medium gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id;

eval_err_num:17
hard pred: select T1.* , T4.Year from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year > 1
hard gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

hard pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year > 1
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: select T1.Maker , T3.Continent , T3.Continent from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join continents as T3 on T2.Continent = T3.ContId
medium gold: SELECT T1.Continent,  T3.Maker, T2.CountryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country;

hard pred: select Continent , count ( * ) from continents group by Continent
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

medium pred: select count ( * ) , T1.CountryName from countries as T1 join continents as T2 on T1.Continent = T2.ContId group by T1.Continent
medium gold: SELECT *, count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country;

extra pred: select T1.CountryName from countries as T1 join continents as T2 on T1.Continent = T2.ContId group by T2.Continent order by count ( * ) asc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) ASC LIMIT 1;

extra pred: select T1.CountryName from countries as T1 join continents as T2 on T1.Continent = T2.ContId group by T2.Continent order by count ( * ) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

easy pred: select count ( * ) from countries
easy gold: Select Count(*) FROM CAR_MAKERS;

medium pred: select T1.Maker , T3.Make , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model
medium gold: SELECT FullName, id FROM CAR_MAKERS;

medium pred: select T2.Continent , T4.Make , T1.Id , count ( * ) from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join model_list as T3 on T1.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model group by T1.Id
medium gold: SELECT T1.Model ,  T2.FullName, T2.id  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id;

medium pred: select count ( * ) , T3.MakeId , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Id
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.Model = 1
medium gold: SELECT T1.ID FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:18
medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.* = 1
medium gold: SELECT T1.Horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:19
medium pred: select T1.Accelerate from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where T2.* = 1
medium gold: SELECT T1.MPG FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:20
medium pred: select T1.Accelerate from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where T2.* = 1
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

medium pred: select CountryName from countries
medium gold: SELECT T1.Maker, T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId;

medium pred: select count ( * ) from countries where CountryName = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

easy pred: select count ( * ) from countries
easy gold: SELECT count(*) FROM MODEL_LIST;

hard pred: select count ( * ) from countries where CountryName = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Germany';

hard pred: select count ( * ) from countries where CountryName = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'japan';

hard pred: select count ( * ) from countries as T1 join continents as T2 on T1.Continent = T2.ContId where T1.CountryName = 1 and T2.Continent = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

easy pred: select * from car_makers where Maker = 1
easy gold: SELECT * FROM CARS_DATA WHERE YEAR  =  1974;

medium pred: select T4.Weight , T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.Maker = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE YEAR  =  1974;

medium pred: select T4.Weight , T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.Maker = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974;

hard pred: select T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.Maker = 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

hard pred: select Continent from countries where CountryId not in ( select Continent from continents )
hard gold: Select CountryName FROM COUNTRIES where CountryID not in (Select Country from CAR_MAKERS);

medium pred: select CountryName from countries where CountryId not in ( select Continent from continents )
medium gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: select T2.CountryName , T3.Continent from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join continents as T3 on T2.Continent = T3.ContId where T1.Id not in ( select Continent from continents )
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: select T1.Maker , T2.CountryName from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId
medium gold: SELECT T3.Maker, T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country;

hard pred: select count ( * ) , CountryName from countries group by CountryName
hard gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country GROUP BY T1.CountryName;

extra pred: select T1.Maker , T2.CountryName from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join continents as T3 on T2.Continent = T3.ContId where T3.Continent = 1
extra gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName;

extra pred: select T1.CountryName from countries as T1 join continents as T2 on T1.Continent = T2.ContId where T2.Continent = 1 group by T1.CountryName having count ( * ) > = 1
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

medium pred: select T1.Id , T4.Horsepower from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

medium pred: select T1.Id , T4.Horsepower from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  8;

medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3;

extra pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Horsepower desc limit 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Horsepower desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY horsepower DESC LIMIT 1;

medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Accelerate desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1;

hard pred: select T2.MakeId , max ( T1.Accelerate ) from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId
hard gold: SELECT T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

hard pred: select T3.Model from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model order by T1.Accelerate desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

easy pred: select avg ( ContId ) from continents
easy gold: SELECT avg(edispl) FROM CARS_DATA;

eval_err_num:21
medium pred: select T5.* , avg ( T3.* ) from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join continents as T3 on T2.Continent = T3.ContId join model_list as T4 on T1.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model group by T1.Id
medium gold: SELECT T1.Make, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Make;

medium pred: select T1.Id from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join continents as T3 on T2.Continent = T3.ContId group by T1.Id
medium gold: SELECT T1.Model, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Model;

medium pred: select T1.Id from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId join continents as T3 on T2.Continent = T3.ContId group by T1.Id
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

easy pred: select Model from model_list
easy gold: SELECT distinct Model from CAR_NAMES;

medium pred: select Model from model_list
medium gold: SELECT Model, Make FROM CAR_NAMES;

medium pred: select count ( T2.Model ) , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker group by T1.Id
medium gold: SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model;

hard pred: select Model from model_list group by Model order by count ( * ) desc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

easy pred: select Maker from car_makers
easy gold: SELECT FullName FROM CAR_MAKERS;

medium pred: select Maker , Maker , Maker from car_makers
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select T1.Maker , T1.Maker , T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.Make = 1
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

medium pred: select count ( T1.Maker ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.Make = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

easy pred: select * from car_makers group by Id having count ( * ) > = 1
easy gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Cylinders > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  1;

medium pred: select T1.Maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Cylinders > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

medium pred: select T3.Make , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Id having count ( * ) > 1
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

hard pred: select count ( T2.Model ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.Maker = 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id WHERE T3.FullName  =  'General Motors';

hard pred: select count ( T2.Model ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.Maker > 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T1.MakeId  =  T3.Id WHERE T3.weight > 3500;

extra pred: select count ( T2.Model ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.Maker > 1 or T1.Maker = 1
extra gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

extra pred: select T3.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T1.Maker > 1 or T1.Maker = 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

medium pred: select Year from cars_data where Weight < 1 intersect select Year from cars_data where Weight < 1
medium gold: SELECT DISTINCT Year FROM CARS_DATA WHERE Weight  >  3000 AND Weight  <  4000;

medium pred: select min ( Accelerate ) from cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate ASC LIMIT 1;

medium pred: select max ( Accelerate ) from cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

hard pred: select T1.Id , T2.Model , max ( T4.Accelerate ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T1.Id order by count ( * ) desc limit 1
hard gold: SELECT T1.ID, T2.Make, T2.Model FROM CARS_DATA as T1 JOIN CAR_NAMES as T2 ON T1.ID = T2.MakeID ORDER BY T1.accelerate DESC LIMIT 1;

medium pred: select T1.Maker , T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by T4.Accelerate desc limit 1
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

eval_err_num:22
medium pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where T3.Model = 1
medium gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo';

extra pred: select * from car_makers group by * order by count ( * ) asc limit 1
extra gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select max ( Accelerate ) from cars_data
extra gold: SELECT T1.horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select count ( * ) from model_list where Model = 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

medium pred: select max ( Horsepower ) from cars_data
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

hard pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Accelerate > ( select max ( Horsepower ) from cars_data )
hard gold: SELECT id FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: select count ( * ) from cars_data where Accelerate > ( select max ( Horsepower ) from cars_data )
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: select CountryId from countries where CountryId not in ( select Continent from continents )
hard gold: SELECT CountryName FROM COUNTRIES where CountryId not in (SELECT T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country);

easy pred: select CountryName from countries
easy gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country;

easy pred: select count ( CountryId ) , CountryName from countries group by CountryName having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  1 );

easy pred: select count ( * ) from ( select T1.CountryId from countries as T1 join continents as T2 on T1.Continent = T2.ContId group by T1.CountryName having count ( * ) > 1 )
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

medium pred: select T3.Model , T1.Accelerate from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

medium pred: select T3.Model , T1.Accelerate from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model where T1.Weight = 1
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4;

extra pred: select T3.Model from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model order by T1.Horsepower asc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower ASC LIMIT 1;

extra pred: select T3.Model from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model order by T1.Horsepower desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

extra pred: select T1.Id , * from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower > ( select min ( Horsepower ) from cars_data )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA);

extra pred: select Id , * from car_makers group by Id having count ( * ) < = 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 5;

extra pred: select Id , * from car_makers group by Id having count ( * ) < = 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 3;

medium pred: select Accelerate , Accelerate from cars_data where Year < 1
medium gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE YEAR  <  1980;

extra pred: select T1.Maker , T4.Year , T4.Accelerate from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year < 1 or T4.Year < 1
extra gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980;

extra pred: select max ( Accelerate ) , max ( Accelerate ) from cars_data where Year < 1
extra gold: SELECT accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY accelerate DESC LIMIT 1;

extra pred: select T1.Maker , T4.Year from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year < 1 or T4.Horsepower < 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

eval_err_num:23
medium pred: select T2.* from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId where T1.Maker = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName = 'Ford Motor Company';

medium pred: select Model from model_list except select T2.Model from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker where T1.Maker = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName != 'Ford Motor Company';

extra pred: select T3.Model , T1.Weight , count ( * ) from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model group by T3.Model
extra gold: SELECT T1.model, T2.Make, T3.weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'

extra pred: select T3.Model from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model where T1.Horsepower > 1
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

easy pred: select CountryId from countries
easy gold: SELECT CountryName FROM countries;

easy pred: select CountryName from countries
easy gold: SELECT distinct T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

hard pred: select Make from car_names except select Maker from car_makers
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

medium pred: select T1.Id , T3.Make , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model
medium gold: SELECT T1.Id ,  T1.Maker, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select Id , Maker , count ( * ) from car_makers group by Id
medium gold: SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

medium pred: select Maker , Maker from car_makers group by Id having count ( * ) > = 1
medium gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2;

extra pred: select Id , Maker from car_makers group by Id having count ( * ) > 1
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

easy pred: select max ( ranking_date ) from rankings
easy gold: SELECT max(minutes) FROM matches

easy pred: select avg ( ranking_date ) from rankings
easy gold: SELECT avg(minutes) FROM matches

medium pred: select T2.birth_date , avg ( T1.minutes ) , T1.score from matches as T1 join players as T2 on T1.winner_id = T2.player_id group by T1.score
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

easy pred: select count ( winner_name ) from matches
easy gold: SELECT count(DISTINCT tourney_name) FROM matches

easy pred: select winner_entry from matches group by winner_entry having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  20

easy pred: select winner_entry from matches group by winner_entry having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

easy pred: select count ( score ) from matches where year = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE year = 2013

easy pred: select count ( winner_entry ) from matches where year = 1 and year = 1
easy gold: SELECT count(*) FROM (SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016)

hard pred: select T2.first_name , T2.last_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.year = 1 and T1.year = 1
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

easy pred: select count ( * ) from matches where loser_name = 1
easy gold: SELECT count(*) FROM matches WHERE loser_hand = "L"

medium pred: select T1.winner_name , T2.birth_date , T2.birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id
medium gold: SELECT T1.last_name, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships'

medium pred: select T2.first_name , T2.birth_date , T2.birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.winner_rank = 1
medium gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships'

extra pred: select T2.first_name , T2.birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.winner_name = 1 and T1.winner_name = 1
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

easy pred: select count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id where T1.surface = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'R'

easy pred: select count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id where T1.surface = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'L'

medium pred: select T2.country_code , T2.birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.surface = 1 and T1.surface = 1
medium gold: SELECT country_code ,  birth_date FROM players WHERE hand  =  'L'

medium pred: select T2.country_code , T2.birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id where T1.surface = 1 order by T2.birth_date
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

hard pred: select count ( * ) from rankings group by player_id order by count ( * ) asc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours ASC LIMIT 1

hard pred: select count ( * ) from matches group by winner_id order by count ( * ) desc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select T2.first_name , T2.country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id group by T1.winner_id order by count ( * ) desc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select T1.round from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.winner_entry order by count ( * ) desc limit 1
hard gold: SELECT surface FROM matches GROUP BY surface ORDER  BY count(*) DESC LIMIT 1

hard pred: select T1.year , count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.score order by count ( * ) desc limit 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

hard pred: select loser_name from matches group by loser_id order by count ( * ) desc limit 1
hard gold: SELECT loser_name FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: select winner_entry , winner_rank_points from matches order by winner_rank_points desc limit 1
hard gold: SELECT loser_name, loser_rank_points FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.winner_name , T1.winner_rank_points from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.winner_id order by count ( * ) desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

medium pred: select loser_name from matches order by winner_rank_points desc limit 1
medium gold: SELECT loser_name FROM matches ORDER BY loser_rank_points DESC LIMIT 1

hard pred: select loser_name , winner_entry from matches order by winner_rank_points desc limit 1
hard gold: SELECT loser_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY loser_rank_points DESC LIMIT 1

hard pred: select winner_name from matches where winner_name = 1 order by winner_rank_points desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: select winner_entry from matches order by minutes asc limit 1
medium gold: SELECT minutes FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select winner_entry , minutes from matches order by minutes limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select birth_date , first_name from players
medium gold: SELECT T2.tours, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.winner_rank , avg ( T3.ranking_points ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.winner_ht
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.winner_hand , count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T3.player_id
medium gold: SELECT tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.winner_rank_points , avg ( T2.hand ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id group by T1.winner_hand
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select avg ( T1.winner_rank_points ) , T2.first_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id group by T1.winner_entry
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

easy pred: select count ( * ) , T2.country_code from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.country_code
easy gold: SELECT count(*) FROM players GROUP BY country_code

hard pred: select T2.country_code from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.country_code order by count ( * ) asc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) ASC LIMIT 1

medium pred: select T1.loser_hand , count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.loser_hand
medium gold: SELECT count(*), hand FROM players GROUP BY hand

medium pred: select T2.country_code , count ( * ) from rankings as T1 join players as T2 on T1.player_id = T2.player_id group by T2.country_code
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code

medium pred: select country_code from players group by country_code having count ( * ) > 1
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code HAVING count(*) > 50

medium pred: select T1.loser_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by T2.birth_date asc limit 1
medium gold: SELECT DISTINCT loser_name FROM matches ORDER BY loser_age DESC LIMIT 3

medium pred: select T1.loser_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by T2.birth_date limit 1
medium gold: SELECT DISTINCT winner_name FROM matches ORDER BY winner_age DESC LIMIT 3

medium pred: select T1.winner_rank , T1.winner_rank_points from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by T2.birth_date asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

easy pred: select count ( winner_id ) from matches where winner_name = 1
easy gold: SELECT count(DISTINCT loser_name) FROM matches WHERE tourney_name  =  'Australian Open'

easy pred: select count ( * ) from matches where winner_name = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Australian Open'

medium pred: select winner_name , count ( * ) from matches where winner_name = 1 and winner_name = 1
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

easy pred: select * from orchestra
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:24
medium pred: select T3.* from show as T1 join performance as T2 on T1.Performance_ID = T2.Performance_ID join orchestra as T3 on T2.Orchestra_ID = T3.Orchestra_ID where T1.Show_ID = ( select T4.Attendance from show as T7 join performance as T5 on T7.Performance_ID = T5.Performance_ID join orchestra as T6 on T5.Orchestra_ID = T6.Orchestra_ID join conductor as T7 on T6.Conductor_ID = T7.Conductor_ID order by T7.Age desc limit 1 )
medium gold: SELECT Record_Company, Year_of_Founded FROM orchestra

easy pred: select count ( * ) from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Age > = ( select count ( * ) from orchestra )
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

easy pred: select If_first_show from show
easy gold: SELECT SHARE FROM performance

easy pred: select sum ( T3.Year_of_Work ) from performance as T1 join orchestra as T2 on T1.Orchestra_ID = T2.Orchestra_ID join conductor as T3 on T2.Conductor_ID = T3.Conductor_ID where T1.Type != 1
easy gold: SELECT SHARE FROM performance WHERE TYPE != "Live final"

easy pred: select count ( * ) from conductor
easy gold: SELECT count(DISTINCT Nationality) FROM conductor

easy pred: select T1.Date from performance as T1 join orchestra as T2 on T1.Orchestra_ID = T2.Orchestra_ID join conductor as T3 on T2.Conductor_ID = T3.Conductor_ID where T3.Conductor_ID in ( select Conductor_ID from conductor )
easy gold: SELECT Year_of_Work FROM conductor

easy pred: select T1.Date from performance as T1 join orchestra as T2 on T1.Orchestra_ID = T2.Orchestra_ID join conductor as T3 on T2.Conductor_ID = T3.Conductor_ID where T3.Conductor_ID in ( select Conductor_ID from conductor )
easy gold: SELECT Year_of_Work FROM conductor

medium pred: select Name from conductor
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

medium pred: select Name from conductor group by Conductor_ID having count ( * ) > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

extra pred: select Name from conductor group by Conductor_ID order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select Name from conductor where Year_of_Work > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

easy pred: select Record_Company from orchestra
easy gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company

medium pred: select count ( * ) , count ( * ) from orchestra group by Record_Company
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

medium pred: select * from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID group by T1.Major_Record_Format order by count ( * ) asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

easy pred: select * from orchestra
easy gold: SELECT Record_Company FROM orchestra

hard pred: select * from orchestra group by Record_Company order by count ( * ) desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select Name from conductor
easy gold: SELECT Orchestra FROM orchestra

hard pred: select Name from conductor except select Name from conductor
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

easy pred: select * from orchestra
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:25
easy pred: select T1.* from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Age > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003

easy pred: select T1.Record_Company from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Age > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

hard pred: select T3.Name from performance as T1 join orchestra as T2 on T1.Orchestra_ID = T2.Orchestra_ID join conductor as T3 on T2.Conductor_ID = T3.Conductor_ID where T3.Age > 1 and T3.Year_of_Work > 1 and T1.Type = 1
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:26
medium pred: select T2.* from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Major_Record_Format = 1 or T1.Record_Company = 1
medium gold: SELECT * FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select count ( * ) from orchestra where Major_Record_Format = 1 or Record_Company = 1
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select Document_Name , Document_Description from Documents where Document_Description like 1
medium gold: SELECT document_name FROM Documents WHERE Document_Description LIKE "%w%"

easy pred: select Document_Name from Documents where Document_Name = 1
easy gold: SELECT document_id FROM Documents WHERE document_name  =  "Robbin CV"

medium pred: select T2.Document_ID , T1.Template_Type_Code , T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T1.document_id, T2.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID

medium pred: select T2.Document_ID , T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 1
medium gold: SELECT T1.document_id FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID where T2.Template_Type_Code  =  'PPT'

medium pred: select Template_Type_Code , Template_Type_Code from Templates
medium gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id

medium pred: select T1.Template_Type_Code , count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code
medium gold: SELECT count(*), T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id

extra pred: select T2.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code order by count ( * ) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

easy pred: select Template_ID from Documents
easy gold: SELECT template_id FROM Templates

hard pred: select Template_ID from Documents where Document_ID not in ( select Template_ID from Documents )
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

easy pred: select * from Documents
easy gold: SELECT * FROM Templates

easy pred: select count ( * ) from Documents
easy gold: SELECT count(*) FROM Templates

easy pred: select Template_ID from Documents
easy gold: SELECT template_id FROM Templates

medium pred: select T2.Template_ID , T1.Version_Number , T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

easy pred: select Template_ID from Documents
easy gold: SELECT template_id FROM Templates

medium pred: select T2.Template_ID from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID where T1.Template_Type_Code = 1 or T1.Template_Type_Code = 1
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

easy pred: select count ( * ) from Documents
easy gold: SELECT version_number FROM Templates

easy pred: select Template_Type_Code from Templates where Version_Number > 1
easy gold: SELECT version_number FROM Templates WHERE version_number  >  5

medium pred: select Template_Type_Code , Template_Type_Code from Templates where Version_Number > 1
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

medium pred: select T1.Template_Type_Code , count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

medium pred: select T1.Template_Type_Code , count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

hard pred: select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code order by count ( * ) desc limit 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.Template_Type_Code , count ( * ) from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

easy pred: select T1.Template_Type_Code from Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID group by T1.Template_Type_Code having count ( * ) < 1
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

easy pred: select min ( * ) from Ref_Template_Types
easy gold: SELECT min(Version_Number) FROM Templates

eval_err_num:27
medium pred: select T2.Template_Type_Code , T1.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code order by T2.* limit 1
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

medium pred: select Template_Type_Code , count ( * ) from Templates group by Template_Type_Code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

easy pred: select Template_Type_Code from Templates group by Template_Type_Code
easy gold: SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

hard pred: select Template_Type_Code from Templates where Template_Type_Code not in ( select Template_Type_Code from Templates )
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_type_code FROM Ref_template_types

medium pred: select T1.Template_Type_Code , T2.Template_Type_Description from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

medium pred: select T1.Template_Type_Code , T2.Template_Type_Description from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

easy pred: select Template_Type_Code from Templates where Template_Type_Code = 1
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_type_code FROM Ref_template_types

medium pred: select T1.Template_Type_Code , T2.Template_Type_Description from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code , template_type_description FROM Ref_template_types

easy pred: select T1.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Description = 1
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

medium pred: select T2.Template_Type_Code , T1.Template_Type_Code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: select Template_Type_Description from Ref_Template_Types
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

easy pred: select Template_ID from Documents
easy gold: SELECT template_id from Templates

medium pred: select T3.Template_ID , T1.Template_Type_Description from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID
medium gold: SELECT T2.template_id, T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code

medium pred: select T2.Template_ID from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID where T1.Paragraph_Text = 1
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

easy pred: select Paragraph_Text from Paragraphs
easy gold: SELECT * FROM Paragraphs

easy pred: select count ( Paragraph_Text ) from Paragraphs
easy gold: SELECT count(*) FROM Paragraphs

easy pred: select Document_ID from Documents
easy gold: SELECT paragraph_id FROM Paragraphs

medium pred: select Document_ID , Document_Name from Documents
medium gold: SELECT T1.paragraph_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID

medium pred: select Document_ID from Documents where Document_Name like 1
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select count ( T1.Paragraph_Text ) from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID where T2.Document_Name like 1
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select Paragraph_Text , Paragraph_Text from Paragraphs
medium gold: SELECT Other_Details, paragraph_text FROM Paragraphs

easy pred: select Paragraph_Text , Paragraph_Text from Paragraphs where Paragraph_Text = 1
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

medium pred: select Document_ID , Document_Description from Documents
medium gold: SELECT paragraph_id ,  paragraph_text FROM Paragraphs

medium pred: select Document_ID , Document_Description , Document_Name from Documents
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text, T2.Document_Name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select Document_ID , Document_Description from Documents where Document_Name like 1
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id

medium pred: select Document_ID from Documents group by Document_ID order by count ( * )
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select Document_ID , Document_Name , count ( * ) from Documents group by Document_ID
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select Document_ID from Documents group by Document_ID having count ( * ) > = 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

medium pred: select Document_ID , Document_Name , Document_ID from Documents
medium gold: SELECT T1.document_id ,  T2.document_name , T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select Template_ID , Document_Name , count ( * ) from Documents group by Template_ID
medium gold: SELECT T1.document_id ,  T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

extra pred: select Document_ID , Document_Name from Documents group by Template_ID order by count ( * ) desc limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id

medium pred: select Document_ID from Documents group by Document_ID order by count ( * )
medium gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*)

hard pred: select Document_ID from Documents group by Document_ID order by count ( * ) asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select Document_ID from Documents where Document_ID between 1 and 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

medium pred: select T4.Name , T1.Age , T1.Age from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID
medium gold: SELECT name ,  country ,  age FROM singer

medium pred: select Name , Age , Age from singer order by Age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

easy pred: select Name from stadium
easy gold: select song_name from singer

medium pred: select T2.Name , T1.Year from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT song_name ,  song_release_year FROM singer

medium pred: select T4.Name , T1.Year from concert as T1 join singer_in_concert as T2 on T1.concert_ID = T2.concert_ID join singer as T3 on T2.Singer_ID = T3.Singer_ID join stadium as T4 on T1.Stadium_ID = T4.Stadium_ID order by T3.Age
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age

medium pred: select T4.Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID order by T1.Age desc limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

easy pred: select T1.Country from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID where T4.Average > 1
easy gold: SELECT country FROM singer WHERE age  >  20

easy pred: select T1.Country from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID where T4.Average > 1
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

hard pred: select T4.Name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID where T1.Age > ( select avg ( Age ) from singer )
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

medium pred: select Name , Capacity from stadium order by Highest desc
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC

medium pred: select Name , Capacity from stadium order by Capacity desc limit 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

medium pred: select Year from concert where Year = 1 or Year = 1
medium gold: SELECT * FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select count ( * ) from concert where Year = 1
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

extra pred: select T2.Name , T2.Capacity from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID where T1.Year > = 1 order by count ( * ) desc
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC

extra pred: select T2.Name from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID where T1.Year > 1 group by T2.Name order by count ( * ) desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.Year from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID order by T2.Capacity desc
medium gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC

easy pred: select Stadium_ID from stadium
easy gold: SELECT stadium_id FROM concert

hard pred: select Name from stadium except select Name from stadium
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

hard pred: select Country from singer where Age < 1 intersect select Country from singer where Age < 1
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

hard pred: select Name from stadium where Stadium_ID not in ( select Stadium_ID from concert where Year = 1 )
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

medium pred: select T2.Name , T1.Theme from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT concert_name ,  theme from concert

medium pred: select T2.Name , T1.Theme , count ( * ) from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID group by T1.concert_ID
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

medium pred: select T3.Name , count ( * ) from singer_in_concert as T1 join concert as T2 on T1.concert_ID = T2.concert_ID join stadium as T3 on T2.Stadium_ID = T3.Stadium_ID group by T1.Singer_ID
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

medium pred: select Name from stadium where Name like 1
medium gold: SELECT name FROM singer WHERE song_name LIKE '%Hey%'

medium pred: select T4.Name , T1.Country from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID where T4.Name = 1
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

extra pred: select T2.Name , T2.Location from concert as T1 join stadium as T2 on T1.Stadium_ID = T2.Stadium_ID where T1.Year = 1
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

medium pred: select Name , Birth_Year from singer where Birth_Year = 1 or Birth_Year = 1
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

easy pred: select Name , Net_Worth_Millions from singer order by Birth_Year desc
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC

medium pred: select Name , Citizenship , count ( * ) from singer group by Citizenship
medium gold: SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship

medium pred: select Citizenship , Citizenship from singer group by Citizenship order by count ( * ) desc limit 1
medium gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC

hard pred: select Citizenship , Citizenship from singer group by Citizenship order by count ( * ) desc limit 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select T2.Name , count ( * ) from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Singer_ID
medium gold: SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

medium pred: select T2.Name , count ( * ) from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Singer_ID having count ( * ) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

medium pred: select Title , Singer_ID from song
medium gold: SELECT title, Sales from song

medium pred: select T2.Name , sum ( T1.Sales ) from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Singer_ID
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

easy pred: select count ( Number_products ) from shop
easy gold: SELECT sum(number_products) FROM shop

medium pred: select T1.Name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID join employee as T3 on T2.Employee_ID = T3.Employee_ID join evaluation as T4 on T3.Employee_ID = T4.Employee_ID group by T1.Shop_ID order by count ( * ) desc limit 1
medium gold: SELECT name FROM shop ORDER BY number_products DESC LIMIT 1

medium pred: select Manager_name , District from shop group by Shop_ID order by count ( * ) desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

hard pred: select Name from shop where Number_products < ( select avg ( Number_products ) from shop )
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

easy pred: select count ( * ) from evaluation
easy gold: SELECT Year_awarded FROM evaluation

extra pred: select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID order by T1.Year_awarded desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

easy pred: select Name from employee
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

extra pred: select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID group by T1.Year_awarded order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select count ( * ) from employee
easy gold: SELECT count(distinct Employee_ID) FROM evaluation

easy pred: select T2.Name from hiring as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID group by T1.Employee_ID
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

hard pred: select Name from employee where Employee_ID not in ( select Employee_ID from hiring )
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

easy pred: select count ( * ) from hiring
easy gold: SELECT count(distinct Shop_ID) FROM hiring

easy pred: select Shop_ID from shop
easy gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id

extra pred: select T1.Manager_name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID join employee as T3 on T2.Employee_ID = T3.Employee_ID group by T1.Manager_name order by count ( * ) desc limit 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

hard pred: select Name from shop where Shop_ID not in ( select Employee_ID from hiring )
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

easy pred: select count ( * ) from employee
easy gold: SELECT count(*) FROM hiring

medium pred: select count ( * ) , T1.Manager_name from shop as T1 join hiring as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

easy pred: select * from visitor where Level_of_membership = 1 order by Level_of_membership
easy gold: SELECT * FROM visitor ORDER BY Level_of_membership DESC

easy pred: select T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.Level_of_membership = 1 order by T1.Level_of_membership
easy gold: SELECT name FROM visitor ORDER BY Level_of_membership DESC

medium pred: select T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.Level_of_membership < = 1 or T1.Level_of_membership < 1
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

medium pred: select T3.Name , T1.Level_of_membership from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.Level_of_membership > 1 order by T1.Age
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

easy pred: select count ( * ) from visit
easy gold: SELECT count(*) FROM museum

medium pred: select T2.Name from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID group by T1.Museum_ID order by count ( * ) desc limit 1
medium gold: SELECT name FROM museum ORDER BY num_of_staff DESC LIMIT 1

medium pred: select Museum_ID from museum group by Name order by count ( * ) desc limit 1
medium gold: SELECT museum_id FROM museum ORDER BY num_of_staff DESC LIMIT 1

easy pred: select Open_Year from museum where Open_Year > 1
easy gold: SELECT name FROM museum WHERE open_year  >  2010

easy pred: select count ( * ) from museum where Open_Year > 1
easy gold: SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010

hard pred: select Name from museum where Open_Year > ( select min ( T1.Total_spent ) from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID where T2.Open_Year > 1 )
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

easy pred: select Name , Name from visitor
easy gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id

medium pred: select Name , Name from visitor group by ID having count ( * ) > 1
medium gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

medium pred: select Name , ID , Age from visitor group by ID having count ( * ) > 1
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

extra pred: select T2.Name from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID order by T1.Total_spent desc limit 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

extra pred: select T2.ID , T2.Level_of_membership from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID order by T1.Total_spent desc limit 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

medium pred: select T1.ID , T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID
medium gold: SELECT Museum_ID, name FROM museum

medium pred: select T1.ID , T3.Name , count ( * ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID group by T1.ID
medium gold: SELECT t2.Museum_ID ,  t1.name, count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID

extra pred: select T3.Name , T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID group by T1.ID order by count ( * ) desc limit 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

extra pred: select count ( * ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.ID not in ( select Museum_ID from visit )
extra gold: SELECT count(*) FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

hard pred: select T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.ID not in ( select Museum_ID from visit )
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

easy pred: select count ( * ) from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID where T2.Name = 1
easy gold: SELECT sum(num_of_ticket) FROM visit

medium pred: select T2.ID from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID group by T2.ID order by count ( * ) desc limit 1
medium gold: SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1

hard pred: select Name , Age from visitor group by ID order by count ( * ) desc limit 1
hard gold: SELECT t1.name,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

easy pred: select sum ( Total_spent ) from visit
easy gold: SELECT max(Total_spent) FROM visit

medium pred: select avg ( Total_spent ) , max ( Total_spent ) , max ( Total_spent ) from visit
medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit

medium pred: select T1.Num_of_Ticket from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID where T2.Level_of_membership = 1
medium gold: SELECT t2.Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

extra pred: select T1.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T3.Open_Year > 1 intersect select T4.Name from visitor as T4 join visit as T5 on T4.ID = T5.visitor_ID join museum as T6 on T5.Museum_ID = T6.Museum_ID where T6.Open_Year > 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

medium pred: select count ( * ) from museum where Open_Year > 1
medium gold: SELECT count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010

extra pred: select count ( T1.Name ) from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T3.Open_Year not in ( select Name from museum where Open_Year > 1 )
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

easy pred: select count ( * ) from Likes
easy gold: SELECT count(*) FROM Highschooler

medium pred: select count ( * ) from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id where T1.grade = 1
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  11 OR grade  =  12

medium pred: select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID join Likes as T3 on T2.ID = T3.student_id where T1.student_id = 1 or T2.grade = 1
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

hard pred: select grade from Highschooler order by * asc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) ASC LIMIT 1

hard pred: select T1.grade from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id group by T1.grade order by count ( * ) desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

easy pred: select count ( * ) from Likes
easy gold: SELECT count(*) FROM Highschooler

medium pred: select count ( * ) , T1.grade from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id group by T1.grade
medium gold: SELECT grade, count(*) FROM Highschooler GROUP BY grade

eval_err_num:28
easy pred: select T1.grade from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id where count ( T2.* ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  10

easy pred: select T1.grade from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id group by T1.grade having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

easy pred: select T1.name from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id order by T2.student_id desc limit 1
easy gold: SELECT name FROM highschooler

medium pred: select T1.name , T2.friend_id from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id
medium gold: SELECT T2.name, T3.name FROM friend as T1 join highschooler as T2  on friend_id = T2.ID join highschooler as T3 on student_id = T3.ID

medium pred: select friend_id , count ( * ) from Friend group by student_id
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

easy pred: select name from Highschooler order by grade desc limit 1
easy gold: SELECT name FROM highschooler

eval_err_num:29
easy pred: select count ( * ) from Likes ( select T1.* from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID join Likes as T3 on T2.ID = T3.student_id group by T2.* having count ( * ) > 1 )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  > 5)

eval_err_num:30
easy pred: select count ( * ) from Likes ( select T1.* from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID join Likes as T3 on T2.ID = T3.student_id group by T2.* having count ( * ) > = 1 )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 3)

medium pred: select friend_id from Friend group by friend_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:31
easy pred: select T2.* from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id where T1.name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

hard pred: select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

hard pred: select T1.friend_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:32
easy pred: select T2.* from Highschooler as T1 join Likes as T2 on T1.ID = T2.student_id where T1.name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:33
hard pred: select friend from Highschooler where name = 1
hard gold: SELECT T3.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.liked_id  =  T3.id WHERE T2.name  =  "Kyle"

hard pred: select T1.friend_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

hard pred: select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

easy pred: select student_id from Friend
easy gold: SELECT ID FROM highschooler

easy pred: select student_id from Friend group by student_id having count ( * ) > = 1
easy gold: SELECT student_id FROM Friend

hard pred: select student_id from Friend where student_id not in ( select ID from Highschooler )
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

easy pred: select friend_id from Friend where student_id = 1
easy gold: SELECT name FROM highschooler

easy pred: select friend_id from Friend group by student_id having count ( * ) > = 1
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 5)

easy pred: select friend_id from Friend group by friend_id having count ( * ) > = 1
easy gold: SELECT distinct T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

hard pred: select friend_id from Friend where friend_id in ( select student_id from Friend group by friend_id having count ( * ) > = 1 )
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

medium pred: select T1.student_id , T1.friend_id , T3.student_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID join Likes as T3 on T2.ID = T3.student_id
medium gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id

extra pred: select friend_id , student_id from Friend where student_id not in ( select friend_id from Friend )
extra gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id where T1.student_id in (SELECT liked_id FROM Likes)

hard pred: select student_id , friend_id from Friend group by friend_id
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

easy pred: select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID join Likes as T3 on T2.ID = T3.student_id where T1.student_id not in ( select friend_id from Friend )
easy gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

easy pred: select friend_id , count ( * ) from Friend group by friend_id
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

easy pred: select count ( * ) from Friend where student_id not in ( select friend_id from Friend )
easy gold: SELECT count (*) FROM (SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id)

hard pred: select friend_id from Friend where student_id not in ( select friend_id from Friend )
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

hard pred: select friend_id from Friend where student_id not in ( select friend_id from Friend )
hard gold: SELECT name FROM Highschooler where ID not in (SELECT student_id FROM Likes)

easy pred: select friend_id from Friend where student_id not in ( select friend_id from Friend )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

medium pred: select friend_id , count ( * ) from Friend group by friend_id
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

easy pred: select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID join Likes as T3 on T2.ID = T3.student_id where T1.student_id not in ( select liked_id from Likes )
easy gold: SELECT count(distinct student_id) FROM likes

easy pred: select friend_id from Friend where student_id not in ( select liked_id from Likes )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

extra pred: select count ( * ) from Friend group by friend_id order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

extra pred: select friend_id from Friend group by friend_id order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

easy pred: select friend_id from Friend
easy gold: SELECT name FROM highschooler

medium pred: select friend_id , friend_id from Friend group by student_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  1

medium pred: select student_id from Friend group by student_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select friend_id from Friend
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

medium pred: select friend_id from Friend group by friend_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select T1.friend_id , T2.grade from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID group by T1.friend_id having count ( * ) > = 1
medium gold: SELECT T2.name, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

hard pred: select T1.friend_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.grade > 1
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

medium pred: select count ( * ) from Highschooler where name = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id WHERE T2.name  =  "Kyle"

hard pred: select T1.friend_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1 and T1.friend_id = 1
hard gold: SELECT T3.name  FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id JOIN Highschooler as T3 on T3.ID = T1.student_id WHERE T2.name  =  "Kyle"

medium pred: select count ( * ) from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T1.name = 1 and T2.friend_id = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

medium pred: select grade , grade from Highschooler
medium gold: SELECT id, grade FROM highschooler

eval_err_num:34
extra pred: select avg ( T1.* ) from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T2.student_id not in ( select grade from Highschooler )
extra gold: SELECT avg(grade) FROM Highschooler WHERE id not IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: select student_id from Friend where student_id not in ( select friend_id from Friend )
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

easy pred: select Age from teacher
easy gold: SELECT Hometown FROM teacher

medium pred: select Hometown , Hometown from teacher
medium gold: SELECT Age ,  Hometown FROM teacher

easy pred: select Hometown from teacher where Name != 1
easy gold: SELECT * FROM teacher WHERE Hometown != "Little Lever Urban Distric"

easy pred: select Name from teacher where Name != 1
easy gold: SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban Distric"

medium pred: select Age from teacher where Age = 1 or Age = 1
medium gold: SELECT * FROM teacher WHERE Age  =  32 OR Age  =  33

easy pred: select Hometown from teacher order by Hometown
easy gold: SELECT * FROM teacher order BY Hometown

easy pred: select Hometown , count ( * ) from teacher group by Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

easy pred: select Hometown , count ( * ) from teacher group by Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

easy pred: select Course from course
easy gold: SELECT * FROM course_arrange

medium pred: select Course , count ( * ) from course group by Course_ID
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

easy pred: select Course from course
easy gold: SELECT * FROM course_arrange

easy pred: select Course from course
easy gold: SELECT * FROM course_arrange

hard pred: select T3.Name , T1.Course from course as T1 join course_arrange as T2 on T1.Course_ID = T2.Course_ID join teacher as T3 on T2.Teacher_ID = T3.Teacher_ID
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

medium pred: select Name , count ( * ) from teacher group by Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select Name , count ( * ) from teacher group by Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select Name from teacher group by Teacher_ID having count ( * ) > = 1
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

medium pred: select feature_name from Other_Available_Features where feature_name = 1
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"

easy pred: select property_type_description from Ref_Property_Types
easy gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code

medium pred: select property_type_description , property_type_description from Ref_Property_Types
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

easy pred: select T1.state , T2.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
easy gold: SELECT * FROM area_code_state

easy pred: select count ( state ) , state from VOTES group by state
easy gold: SELECT count(*) FROM area_code_state

medium pred: select T1.contestant_name , T2.contestant_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number
medium gold: SELECT contestant_number ,  contestant_name FROM contestants

medium pred: select T1.contestant_name , T2.contestant_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by T1.contestant_name desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

easy pred: select * from VOTES
easy gold: SELECT state FROM votes

medium pred: select vote_id , vote_id from VOTES
medium gold: SELECT vote_id,  state FROM votes

medium pred: select vote_id , contestant_number from VOTES
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

easy pred: select area_code from AREA_CODE_STATE order by area_code asc limit 1
easy gold: SELECT min(area_code) FROM area_code_state

medium pred: select T1.area_code , min ( T1.area_code ) from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number group by T1.area_code order by count ( * ) asc limit 1
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

eval_err_num:35
easy pred: select T2.* from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T1.state = 1
easy gold: SELECT * FROM votes WHERE state  =  'CA'

eval_err_num:36
easy pred: select T3.* from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number where T1.state = 1 and T2.state = 1
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

easy pred: select contestant_name from CONTESTANTS where contestant_name = 1
easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'

easy pred: select state from VOTES group by state
easy gold: SELECT state FROM votes

easy pred: select state from VOTES
easy gold: SELECT * FROM votes

eval_err_num:37
medium pred: select T2.* from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number group by T2.state having count ( * ) > = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

easy pred: select state from VOTES
easy gold: SELECT * FROM votes

extra pred: select contestant_number from VOTES order by vote_id asc limit 1
extra gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

extra pred: select T1.contestant_number , T2.vote_id from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by T2.vote_id asc limit 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

medium pred: select T2.created from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T1.state = 1 or T1.state = 1
medium gold: SELECT * FROM votes WHERE state  =  'NY' OR state  =  'CA'

medium pred: select count ( * ) from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where T1.state = 1 or T1.state = 1
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

hard pred: select T1.contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T2.vote_id not in ( select contestant_number from VOTES )
hard gold: SELECT * FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

extra pred: select count ( * ) from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T2.vote_id not in ( select contestant_number from VOTES )
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

easy pred: select T1.state , T2.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
easy gold: SELECT * FROM area_code_state

easy pred: select state , state from VOTES
easy gold: SELECT * FROM votes

medium pred: select T2.contestant_number , count ( * ) from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number group by T2.state
medium gold: SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code

extra pred: select T1.area_code from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state group by T2.state order by count ( T2.state ) desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

medium pred: select T2.created from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T1.contestant_name = 1 and T1.contestant_name = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:38
medium pred: select T1.* , T2.state , T2.contestant_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T1.contestant_name = 1
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

easy pred: select area_code from AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

extra pred: select T1.contestant_name , T2.contestant_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where T1.contestant_name = 1
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

extra pred: select T1.section_description from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Degree_Programs as T5 on T4.degree_program_id = T5.degree_program_id order by T5.degree_summary_description desc limit 1
extra gold: SELECT T2.department_description ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.department_name , T5.transcript_id from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id join Student_Enrolment as T3 on T2.degree_program_id = T3.degree_program_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id group by student_enrolment_Courses.course_id order by count ( * ) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

medium pred: select * from Departments where department_name = 1
medium gold: SELECT * FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select count ( * ) from Departments where department_name = 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select * from Courses group by course_id having count ( * ) = 1
medium gold: SELECT * FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  =  2

extra pred: select T3.first_name , T1.semester_id from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id group by T1.semester_id order by count ( * ) asc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) ASC LIMIT 1

extra pred: select semester_name , semester_id from Semesters group by semester_id order by count ( * ) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:39
medium pred: select T6.* from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Degree_Programs as T5 on T4.degree_program_id = T5.degree_program_id join Departments as T6 on T5.department_id = T6.department_id where T1.section_name like 1
medium gold: SELECT * FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select T1.section_description from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id where T2.course_name like 1
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select count ( * ) from Sections where course_id = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

medium pred: select T4.first_name , T4.middle_name , T4.last_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id where T1.course_id = 1
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

hard pred: select count ( * ) from Courses where course_name = 1
hard gold: SELECT DISTINCT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

hard pred: select T5.date_first_registered , T1.section_description , T5.last_name , T5.last_name from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

extra pred: select course_name from Courses group by course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 3

extra pred: select course_name from Courses group by course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.course_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Transcript_Contents as T3 on T2.student_course_id = T3.student_course_id join Transcripts as T4 on T3.transcript_id = T4.transcript_id group by T4.transcript_id order by count ( * ) asc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1

extra pred: select course_name from Courses group by course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.course_id , T4.transcript_date from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Transcript_Contents as T3 on T2.student_course_id = T3.student_course_id join Transcripts as T4 on T3.transcript_id = T4.transcript_id group by T1.course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.student_id , T2.first_name , T2.last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Student_Enrolment_Courses as T3 on T1.student_enrolment_id = T3.student_enrolment_id join Transcript_Contents as T4 on T3.student_course_id = T4.student_course_id join Transcripts as T5 on T4.transcript_id = T5.transcript_id group by T5.transcript_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 3

extra pred: select T1.student_id , T4.first_name , T4.last_name from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id join Students as T4 on T1.student_id = T4.student_id order by T3.course_description desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.section_description from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id where T5.student_id not in ( select student_id from Student_Enrolment )
hard gold: SELECT semester_description FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

hard pred: select first_name from Students where student_id not in ( select student_id from Student_Enrolment )
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

extra pred: select course_name from Courses group by course_id order by count ( * ) asc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) ASC LIMIT 1

extra pred: select count ( * ) from Student_Enrolment where student_enrolment_id in ( select student_enrolment_Courses.course_id from Student_Enrolment_Courses group by student_enrolment_Courses.course_id order by count ( * ) desc limit 1 )
extra gold: SELECT count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T3.course_name from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id where T1.student_enrolment_id in ( select student_enrolment_Courses.course_id from Student_Enrolment_Courses group by student_enrolment_Courses.course_id order by count ( * ) desc limit 1 )
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

medium pred: select count ( * ) from Addresses where country = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina'

extra pred: select count ( * ) from Students where student_id not in ( select T1.student_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Addresses as T3 on T2.permanent_address_id = T3.address_id where T3.state_province_county = 1 )
extra gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

extra pred: select T2.last_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T1.state_province_county = 1 except select T4.last_name from Addresses as T3 join Students as T4 on T3.address_id = T4.permanent_address_id where T3.state_province_county = 1
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

medium pred: select T5.semester_id from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Semesters as T5 on T4.semester_id = T5.semester_id join Transcript_Contents as T6 on T3.student_course_id = T6.student_course_id group by T1.course_id having count ( * ) = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  = 2

medium pred: select T5.semester_id from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Semesters as T5 on T4.semester_id = T5.semester_id join Transcript_Contents as T6 on T3.student_course_id = T6.student_course_id group by T1.course_id having count ( * ) > = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

medium pred: select email_address from Students where first_name = 1 and last_name = 1
medium gold: SELECT current_address_id FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

medium pred: select first_name , middle_name , last_name from Students
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered DESC LIMIT 1

medium pred: select first_name , middle_name , last_name from Students where student_id in ( select student_id from Student_Enrolment )
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: select T5.date_first_registered , T1.section_description , T5.last_name from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id order by T5.date_first_registered limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left DESC LIMIT 1

medium pred: select T5.date_first_registered , T1.section_description , T5.last_name from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id order by T5.date_first_registered limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

extra pred: select T1.address_id from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id join Transcripts as T6 on T5.transcript_id = T6.transcript_id group by T6.transcript_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select count ( ssn ) from Students where student_id in ( select T1.student_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.student_id order by count ( * ) desc limit 1 )
extra gold: SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.address_id , count ( * ) from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id join Transcripts as T6 on T5.transcript_id = T6.transcript_id group by T6.transcript_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

medium pred: select transcript_date from Transcripts
medium gold: SELECT other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select transcript_date from Transcripts where transcript_date = 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select date_first_registered from Students order by date_first_registered asc limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select date_first_registered from Students order by date_first_registered desc limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:40
hard pred: select T1.student_enrolment_id , count ( student_enrolment_Courses.* ) from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Transcript_Contents as T3 on T2.student_course_id = T3.student_course_id join Transcripts as T4 on T3.transcript_id = T4.transcript_id group by T4.transcript_id
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:41
hard pred: select count ( student_enrolment_Courses.* ) from Student_Enrolment_Courses where student_course_id in ( select T3.student_course_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id group by T1.transcript_id order by count ( student_enrolment_Courses.* ) desc limit 1 )
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:42
extra pred: select T4.* from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Transcript_Contents as T4 on T3.student_course_id = T4.student_course_id group by T4.transcript_id order by count ( * ) asc limit 1
extra gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

medium pred: select student_enrolment_id from Student_Enrolment
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'

eval_err_num:43
medium pred: select T2.* from Student_Enrolment as T1 join Semesters as T2 on T1.semester_id = T2.semester_id where T1.student_enrolment_id = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:44
extra pred: select T2.* from Student_Enrolment as T1 join Semesters as T2 on T1.semester_id = T2.semester_id where T1.student_enrolment_id = 1 intersect select T3.* from Semesters as T5 join Student_Enrolment as T4 on T5.semester_id = T4.semester_id join Student_Enrolment_Courses as T5 on T4.student_enrolment_id = T5.student_enrolment_id where T5.student_course_id = 1
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

easy pred: select * from Breeds
easy gold: SELECT * FROM Owners

easy pred: select * from Professionals where role_code = 1
easy gold: SELECT * FROM Professionals

easy pred: select state from Owners
easy gold: SELECT state FROM Professionals

hard pred: select state from Professionals where professional_id in ( select owner_id from Dogs )
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

hard pred: select weight , min ( age ) from Dogs where age = ( select max ( age ) from Dogs )
hard gold: SELECT * FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

hard pred: select avg ( age ) from Dogs where age = ( select max ( age ) from Dogs )
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

easy pred: select * from Professionals
easy gold: SELECT * FROM Professionals WHERE role_code = 'Employee'

easy pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.zip_code = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Connecticut'

easy pred: select count ( * ) from Professionals where zip_code = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Indiana'

medium pred: select T1.first_name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id where T1.zip_code = 1 and T3.weight = 1
medium gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1

eval_err_num:45
extra pred: select T1.owner_id , T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T2.owner_id having count ( * ) > 1 union select T3.last_name , T3.home_phone from Owners as T5 join Dogs as T6 on T5.owner_id = T6.owner_id join Treatments as T5 on T6.dog_id = T5.dog_id join Professionals as T6 on T5.professional_id = T6.professional_id where T6.zip_code = 1
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

medium pred: select T2.name , T1.charge_amount from Charges as T1 join Dogs as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

medium pred: select T1.name from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id where T2.cost_of_treatment > 1
medium gold: SELECT name FROM Treatments  AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 500

hard pred: select T2.name from Charges as T1 join Dogs as T2 where T1.charge_amount > 1
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

hard pred: select T2.name , T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.role_code = 1
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

easy pred: select T3.name , T3.name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id where T1.role_code = 1
easy gold: SELECT name FROM Dogs

hard pred: select T3.name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id where T1.professional_id not in ( select gender from Dogs )
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

medium pred: select T4.first_name , T1.treatment_type_code from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id
medium gold: SELECT T1.first_name, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T1.first_name , T4.role_code , T4.zip_code from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.email_address, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

extra pred: select T4.owner_id , T5.role_code , T5.email_address from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id join Professionals as T5 on T2.professional_id = T5.professional_id group by T1.treatment_type_code
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T3.owner_id , count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id group by T3.owner_id
medium gold: SELECT T1.owner_id ,count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id

medium pred: select T3.owner_id from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id group by T3.owner_id having count ( * ) = 1
medium gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name, count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id Having count(*) = 2

extra pred: select T3.owner_id from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id group by T3.owner_id order by count ( * ) desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

medium pred: select count ( * ) from Treatments group by professional_id
medium gold: SELECT T1.professional_id , count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T3.first_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id group by T3.first_name having count ( * ) = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) = 1

medium pred: select T3.first_name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id group by T3.first_name having count ( * ) > = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) >= 2

medium pred: select T1.owner_id , T1.first_name , T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T2.owner_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

medium pred: select count ( * ) , T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id group by T3.breed_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

medium pred: select T2.breed_code from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code group by T2.breed_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 2

medium pred: select T2.breed_code from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code group by T2.breed_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 1

extra pred: select T2.name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code group by T2.breed_code order by count ( * ) desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

medium pred: select T2.name , T1.charge_amount from Charges as T1 join Dogs as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

hard pred: select T2.name , T1.charge_amount from Charges as T1 join Dogs as T2
hard gold: SELECT T1.owner_id, T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id

extra pred: select T2.owner_id , T1.charge_amount from Charges as T1 join Owners as T2 order by T1.charge_amount desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

easy pred: select treatment_type_code , treatment_type_description from Treatment_Types
easy gold: SELECT * FROM Treatment_Types

extra pred: select T1.treatment_type_code , sum ( T2.charge_amount ) from Treatment_Types as T1 join Charges as T2 group by T1.treatment_type_code order by sum ( T2.charge_amount ) desc
extra gold: SELECT treatment_type_code, sum(cost_of_treatment) FROM Treatments group by treatment_type_code order by sum(cost_of_treatment) desc

extra pred: select T1.treatment_type_description , sum ( T2.charge_amount ) from Treatment_Types as T1 join Charges as T2 group by T1.treatment_type_code order by sum ( T2.charge_amount ) desc
extra gold: SELECT T2.treatment_type_code, T1.treatment_type_description,  sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

extra pred: select T1.treatment_type_description from Treatment_Types as T1 join Charges as T2 group by T1.treatment_type_code order by sum ( T2.charge_amount ) asc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

medium pred: select T2.name , T1.charge_amount from Charges as T1 join Dogs as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

medium pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id where T3.cost_of_treatment > 1
medium gold: SELECT count(name) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 700

hard pred: select T2.owner_id , T3.zip_code from Charges as T1 join Owners as T2 join Professionals as T3 join Treatments as T4 where T1.charge_amount > 1 and T4.cost_of_treatment > 1
hard gold: SELECT T1.owner_id ,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id Having sum(T3.cost_of_treatment) > 400

extra pred: select T2.owner_id from Charges as T1 join Owners as T2 where T1.charge_amount > 1 order by T1.charge_amount desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

medium pred: select T4.first_name , T1.treatment_type_description from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id
medium gold: SELECT T1.first_name, T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T4.first_name , T2.charge_type , count ( * ) from Breeds as T1 join Charges as T2 join Dogs as T3 on T1.breed_code = T3.breed_code join Owners as T4 on T3.owner_id = T4.owner_id group by T3.dog_id
medium gold: SELECT T1.first_name, T2.treatment_type_code, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T1.first_name , T1.cell_number from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by T2.dog_id having count ( * ) = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  = 1

medium pred: select T2.first_name , T1.charge_type from Charges as T1 join Professionals as T2 join Dogs as T3 group by T3.dog_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

medium pred: select min ( charge_amount ) , max ( charge_amount ) , avg ( charge_amount ) from Charges
medium gold: SELECT min(cost_of_treatment), max(cost_of_treatment), avg(cost_of_treatment) FROM Treatments

extra pred: select T2.first_name , max ( T1.charge_amount ) from Charges as T1 join Professionals as T2 join Treatments as T3 group by T3.cost_of_treatment
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT min(cost_of_treatment) FROM Treatments )

extra pred: select max ( charge_amount ) , max ( charge_amount ) from Charges
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT max(cost_of_treatment) FROM Treatments )

extra pred: select avg ( charge_amount ) , max ( charge_amount ) from Charges
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

medium pred: select count ( * ) , T1.zip_code from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id group by T3.breed_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

hard pred: select T2.breed_code from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code group by T2.breed_code order by count ( * ) desc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) DESC LIMIT 1

hard pred: select T4.zip_code from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T2.breed_code order by count ( * ) asc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) ASC LIMIT 1

extra pred: select weight from Dogs order by age asc limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

medium pred: select T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id where T1.first_name = 1 and T3.cost_of_treatment = 1
medium gold: SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

medium pred: select T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id where T1.first_name = 1 and T3.cost_of_treatment = 1
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

eval_err_num:46
medium pred: select T1.* from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code order by T2.age desc limit 1
medium gold: SELECT * FROM Dogs order by age asc limit 1

extra pred: select T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id order by T2.age desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

extra pred: select T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id order by T2.age asc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT min(age) FROM Dogs )

easy pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.role_code = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Hawaii'

medium pred: select T4.email_address , T4.state from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.zip_code = 1 or T1.state = 1
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

easy pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T2.gender = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Wisconsin'

medium pred: select T4.zip_code , T1.street from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T2.gender = 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE state = 'Wisconsin'

medium pred: select state from Professionals where role_code like 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

easy pred: select state from Professionals
easy gold: SELECT state FROM Owners

easy pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T2.name = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Vermont'

medium pred: select T1.first_name , T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where T2.name like 1
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

easy pred: select age from Dogs order by age desc
easy gold: SELECT age FROM Dogs ORDER BY age

easy pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T2.age < 1
easy gold: SELECT count(*) FROM Dogs WHERE age  < 4

hard pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T2.age < 1
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

easy pred: select * from Breeds
easy gold: SELECT * FROM Treatments

eval_err_num:47
easy pred: select T2.* from Charges as T1 join Breeds as T2 order by T1.charge_amount asc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment ASC

eval_err_num:48
easy pred: select T2.* from Charges as T1 join Breeds as T2 order by T1.charge_amount desc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment DESC

eval_err_num:49
medium pred: select T2.* from Charges as T1 join Breeds as T2 order by T1.charge_amount desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

easy pred: select * from Breeds
easy gold: SELECT * FROM Owners

easy pred: select * from Dogs
easy gold: SELECT count(*) FROM Dogs

hard pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T2.abandoned_yn = 1
hard gold: SELECT count(*) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:50
extra pred: select T1.* from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where T2.dog_id not in ( select owner_id from Dogs )
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

easy pred: select * from Breeds
easy gold: SELECT * FROM Owners

easy pred: select count ( * ) from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Breeds as T4 on T3.breed_code = T4.breed_code where T1.treatment_type_description = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Arizona'

eval_err_num:51
extra pred: select T4.* from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Breeds as T4 on T3.breed_code = T4.breed_code where T1.treatment_type_description = 1 except select T8.* from Treatment_Types as T5 join Treatments as T6 on T5.treatment_type_code = T6.treatment_type_code join Dogs as T7 on T6.dog_id = T7.dog_id join Breeds as T8 on T7.breed_code = T8.breed_code where T5.treatment_type_description = 1
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

                     easy                 medium               hard                 extra                all                  joint_all           
count                481                  441                  145                  133                  1200                 421                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.424                0.190                0.083                0.053                0.256                0.100               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.650                0.415                0.526                0.418                0.524                0.000               
select(no AGG)       0.660                0.427                0.540                0.418                0.534                0.000               
where                0.491                0.373                0.181                0.236                0.363                0.000               
where(no OP)         0.509                0.392                0.337                0.327                0.415                0.000               
group(no Having)     0.464                0.556                0.636                0.377                0.514                0.000               
group                0.464                0.537                0.576                0.321                0.482                0.000               
order                0.579                0.444                0.675                0.683                0.589                0.000               
and/or               1.000                0.954                0.935                0.907                0.965                0.000               
IUEN                 0.000                0.000                0.167                0.143                0.125                0.000               
keywords             0.803                0.828                0.620                0.521                0.739                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.632                0.397                0.497                0.383                0.502                0.000               
select(no AGG)       0.642                0.408                0.510                0.383                0.512                0.000               
where                0.531                0.363                0.190                0.173                0.356                0.000               
where(no OP)         0.551                0.380                0.354                0.240                0.407                0.000               
group(no Having)     0.619                0.504                0.568                0.328                0.479                0.000               
group                0.619                0.487                0.514                0.279                0.450                0.000               
order                0.579                0.406                0.551                0.642                0.534                0.000               
and/or               0.994                0.974                0.956                0.959                0.978                0.000               
IUEN                 0.000                0.000                0.050                0.042                0.045                0.000               
keywords             0.872                0.757                0.552                0.466                0.699                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.641                0.406                0.511                0.400                0.513                1.000               
select(no AGG)       0.651                0.417                0.525                0.400                0.523                1.000               
where                0.510                0.368                0.185                0.200                0.359                1.000               
where(no OP)         0.529                0.386                0.346                0.277                0.411                1.000               
group(no Having)     0.531                0.529                0.600                0.351                0.496                1.000               
group                0.531                0.511                0.543                0.298                0.465                1.000               
order                0.579                0.424                0.607                0.662                0.560                1.000               
and/or               0.997                0.964                0.945                0.932                0.972                1.000               
IUEN                 1.000                1.000                0.077                0.065                0.067                1.000               
keywords             0.836                0.791                0.584                0.492                0.719                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                421                  421                  269                  88                   1                   

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.409                0.195                0.160                0.114                0.000               
