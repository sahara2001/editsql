easy pred: select * from flights
easy gold: SELECT * FROM AIRLINES

easy pred: select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select Country from airlines where Abbreviation = 1
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select T1.Abbreviation from airlines as T1 join flights as T2 where T2.FlightNo = 1
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select * from airports where AirportCode = 1
easy gold: SELECT * FROM AIRPORTS WHERE city  =  "Anthony"

medium pred: select AirportCode , AirportCode from airports where AirportCode = 1
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

easy pred: select * from flights
easy gold: SELECT * FROM AIRLINES

easy pred: select count ( Airline ) from flights
easy gold: SELECT count(*) FROM AIRLINES

easy pred: select count ( Airline ) from flights
easy gold: SELECT count(*) FROM FLIGHTS

easy pred: select Airline from airlines where Abbreviation like 1
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

easy pred: select count ( T2.Airline ) from airlines as T1 join flights as T2 where T1.Country = 1
easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"

medium pred: select T2.City , T1.Country from airlines as T1 join airports as T2
medium gold: SELECT City ,  Country FROM AIRPORTS

medium pred: select T2.City , T1.Country from airlines as T1 join airports as T2 where T2.AirportCode = 1
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

easy pred: select AirportCode from airports
easy gold: SELECT AirportName FROM AIRPORTS

easy pred: select AirportCode from airports where AirportCode like 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

easy pred: select AirportCode from airports
easy gold: SELECT AirportName FROM AIRPORTS

easy pred: select AirportCode from airports where AirportCode = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

easy pred: select * from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select count ( Airline ) from flights where FlightNo = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select FlightNo from flights where SourceAirport = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "ATO"

easy pred: select count ( T2.Airline ) from airlines as T1 join flights as T2 where T1.Abbreviation = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:1
medium pred: select T2.* from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.AirportCode = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count ( * ) from flights where FlightNo = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select * from flights where FlightNo = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count ( * ) from flights where FlightNo = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select * from flights where FlightNo = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

hard pred: select FlightNo from flights where FlightNo = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

hard pred: select count ( * ) from flights where FlightNo = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

medium pred: select * from flights where FlightNo = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

medium pred: select count ( Airline ) from flights where FlightNo = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

easy pred: select T2.FlightNo from airlines as T1 join flights as T2 where T1.Airline = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

easy pred: select count ( T2.Airline ) from airlines as T1 join flights as T2 where T1.Airline = 1
easy gold: SELECT count(*) FROM AIRLINES WHERE Airline  =  "United Airlines"

medium pred: select count ( * ) from airports where AirportCode = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

easy pred: select T2.FlightNo from airlines as T1 join flights as T2 where T1.Airline = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

medium pred: select T2.FlightNo from airlines as T1 join flights as T2 where T1.Abbreviation = 1
medium gold: SELECT * FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

medium pred: select count ( T2.Airline ) from airlines as T1 join flights as T2 where T1.Abbreviation = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

hard pred: select FlightNo from flights where FlightNo = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

hard pred: select count ( * ) from flights where FlightNo = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

easy pred: select City from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

hard pred: select T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport order by T2.FlightNo
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by T1.AirportCode order by count ( T2.Airline ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

easy pred: select City from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport

hard pred: select T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by T1.City order by count ( T2.Airline )
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select T1.City from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by T1.City order by count ( T2.Airline ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

easy pred: select FlightNo from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: select FlightNo , FlightNo from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

extra pred: select T1.AirportCode , T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by T2.FlightNo order by count ( T2.Airline ) desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

easy pred: select FlightNo from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: select FlightNo , FlightNo from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

extra pred: select FlightNo , FlightNo from flights group by FlightNo order by count ( Airline ) asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

medium pred: select count ( T2.Airline ) , T1.Airline from airlines as T1 join flights as T2 group by T1.Airline
medium gold: SELECT count(*) ,  T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline

extra pred: select T2.Airline from airlines as T1 join flights as T2 group by T1.Airline order by count ( T2.Airline ) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

medium pred: select T2.Airline , T1.Country from airlines as T1 join flights as T2
medium gold: SELECT Abbreviation ,  Country FROM AIRLINES

hard pred: select T2.Airline , T1.Country from airlines as T1 join flights as T2 order by T2.FlightNo
hard gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*)

extra pred: select T1.Airline , T1.Country from airlines as T1 join flights as T2 group by T1.Airline order by count ( T2.Airline ) asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

easy pred: select Airline from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "AHD"

medium pred: select Airline from flights where FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

easy pred: select Airline from flights where FlightNo = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "AHD"

medium pred: select Airline from flights where FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

medium pred: select Airline from flights where FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

extra pred: select Airline from flights where FlightNo = 1 and FlightNo = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

medium pred: select T2.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 1 and T1.Airline = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

extra pred: select Airline from flights where FlightNo != 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

easy pred: select * from flights
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: select T1.Airline from airlines as T1 join flights as T2 group by T1.Airline having count ( T2.Airline ) > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

easy pred: select * from flights
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

medium pred: select T2.FlightNo from airlines as T1 join flights as T2 where T1.Abbreviation = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

easy pred: select FlightNo from flights where FlightNo = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select FlightNo , FlightNo from flights where FlightNo = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

easy pred: select FlightNo from flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode

medium pred: select FlightNo from flights where FlightNo = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

easy pred: select FlightNo from flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode

medium pred: select FlightNo from flights where FlightNo = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:2
medium pred: select T2.* from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
medium gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen"

hard pred: select T2.FlightNo , T2.FlightNo from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1
hard gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: select count ( T2.Airline ) from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where T1.City = 1 or T1.City = 1
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

easy pred: select * from airports
easy gold: SELECT SourceAirport FROM Flights

hard pred: select AirportCode , AirportCode from airports
hard gold: SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights

hard pred: select * from airports where AirportCode not in ( select AirportCode from airports )
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

eval_err_num:3
easy pred: select T3.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID order by T1.Age
easy gold: SELECT * FROM pets ORDER BY pet_age

easy pred: select T3.weight from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID order by T1.Age desc limit 1
easy gold: SELECT weight FROM pets ORDER BY pet_age

medium pred: select T3.PetType from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID order by T1.Age asc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

easy pred: select weight from Pets
easy gold: SELECT DISTINCT petType FROM pets

medium pred: select max ( weight ) , count ( * ) from Pets group by weight
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

eval_err_num:4
medium pred: select T3.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age > 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select count ( * ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Age > 1
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: select * from Student where Sex = 1 and LName = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'

hard pred: select count ( * ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where T1.Sex = 1 and T2.PetID = 1
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

easy pred: select pet_age from Pets
easy gold: SELECT DISTINCT pettype FROM pets

easy pred: select count ( pet_age ) from Pets
easy gold: SELECT count(DISTINCT pettype) FROM pets

hard pred: select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where T2.StuID = ( select PetID from Has_Pet where StuID = 1 )
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

extra pred: select T1.Fname , T1.LName from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where T2.StuID = ( select PetID from Has_Pet where StuID = 1 ) and StuID in ( select StuID from Has_Pet where StuID = 1 )
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

eval_err_num:5
hard pred: select T1.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age = ( select T5.PetID from Pets as T4 join Has_Pet as T5 on T4.PetID = T5.PetID order by T4.weight asc limit 1 )
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:6
extra pred: select T1.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.Sex = 1 or T3.weight = 1
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select T1.Fname from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age = 1 or T3.weight = 1
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:7
hard pred: select T1.* from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.weight = 1
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

hard pred: select * from Student where Major = 1
hard gold: SELECT major FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

extra pred: select pet_age , pet_age from Pets
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

easy pred: select StuID from Student group by StuID
easy gold: SELECT stuid FROM student

eval_err_num:8
hard pred: select T1.StuID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where T2.StuID = ( select T3.StuID from Student as T5 join Has_Pet as T4 on T5.StuID = T4.StuID join Pets as T5 on T4.PetID = T5.PetID where T5.weight = 1 )
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

hard pred: select StuID from Student except select StuID from Has_Pet
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

hard pred: select * from Pets where weight = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select * from Student where StuID not in ( select T2.PetID from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID where T1.weight = 1 )
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:9
extra pred: select T1.Fname , T1.Age from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where T2.* not in ( select T4.PetID from Pets as T3 join Has_Pet as T4 on T3.PetID = T4.PetID where T3.weight = 1 )
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

medium pred: select PetID from Pets order by pet_age asc limit 1
medium gold: SELECT * FROM pets ORDER BY pet_age LIMIT 1

medium pred: select pet_age from Pets order by pet_age asc limit 1
medium gold: SELECT pettype FROM pets ORDER BY pet_age LIMIT 1

medium pred: select pet_age , weight from Pets order by weight asc limit 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

easy pred: select PetID from Has_Pet
easy gold: SELECT petid FROM pets

easy pred: select T2.StuID from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where T1.Age > 1
easy gold: SELECT petid FROM pets WHERE pet_age  >  1

medium pred: select weight , weight from Pets where weight > 1
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

easy pred: select pet_age from Pets
easy gold: SELECT DISTINCT pettype FROM pets

medium pred: select max ( T1.Age ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID group by T3.pet_age
medium gold: SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select avg ( Age ) from Student
medium gold: SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select avg ( weight ) from Pets
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

easy pred: select * from Student
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: select Fname from Student
easy gold: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select pet_age , pet_age from Pets
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: select * from Student
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select * from Student where LName = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

medium pred: select StuID from Student where LName = 1
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

easy pred: select * from Student
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select count ( * ) , T2.PetID from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID group by T2.PetID
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

medium pred: select T1.Fname , T1.Sex from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where T2.StuID > ( select min ( Fname ) from Student )
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: select StuID from Student where Age = 1
medium gold: SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'

hard pred: select * from Student where Age = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

hard pred: select LName from Student where Age = ( select max ( T1.Fname ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T3.pet_age = 1 )
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

hard pred: select * from Student where StuID not in ( select PetID from Has_Pet )
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

extra pred: select avg ( T3.pet_age ) from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID join Pets as T3 on T2.PetID = T3.PetID where T1.StuID not in ( select PetID from Has_Pet )
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

easy pred: select Name from country where SurfaceArea > 1
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

easy pred: select count ( * ) from country where Population = 1
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

easy pred: select Region from country where Region = 1
easy gold: SELECT * FROM country WHERE Region  =  "Caribbean"

easy pred: select Continent from country where Region = 1
easy gold: SELECT SurfaceArea FROM country WHERE Region  =  "Caribbean"

easy pred: select Region from country where Region = 1
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

easy pred: select Continent from country group by Continent
easy gold: SELECT Continent FROM country

medium pred: select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

medium pred: select T1.Language from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

extra pred: select T1.Language from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code join city as T3 on T2.Code = T3.CountryCode where T2.Continent = 1 group by T2.Continent order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

medium pred: select T2.Continent , T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code
medium gold: SELECT Population ,  LifeExpectancy FROM country

medium pred: select T2.Population , T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

easy pred: select Region from country where Continent = 1
easy gold: SELECT Region FROM country WHERE Name  =  "Angola"

easy pred: select Continent , Population from country
easy gold: SELECT Population FROM country WHERE Name  =  "Angola"

easy pred: select Continent from country
easy gold: SELECT LifeExpectancy FROM country

easy pred: select Continent from country where Region = 1
easy gold: SELECT LifeExpectancy FROM country WHERE Region  =  "Central Africa"

easy pred: select avg ( T1.Percentage ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

hard pred: select Continent from country where Continent = 1 order by Continent limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

easy pred: select count ( * ) from country where Continent = 1
easy gold: SELECT sum(Population) FROM country WHERE Continent  =  "Asia"

easy pred: select T1.CountryCode from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1 order by T1.CountryCode desc limit 1
easy gold: SELECT max(GNP) FROM country WHERE Continent  =  "Asia"

easy pred: select Region from country where Continent = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Africa"

medium pred: select Region , Continent from country where Continent = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select avg ( T1.Percentage ) from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: select Continent from country where Continent = 1 or Continent = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select Continent from country where Continent = 1 or Continent = 1
medium gold: SELECT SurfaceArea FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

medium pred: select sum ( Region ) from country where Continent = 1 or Continent = 1
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

easy pred: select sum ( T2.Population ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T1.District = 1
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

easy pred: select Continent from country
easy gold: SELECT * FROM country

easy pred: select Continent from country where Region = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "US Territory"

medium pred: select Continent , avg ( Population ) from country where Region = 1 group by Continent
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

easy pred: select T1.Language from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Population = 1
easy gold: SELECT DISTINCT LANGUAGE FROM countrylanguage

easy pred: select Continent from country where Continent = 1
easy gold: SELECT DISTINCT GovernmentForm FROM country WHERE Continent  =  "Africa"

easy pred: select count ( Continent ) from country where Continent = 1
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

easy pred: select * from country where Continent = 1
easy gold: SELECT * FROM country WHERE Name  =  "Aruba"

medium pred: select Continent from country where Continent = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select count ( * ) from country where Continent = 1
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

medium pred: select T1.Language from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan"

medium pred: select GovernmentForm , count ( * ) from country where Continent = 1 group by Code
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

medium pred: select T2.Continent , count ( * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent
medium gold: SELECT count(*) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name

extra pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select T2.Continent , count ( * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent
medium gold: SELECT COUNT(*) ,  T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent

extra pred: select T2.Code from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent order by count ( * ) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select Continent from country where Name = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select Continent from country where Name = 1 intersect select Continent from country where Name = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch"

easy pred: select count ( * ) from country where Name = 1
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

medium pred: select Name from country where Name = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select Continent from country where Name = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

medium pred: select GovernmentForm from country group by Continent
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

medium pred: select Name from country where GovernmentForm = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T"

extra pred: select Continent from country where Code = 1 intersect select T2.GovernmentForm from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

medium pred: select Continent from country where Continent = 1
medium gold: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select Continent from country where Continent = 1
medium gold: SELECT DISTINCT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: select count ( Continent ) from country where Continent = 1
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

easy pred: select District from city
easy gold: SELECT DISTINCT Region FROM country

hard pred: select T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Region = 1 or T2.Region = 1
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

medium pred: select GovernmentForm from country group by Continent
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE IsOfficial  =  "T"

extra pred: select Continent from country where Continent = 1 or Region = 1
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

extra pred: select Code from country where Continent = 1 and Continent = ( select max ( Continent ) from country where Continent = 1 )
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

easy pred: select Continent from country where GovernmentForm = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "Republic"

hard pred: select Continent from country where Code = 1 group by Continent having count ( * ) = 1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

medium pred: select T1.Name from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Name = 1
medium gold: SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Name = 1 order by T1.Population desc limit 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

medium pred: select Name , Continent , Continent from country where Continent = 1
medium gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia"

hard pred: select Continent from country where Continent = 1 order by SurfaceArea desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select GovernmentForm from country group by Continent
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

hard pred: select Continent from country where Code not in ( select CountryCode from countrylanguage where Language = 1 )
hard gold: SELECT * FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

extra pred: select Continent from country where Code != 1
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

hard pred: select Name from country where Name != 1
hard gold: SELECT Name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

extra pred: select Name from country where Population != 1
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

medium pred: select Continent from country where Name = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

medium pred: select Continent from country where Continent = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

medium pred: select Continent from country where Name = 1 and Name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

easy pred: select Name from country where Continent > 1
easy gold: SELECT T1.Name FROM country AS t1 WHERE  IndepYear  <  1930

medium pred: select count ( GovernmentForm ) from country where Continent > 1
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

hard pred: select Continent from country group by Continent having count ( * ) > 1
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

easy pred: select max ( Population ) from country where Continent = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Asia"

extra pred: select T2.Continent from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T1.Percentage < ( select max ( Population ) from country where Continent = 1 )
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

extra pred: select Continent from country where Population > ( select min ( Population ) from country where Continent = 1 )
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

easy pred: select Continent from country
easy gold: SELECT CountryCode FROM countrylanguage

hard pred: select Continent from country where Continent != 1
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

easy pred: select Continent from country
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage

easy pred: select Continent from country where Continent != 1
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE ! =  "English"

easy pred: select Continent from country where Code != 1
easy gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic"

hard pred: select Continent from country where Code != 1 except select Continent from country where Continent = 1
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

medium pred: select Name from country where GovernmentForm = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English'

extra pred: select Name from country where Continent != 1
extra gold: SELECT Name FROM country WHERE Continent  =  'Europe' AND Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English')

extra pred: select Name from country where Region not in ( select T1.CountryCode from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Name = 1 )
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

medium pred: select Continent from country where Continent = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select T2.Continent from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1 and T1.Language = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

hard pred: select T1.District from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Continent = 1 and T2.GovernmentForm = 1
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population asc limit 1
medium gold: SELECT * FROM country ORDER BY Population LIMIT 1

medium pred: select T2.Name , T2.Continent , T2.Region from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

medium pred: select Continent from country order by SurfaceArea desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select Population , Continent , GovernmentForm from country order by SurfaceArea desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select Name from country group by Continent having count ( * ) > = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

medium pred: select T2.Continent , count ( * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent having count ( * ) > = 1
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

easy pred: select District , avg ( Population ) from city group by District
easy gold: SELECT avg(Population) FROM city

extra pred: select District from city where Population > ( select avg ( Population ) from city ) group by District
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

easy pred: select Continent from country where Population > 1
easy gold: SELECT * FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: select Continent , Continent , GovernmentForm from country where Population > ( select avg ( Population ) from country where Population = 1 )
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

easy pred: select Continent from country where Population < 1
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select T2.Population , T1.Population , T1.Population from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.Population < 1
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: select Region , Name from country order by SurfaceArea desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

easy pred: select T2.Region from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population desc
easy gold: SELECT * FROM country ORDER BY Population DESC

medium pred: select T2.Continent from city as T1 join country as T2 on T1.CountryCode = T2.Code order by T1.Population desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

easy pred: select Continent from country order by Population
easy gold: SELECT * FROM country ORDER BY Population

medium pred: select Continent from country order by Population asc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

easy pred: select Continent from country where Continent = 1
easy gold: SELECT * FROM country WHERE continent  =  "Asia"

easy pred: select count ( Population ) from country where Continent = 1
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

easy pred: select Region from country where Continent = 1
easy gold: SELECT * FROM country WHERE continent  =  "Europe"

medium pred: select Name from country where Continent = 1
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

easy pred: select Continent from country where Region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "North America"

medium pred: select Continent from country where SurfaceArea > 1 and Region > 1
medium gold: SELECT * FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

hard pred: select sum ( T1.Population ) , avg ( T2.Region ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where T2.SurfaceArea > 1
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

hard pred: select T1.Language from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code group by T2.Continent order by count ( * ) desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

easy pred: select T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "Day of the Dark Knight!"

easy pred: select * from TV_Channel where Language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Italy"

easy pred: select * from TV_Channel where Language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Poland"

easy pred: select T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!"

hard pred: select T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Title = 1
hard gold: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!")

medium pred: select count ( series_name ) , series_name from TV_Channel group by series_name
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel

eval_err_num:10
easy pred: select T1.* from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id where T2.series_name = 1
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Rock TV"

easy pred: select T1.Title from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T2.series_name = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Rock TV"

hard pred: select T1.Title , count ( * ) from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id group by T2.Language having count ( * ) > = 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1

easy pred: select series_name from TV_Channel where series_name = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

easy pred: select T1.Rating from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Double Down"

easy pred: select T1.Rating from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Keepers"

easy pred: select T1.Weekly_Rank from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id where T2.series_name = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "Emily"

easy pred: select T1.Weekly_Rank from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id where T2.series_name = 1
easy gold: SELECT Share FROM TV_series WHERE Episode = "Emily"

medium pred: select min ( Pixel_aspect_ratio_PAR ) , max ( Pixel_aspect_ratio_PAR ) from TV_Channel where series_name = 1
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series

easy pred: select T1.Rating from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "A Love of a Lifetime"

easy pred: select T1.Weekly_Rank from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

medium pred: select series_name from TV_Channel where series_name = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"

easy pred: select series_name from TV_Channel where series_name = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

easy pred: select T1.Air_Date from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where T3.Title = 1
easy gold: SELECT Original_air_date FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

medium pred: select T1.Production_code , T2.series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id join TV_series as T3 on T2.id = T3.Channel order by T3.Episode desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

easy pred: select Directed_by from Cartoon where Directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"

medium pred: select T2.Country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Directed_by = 1 or T1.Written_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Todd Casey'

eval_err_num:11
hard pred: select T2.Country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Written_by = 1 except select T3.Channel from TV_series as T5 join TV_Channel as T4 on T5.Channel = T4.id join Cartoon as T5 on T4.id = T5.Channel where T5.Written_by = 1
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

easy pred: select Directed_by from Cartoon where Title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Deep Cover for Batman!"

extra pred: select T2.series_name , T2.Country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Directed_by = 1 or T1.Directed_by = 1
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

easy pred: select count ( * ) from TV_Channel where series_name = 1
easy gold: SELECT COUNT(*) FROM TV_Channel WHERE Country = "Italy"

easy pred: select T1.Channel from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id where T2.Country = 1 group by T2.Country having count ( T1.Channel ) > 1
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

hard pred: select T2.id from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id where T1.Channel not in ( select Directed_by from Cartoon where Directed_by = 1 )
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

easy pred: select Final_Table_Made , Earnings from poker_player
easy gold: SELECT Earnings FROM poker_player

eval_err_num:12
easy pred: select T2.Final_Table_Made from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by T2.* order by count ( * ) desc
easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC

easy pred: select * from poker_player
easy gold: SELECT Final_Table_Made FROM poker_player

medium pred: select Final_Table_Made , Final_Table_Made , Final_Table_Made from poker_player order by Final_Table_Made desc limit 1
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

easy pred: select Final_Table_Made , Earnings from poker_player
easy gold: SELECT Earnings FROM poker_player

easy pred: select Money_Rank from poker_player group by *
easy gold: SELECT Money_Rank FROM poker_player

easy pred: select * from poker_player order by Money_Rank desc
easy gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC

medium pred: select * from poker_player order by Money_Rank desc limit 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

easy pred: select Final_Table_Made from poker_player where Earnings < 1
easy gold: SELECT * FROM poker_player WHERE Earnings  <  200000

easy pred: select max ( Earnings ) from poker_player where Earnings < 1
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: select * from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

easy pred: select Final_Table_Made from poker_player where Earnings > 1
easy gold: SELECT * FROM poker_player WHERE Earnings  >  300000

easy pred: select * from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select * from poker_player order by Final_Table_Made asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

easy pred: select Birth_Date from people
easy gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

hard pred: select Final_Table_Made from poker_player order by Earnings asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:13
easy pred: select T2.* , T1.Height from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

hard pred: select T2.Final_Table_Made from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID order by T1.Height desc limit 1
hard gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:14
easy pred: select T2.* , T1.Height from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

medium pred: select Name from people where Height > 1
medium gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

medium pred: select * from poker_player order by Earnings desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

easy pred: select Nationality from people group by Nationality
easy gold: SELECT * FROM people GROUP BY Nationality

easy pred: select Nationality , count ( * ) from people group by Nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

easy pred: select Nationality , count ( * ) from people group by Nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

hard pred: select * from poker_player where People_ID not in ( select * from poker_player )
hard gold: SELECT * FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

hard pred: select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.People_ID not in ( select * from poker_player )
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

easy pred: select injured from death
easy gold: SELECT killed FROM death

easy pred: select max ( injured ) from death
easy gold: SELECT max(killed) FROM death

easy pred: select min ( injured ) from death
easy gold: SELECT min(killed) FROM death

medium pred: select max ( injured ) , max ( injured ) from death
medium gold: SELECT max(killed) ,  min(killed) FROM death

eval_err_num:15
easy pred: select T2.* from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id where T1.killed = 1
easy gold: SELECT * FROM death as T1 JOIN ship as T2 ON T1.caused_by_ship_id  =  T2.id

medium pred: select * from ship where disposition_of_ship = 1
medium gold: SELECT * FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

medium pred: select T1.killed from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id where T2.ship_type = 1
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

medium pred: select T3.id , T1.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id
medium gold: SELECT id, name FROM battle

easy pred: select T1.id , T2.name from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id
easy gold: SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle

medium pred: select id , name from ship where ship_type = 1
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

hard pred: select killed , injured from death group by killed
hard gold: SELECT T1.id ,  T1.name, sum(T3.killed), sum(T3.injured) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id

hard pred: select killed from death group by killed having count ( killed ) > = 1
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

medium pred: select T1.injured , T2.name from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id group by T2.id
medium gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id

hard pred: select T1.injured , T2.name from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id group by T2.id order by count ( T1.injured ) desc
hard gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured)

extra pred: select T2.id , T1.killed from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id group by T2.id order by sum ( T1.injured ) desc limit 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured) DESC LIMIT 1

easy pred: select T3.id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T1.bulgarian_commander = 1
easy gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan'

easy pred: select T3.killed from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T1.latin_commander = 1
easy gold: SELECT name FROM battle WHERE latin_commander  =  'Baldwin I'

medium pred: select name from battle where latin_commander = 1
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

easy pred: select T1.id from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id where T2.disposition_of_ship like 1
easy gold: SELECT lost_in_battle FROM ship WHERE tonnage  =  '225'

medium pred: select T1.name , T2.id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.disposition_of_ship like 1
medium gold: SELECT T2.id, T2.name from ship AS T1 join battle AS T2 ON T1.lost_in_battle = T2.id WHERE tonnage  =  '225'

extra pred: select T1.id , T2.name from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id except select T3.killed , T4.name from death as T3 join ship as T4 on T3.caused_by_ship_id = T4.id where T4.disposition_of_ship = 1
extra gold: SELECT id, name FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select count ( killed ) from death where id not in ( select T1.id from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id where T2.disposition_of_ship = 1 )
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select T1.name , T1.date from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where T2.name = 1
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

medium pred: select T3.id , T2.name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle join death as T3 on T2.id = T3.caused_by_ship_id where T1.bulgarian_commander = 1
medium gold: SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:16
extra pred: select T1.id , T2.name from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id except select T5.id , T4.name , T4.name from battle as T5 join ship as T4 on T5.id = T4.lost_in_battle join death as T5 on T4.id = T5.caused_by_ship_id where T3.bulgarian_commander = 1
extra gold: SELECT T1.id, T1.name FROM battle EXCEPT SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:17
extra pred: select T1.killed , T2.name , T1.killed from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id where T2.id not in ( select T5.id , T4.name , T5.killed from battle as T5 join ship as T4 on T5.id = T4.lost_in_battle join death as T5 on T4.id = T5.caused_by_ship_id where T3.bulgarian_commander = 1 )
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:18
medium pred: select Id , car_names from car_makers
medium gold: SELECT ContId ,  Continent FROM CONTINENTS;

medium pred: select Continent , CountryName from countries
medium gold: SELECT T1.ContId ,  T1.Continent , * FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent;

medium pred: select CountryName , count ( * ) from countries group by Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

medium pred: select Maker , Id from car_makers
medium gold: Select FullName, ID From CAR_MAKERS;

medium pred: select CountryId , CountryId from countries
medium gold: Select Country, FullName, ID From CAR_MAKERS;

medium pred: select CountryName , count ( * ) from countries group by Continent
medium gold: SELECT count(*), T1.Country, T1.FullName, T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:19
medium pred: select car_names , T1.Id , count ( * ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T4.Id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

hard pred: select max ( Horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower DESC LIMIT 1;

hard pred: select min ( Horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

hard pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Horsepower = ( select min ( Horsepower ) from cars_data )
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:20
extra pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Cylinders > ( select avg ( Horsepower ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  >  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:21
extra pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Cylinders > ( select avg ( Horsepower ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

extra pred: select T1.Model from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T2.Cylinders > ( select avg ( Cylinders ) from cars_data )
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

medium pred: select T1.Id , T4.Weight from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year = 1
medium gold: Select T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

medium pred: select T1.Id , T4.Weight , T4.Horsepower from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower = 1
medium gold: Select T1.horsepower, T1.mpg, T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

extra pred: select T1.Maker , T3.Make , T4.Horsepower from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower = 1
extra gold: SELECT T1.Maker, T4.horsepower, T4.mpg, T4.id, T2.model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

extra pred: select T2.Continent , T1.Country from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId where T2.Continent = 1
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

medium pred: select Model , Model from model_list
medium gold: SELECT Make , Model from Car_Names;

medium pred: select Model , Model from model_list
medium gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId;

extra pred: select T2.Model , T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Year asc limit 1
extra gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:22
extra pred: select T1.* , T5.Year from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id order by T5.Year asc limit 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

medium pred: select * , Year from cars_data
medium gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id;

eval_err_num:23
hard pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Year > 1
hard gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: select CountryId , CountryName , CountryName from countries
medium gold: SELECT T1.Continent,  T3.Maker, T2.CountryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country;

hard pred: select CountryName , count ( * ) from countries group by CountryName
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

medium pred: select CountryName , count ( * ) from countries group by Continent
medium gold: SELECT *, count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country;

extra pred: select CountryName from countries group by Continent order by count ( * ) asc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) ASC LIMIT 1;

extra pred: select CountryName from countries group by Continent order by count ( * ) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

easy pred: select count ( * ) from countries
easy gold: Select Count(*) FROM CAR_MAKERS;

medium pred: select T1.Maker , T3.Make , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model
medium gold: SELECT FullName, id FROM CAR_MAKERS;

medium pred: select T1.Model , T3.Make , T2.Id , T4.Id , count ( * ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join car_names as T3 on T1.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T2.Id
medium gold: SELECT T1.Model ,  T2.FullName, T2.id  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id;

medium pred: select count ( * ) , Id , Id from car_makers group by Id
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

medium pred: select Id from car_makers where * = 1
medium gold: SELECT T1.ID FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:24
medium pred: select T4.Accelerate from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.* = 1
medium gold: SELECT T1.Horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:25
medium pred: select T4.Cylinders from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T1.* = 1
medium gold: SELECT T1.MPG FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:26
medium pred: select T5.Accelerate from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T1.* = 1
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

medium pred: select T3.Continent from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join countries as T3 on T2.Country = T3.CountryId where T1.Model = 1
medium gold: SELECT T1.Maker, T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId;

medium pred: select Continent from countries where CountryName = 1
medium gold: SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

medium pred: select count ( * ) from countries where CountryName = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

easy pred: select count ( * ) from car_makers
easy gold: SELECT count(*) FROM MODEL_LIST;

hard pred: select count ( * ) from countries where Continent = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Germany';

hard pred: select count ( * ) from countries where Continent = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'japan';

hard pred: select count ( * ) from countries where Continent = 1 and Continent = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:27
easy pred: select T1.* from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T5.Year = 1
easy gold: SELECT * FROM CARS_DATA WHERE YEAR  =  1974;

medium pred: select Weight , Weight from cars_data where Year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974;

hard pred: select Weight , Weight from cars_data order by Weight asc limit 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

hard pred: select CountryName from countries where CountryName not in ( select CountryName from countries )
hard gold: Select CountryName FROM COUNTRIES where CountryID not in (Select Country from CAR_MAKERS);

medium pred: select CountryName from countries where CountryName = 1 group by CountryName having count ( * ) > = 1
medium gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: select CountryName , CountryId from countries group by CountryName having count ( * ) > = 1
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: select Continent , CountryName from countries
medium gold: SELECT T3.Maker, T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country;

hard pred: select CountryName , count ( * ) from countries group by CountryName
hard gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country GROUP BY T1.CountryName;

extra pred: select CountryId , CountryName , count ( * ) from countries group by Continent having Continent = 1
extra gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName;

extra pred: select CountryName from countries where Continent = 1 group by CountryName having count ( * ) > = 1
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

medium pred: select Horsepower from cars_data
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:28
medium pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  8;

eval_err_num:29
medium pred: select T1.* from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3;

extra pred: select max ( Cylinders ) from cars_data where Horsepower = 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

medium pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Weight = 1
medium gold: SELECT id FROM CARS_DATA ORDER BY horsepower DESC LIMIT 1;

medium pred: select Id from cars_data order by Cylinders desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1;

eval_err_num:30
hard pred: select T1.* from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where T2.Weight = 1
hard gold: SELECT T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

hard pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Cylinders desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

easy pred: select avg ( Cylinders ) from cars_data
easy gold: SELECT avg(edispl) FROM CARS_DATA;

medium pred: select avg ( Edispl ) from cars_data
medium gold: SELECT T1.Make, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Make;

medium pred: select avg ( Cylinders ) from cars_data
medium gold: SELECT T1.Model, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Model;

medium pred: select avg ( Cylinders ) from cars_data
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

easy pred: select Model from model_list
easy gold: SELECT distinct Model from CAR_NAMES;

medium pred: select T1.Model , T3.Horsepower from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id
medium gold: SELECT Model, Make FROM CAR_NAMES;

medium pred: select count ( * ) , T1.Model from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join countries as T3 on T2.Country = T3.CountryId group by T1.Model
medium gold: SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model;

hard pred: select Model from model_list group by Model order by count ( * ) desc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

easy pred: select Maker from car_makers
easy gold: SELECT FullName FROM CAR_MAKERS;

eval_err_num:31
medium pred: select T1.Country , T3.* , T4.Horsepower from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select T1.Make from car_names as T1 join model_list as T2 on T1.Model = T2.Model join car_makers as T3 on T2.Maker = T3.Id join countries as T4 on T3.Country = T4.CountryId where T4.Continent = 1
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

medium pred: select count ( * ) from countries where Continent = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:32
easy pred: select T2.* from car_makers as T1 join countries as T2 on T1.Country = T2.CountryId group by T1.* having count ( * ) > = 1
easy gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select * from car_makers group by * having count ( * ) > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  1;

medium pred: select * from countries group by Continent having count ( * ) > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

medium pred: select T3.Make , T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model group by T1.Id having count ( * ) > 1
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

hard pred: select count ( T1.Model ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where T2.FullName = 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id WHERE T3.FullName  =  'General Motors';

extra pred: select count ( T1.Model ) from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T1.Model > 1 or T3.Weight > 1
extra gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:33
extra pred: select T1.Model , car_names from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Weight > 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

medium pred: select Year from cars_data
medium gold: SELECT Year, weight FROM CARS_DATA;

easy pred: select Year from cars_data where Cylinders > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  >  3000;

easy pred: select Year from cars_data where Cylinders > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  <  4000;

medium pred: select Year , Horsepower from cars_data where Cylinders > 1
medium gold: SELECT DISTINCT Year FROM CARS_DATA WHERE Weight  >  3000 AND Weight  <  4000;

medium pred: select min ( Accelerate ) from cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate ASC LIMIT 1;

hard pred: select T1.Id , max ( T4.Accelerate ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id
hard gold: SELECT T1.ID, T2.Make, T2.Model FROM CARS_DATA as T1 JOIN CAR_NAMES as T2 ON T1.ID = T2.MakeID ORDER BY T1.accelerate DESC LIMIT 1;

medium pred: select Accelerate , max ( Accelerate ) from cars_data
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

medium pred: select * from car_makers
medium gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo';

eval_err_num:34
extra pred: select T2.* from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where T1.Model = ( select max ( Accelerate ) from cars_data )
extra gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select Accelerate from cars_data order by Accelerate desc limit 1
extra gold: SELECT T1.horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

extra pred: select Cylinders from cars_data order by Accelerate
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

medium pred: select max ( Horsepower ) from cars_data
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

medium pred: select Accelerate from cars_data where Horsepower = ( select max ( Accelerate ) from cars_data )
medium gold: SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

hard pred: select Id from cars_data where Accelerate > ( select max ( Accelerate ) from cars_data )
hard gold: SELECT id FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: select count ( * ) from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Accelerate > ( select max ( Accelerate ) from cars_data )
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: select CountryId from countries where CountryId not in ( select ContId from continents )
hard gold: SELECT CountryName FROM COUNTRIES where CountryId not in (SELECT T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country);

easy pred: select T1.Continent from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T5.Id not in ( select Continent from continents )
easy gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country;

easy pred: select count ( * ) from countries ( select CountryName from countries group by Continent having count ( * ) > 1 )
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  1 );

easy pred: select CountryName from countries group by Continent having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

medium pred: select T1.Model , T3.Weight from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:35
medium pred: select T1.* from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where T5.Horsepower = 1
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4;

extra pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Horsepower limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower ASC LIMIT 1;

extra pred: select T1.Model from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by T3.Horsepower desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

extra pred: select T1.Id from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where T4.Horsepower > ( select min ( Horsepower ) from cars_data )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA);

extra pred: select T1.Id , T3.Make from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T4.Id having count ( * ) < = 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 5;

extra pred: select T1.Id , T3.Make from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id group by T4.Id having count ( * ) < = 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 3;

medium pred: select Accelerate from cars_data where Year < 1
medium gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE YEAR  <  1980;

extra pred: select Horsepower , Horsepower from cars_data where Horsepower < 1
extra gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980;

extra pred: select max ( Accelerate ) from cars_data where Horsepower < 1
extra gold: SELECT accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY accelerate DESC LIMIT 1;

extra pred: select max ( Horsepower ) , max ( Accelerate ) from cars_data where Horsepower < 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

medium pred: select T1.Model from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where T2.Maker = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName = 'Ford Motor Company';

medium pred: select Model from model_list except select Model from model_list
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName != 'Ford Motor Company';

extra pred: select T1.Model , T3.Weight , T3.Weight from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T1.Model = 1
extra gold: SELECT T1.model, T2.Make, T3.weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'

extra pred: select T1.Model , T3.Weight from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id where T3.Horsepower > 1
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

easy pred: select CountryId from countries
easy gold: SELECT distinct T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

hard pred: select * from car_names except select Make from car_names
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

medium pred: select T1.Id , T3.Make , T1.FullName from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model
medium gold: SELECT T1.Id ,  T1.Maker, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

medium pred: select count ( * ) , Maker from car_makers group by Id
medium gold: SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

medium pred: select Maker , Maker from car_makers group by Id having count ( * ) > = 1
medium gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2;

extra pred: select Id , Maker from car_makers group by Id having count ( * ) > 1
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

medium pred: select round , minutes , max ( minutes ) from matches group by winner_rank
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

easy pred: select count ( winner_entry ) from matches
easy gold: SELECT count(DISTINCT tourney_name) FROM matches

easy pred: select winner_entry from matches group by winner_entry having count ( winner_entry ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  20

easy pred: select winner_entry from matches group by year having count ( winner_entry ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

easy pred: select count ( winner_entry ) from matches where year = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE year = 2013

easy pred: select count ( winner_entry ) from matches where year = 1 and year = 1
easy gold: SELECT count(*) FROM (SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016)

hard pred: select T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.year = 1 and T2.year = 1
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

easy pred: select count ( * ) from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.hand = 1
easy gold: SELECT count(*) FROM matches WHERE loser_hand = "L"

medium pred: select T2.year , T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.winner_rank = 1
medium gold: SELECT T1.last_name, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships'

medium pred: select T1.first_name , T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.winner_rank = 1
medium gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships'

extra pred: select T1.first_name , T1.birth_date from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.country_code = 1 and T2.year = 1
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

medium pred: select player_id , last_name from players order by birth_date desc limit 1
medium gold: SELECT player_id ,  last_name FROM players ORDER BY birth_date LIMIT 1

medium pred: select first_name , country_code from players order by birth_date desc limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

easy pred: select count ( * ) from players as T1 join rankings as T2 on T1.player_id = T2.player_id where T1.hand = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'R'

easy pred: select count ( * ) from players as T1 join rankings as T2 on T1.player_id = T2.player_id where T1.hand = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'L'

medium pred: select country_code , birth_date , birth_date from players order by birth_date
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

hard pred: select count ( * ) from rankings group by player_id order by count ( * ) asc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours ASC LIMIT 1

hard pred: select count ( * ) from rankings group by player_id order by count ( * ) desc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select T1.first_name , T1.country_code from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T2.player_id order by count ( * ) asc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: select winner_name from matches group by score order by count ( * ) desc limit 1
hard gold: SELECT surface FROM matches GROUP BY surface ORDER  BY count(*) DESC LIMIT 1

hard pred: select T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.loser_name order by count ( * ) desc limit 1
hard gold: SELECT loser_name FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T2.winner_rank_points , T2.winner_rank_points from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T1.hand desc limit 1
hard gold: SELECT loser_name, loser_rank_points FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.winner_rank , T3.ranking_points from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.winner_rank order by count ( * ) desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.winner_rank_points desc limit 1
medium gold: SELECT loser_name FROM matches ORDER BY loser_rank_points DESC LIMIT 1

hard pred: select T1.first_name , T2.year from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.country_code = 1 order by T2.winner_rank_points desc limit 1
hard gold: SELECT loser_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY loser_rank_points DESC LIMIT 1

hard pred: select T2.winner_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.country_code = 1 order by T2.winner_rank_points desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: select min ( minutes ) from matches
medium gold: SELECT minutes FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select winner_entry , loser_name from matches order by minutes limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: select T2.winner_entry , T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id
medium gold: SELECT T2.tours, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select avg ( T2.ranking_points ) , T1.first_name from players as T1 join rankings as T2 on T1.player_id = T2.player_id
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.winner_entry , count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T3.player_id
medium gold: SELECT tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select T1.winner_rank , avg ( T1.winner_rank_points ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T3.player_id
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: select avg ( T2.winner_rank_points ) , T1.first_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id join rankings as T3 on T1.player_id = T3.player_id group by T3.player_id
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

easy pred: select count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by T1.winner_name
easy gold: SELECT count(*) FROM players GROUP BY country_code

hard pred: select T1.country_code from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code order by count ( * ) asc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) ASC LIMIT 1

hard pred: select T1.country_code from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code order by count ( * ) desc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

medium pred: select T2.loser_hand , T1.hand from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.loser_hand
medium gold: SELECT count(*), hand FROM players GROUP BY hand

medium pred: select T1.country_code , count ( * ) from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code

medium pred: select T1.country_code from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code having count ( * ) > 1
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code HAVING count(*) > 50

easy pred: select T1.country_code from players as T1 join rankings as T2 on T1.player_id = T2.player_id group by T1.country_code having count ( * ) > 1
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

medium pred: select first_name from players order by birth_date asc limit 1
medium gold: SELECT DISTINCT loser_name FROM matches ORDER BY loser_age DESC LIMIT 3

medium pred: select first_name from players order by birth_date asc limit 1
medium gold: SELECT DISTINCT winner_name FROM matches ORDER BY winner_age DESC LIMIT 3

medium pred: select T2.winner_rank , T2.score from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T1.birth_date asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

easy pred: select count ( * ) from players as T1 join rankings as T2 on T1.player_id = T2.player_id where T1.country_code = 1
easy gold: SELECT count(DISTINCT loser_name) FROM matches WHERE tourney_name  =  'Australian Open'

easy pred: select T2.winner_hand from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T1.country_code = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Australian Open'

medium pred: select T2.winner_name , T2.winner_hand , count ( * ) from players as T1 join matches as T2 on T1.player_id = T2.winner_id group by T2.winner_entry where T1.country_code = 1
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

easy pred: select Age from conductor where Age = 1
easy gold: SELECT Age FROM conductor

easy pred: select Name from conductor where Conductor_ID not in ( select T1.Conductor_ID from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T2.Nationality = 1 )
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

easy pred: select * from orchestra
easy gold: SELECT Record_Company FROM orchestra

medium pred: select * from orchestra
medium gold: SELECT Record_Company, Year_of_Founded FROM orchestra

eval_err_num:36
easy pred: select count ( * ) from orchestra where Year_of_Founded = ( select count ( * ) from orchestra order by Year_of_Founded ) desc
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

easy pred: select count ( * ) from conductor where Nationality = 1
easy gold: SELECT count(DISTINCT Nationality) FROM conductor

easy pred: select Year_of_Work from conductor where Nationality = 1
easy gold: SELECT Year_of_Work FROM conductor

easy pred: select Year_of_Work from conductor where Nationality = 1
easy gold: SELECT Year_of_Work FROM conductor

medium pred: select Name from conductor
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

medium pred: select Name from conductor group by Conductor_ID having count ( * ) > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

easy pred: select Record_Company from orchestra
easy gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company

medium pred: select count ( * ) , count ( * ) , count ( * ) from performance as T1 join orchestra as T2 on T1.Orchestra_ID = T2.Orchestra_ID group by T1.Orchestra_ID
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

easy pred: select Type from performance
easy gold: SELECT Major_Record_Format FROM orchestra

medium pred: select T1.Type from performance as T1 join show as T2 on T1.Performance_ID = T2.Performance_ID order by T2.Attendance
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

easy pred: select * from orchestra
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:37
hard pred: select T2.* from performance as T1 join orchestra as T2 on T1.Orchestra_ID = T2.Orchestra_ID group by T1.Orchestra_ID order by count ( * ) desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select Name from conductor
easy gold: SELECT Orchestra FROM orchestra

hard pred: select T3.Name from performance as T1 join orchestra as T2 on T1.Orchestra_ID = T2.Orchestra_ID join conductor as T3 on T2.Conductor_ID = T3.Conductor_ID where T1.Performance_ID not in ( select Conductor_ID from orchestra )
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

easy pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Year_of_Founded > 1 and T2.Year_of_Work > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

hard pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Year_of_Founded < 1 and T2.Year_of_Work < 1 and T2.Year_of_Work < 1
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

medium pred: select T2.Name from orchestra as T1 join conductor as T2 on T1.Conductor_ID = T2.Conductor_ID where T1.Major_Record_Format = 1 or T1.Year_of_Founded = 1
medium gold: SELECT * FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select count ( Conductor_ID ) from orchestra where Major_Record_Format = 1 or Year_of_Founded = 1
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

medium pred: select Document_ID , Document_Name , Document_Name from Documents
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

medium pred: select Document_Name , Document_Description from Documents where Document_Name like 1
medium gold: SELECT document_name FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select Document_Name , Template_ID from Documents where Document_Name like 1
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: select Document_ID , Document_Description , Document_Description from Documents where Document_Name = 1
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

easy pred: select Document_ID from Documents
easy gold: SELECT DISTINCT template_id FROM Documents

easy pred: select count ( Document_ID ) from Documents
easy gold: SELECT count(DISTINCT template_id) FROM Documents

medium pred: select T1.Template_ID , T2.Template_Type_Code , T2.Template_Type_Code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T1.document_id, T2.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID

medium pred: select T1.Document_ID , T2.Template_Type_Code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where T2.Template_Type_Code = 1
medium gold: SELECT T1.document_id FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID where T2.Template_Type_Code  =  'PPT'

medium pred: select T2.Template_Type_Code , T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id

medium pred: select T2.Template_Type_Code , count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
medium gold: SELECT count(*), T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id

extra pred: select T1.Template_ID from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code order by count ( * ) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

easy pred: select Document_ID from Documents
easy gold: SELECT template_id FROM Documents

easy pred: select Template_ID from Documents
easy gold: SELECT template_id FROM Templates

hard pred: select Template_ID from Documents except select Template_ID from Documents
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

easy pred: select * from Documents
easy gold: SELECT * FROM Templates

easy pred: select count ( * ) from Documents
easy gold: SELECT count(*) FROM Templates

easy pred: select Template_ID from Documents
easy gold: SELECT template_id FROM Templates

medium pred: select Template_Type_Code , Version_Number , Template_Type_Code from Templates
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT DISTINCT template_type_code FROM Templates

easy pred: select Template_Type_Code from Templates
easy gold: SELECT template_id FROM Templates

medium pred: select T1.Document_ID from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where T2.Template_Type_Code = 1 or T2.Template_Type_Code = 1
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

easy pred: select count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where T2.Template_Type_Code = 1
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT version_number FROM Templates

easy pred: select count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where T2.Version_Number > 1
easy gold: SELECT version_number FROM Templates WHERE version_number  >  5

medium pred: select T2.Template_Type_Code , T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Date_Effective_From > 1
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

medium pred: select T2.Template_Type_Code , count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

medium pred: select T2.Template_Type_Code , count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

hard pred: select T2.Template_Type_Code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code order by count ( * ) desc limit 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

medium pred: select T1.Template_Type_Code , count ( * ) from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID group by T2.Template_Type_Code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

easy pred: select T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID group by T2.Template_Type_Code having count ( * ) > 1
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

easy pred: select count ( * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by T2.Template_Type_Code
easy gold: SELECT Version_Number FROM Templates

medium pred: select T1.Template_Type_Code , T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code order by T2.Version_Number limit 1
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

medium pred: select T1.Template_Type_Code , T3.Document_Name from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID
medium gold: SELECT T1.template_type_code, T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: select T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID where T3.Document_Name = 1
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

medium pred: select Template_Type_Code , Template_Type_Code from Ref_Template_Types
medium gold: SELECT T2.document_name, T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

medium pred: select T1.Template_Type_Code , T3.Document_ID from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID
medium gold: SELECT T1.template_type_code , T2.document_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

easy pred: select Template_Type_Code from Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

easy pred: select T1.Template_Type_Code from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code group by T2.Template_Type_Code
easy gold: SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

hard pred: select Template_Type_Code from Templates except select Template_Type_Code from Ref_Template_Types
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: select T1.Template_Type_Code , T3.Document_Description from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

medium pred: select T2.Template_Type_Code , T1.Template_Type_Description from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

easy pred: select T1.Template_Type_Description , T1.Template_Type_Description from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code where T2.Template_Type_Code = 1
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

medium pred: select Template_Type_Code , Template_Type_Code from Templates
medium gold: select T2.Template_ID, T1.template_type_code from Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.template_ID

medium pred: select Template_Type_Description , Template_Type_Code from Ref_Template_Types
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: select Template_Type_Description from Ref_Template_Types
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

easy pred: select Template_ID from Documents
easy gold: SELECT template_id from Templates

medium pred: select T3.Template_ID , T1.Template_Type_Description from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID
medium gold: SELECT T2.template_id, T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code

medium pred: select T3.Template_ID from Ref_Template_Types as T1 join Templates as T2 on T1.Template_Type_Code = T2.Template_Type_Code join Documents as T3 on T2.Template_ID = T3.Template_ID where T1.Template_Type_Description = 1
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

easy pred: select * from Documents
easy gold: SELECT * FROM Paragraphs

easy pred: select count ( * ) from Documents
easy gold: SELECT count(*) FROM Paragraphs

easy pred: select Document_ID from Paragraphs
easy gold: SELECT paragraph_id FROM Paragraphs

medium pred: select Document_ID , Document_Name from Documents
medium gold: SELECT T1.paragraph_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID

medium pred: select Template_ID , Document_Name from Documents where Document_Name = 1
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select count ( * ) from Documents where Document_Name like 1
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

medium pred: select Paragraph_Text , Paragraph_Text from Paragraphs
medium gold: SELECT Other_Details, paragraph_text FROM Paragraphs

easy pred: select Paragraph_Text , Paragraph_Text from Paragraphs where Paragraph_Text like 1
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

medium pred: select Document_ID , Paragraph_Text from Paragraphs
medium gold: SELECT paragraph_id ,  paragraph_text FROM Paragraphs

medium pred: select Document_Name , Document_Name , Document_Name from Documents
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text, T2.Document_Name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select Document_ID , Document_Description from Documents where Document_Name = 1 and Document_Name = 1
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

medium pred: select Document_Name , Document_Name from Documents
medium gold: SELECT T1.paragraph_text, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select Document_Name , Document_Name from Documents where Document_Name = 1
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id

medium pred: select Document_ID from Documents group by Document_ID order by count ( * )
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select Document_Name , count ( * ) from Documents group by Document_ID
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select Document_ID from Documents group by Document_ID having count ( * ) > = 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

medium pred: select Document_ID , Document_Name , Document_ID from Documents
medium gold: SELECT T1.document_id ,  T2.document_name , T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

medium pred: select Template_ID , Document_Name , count ( * ) from Documents group by Template_ID
medium gold: SELECT T1.document_id ,  T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

extra pred: select Document_ID , Document_Name from Documents order by Document_Description limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID order by count ( * )
medium gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*)

hard pred: select Document_ID from Documents group by Document_ID order by count ( * ) asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

easy pred: select Document_ID from Documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select Document_ID from Documents group by Document_ID having count ( * ) between 1 and 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

easy pred: select * from concert
easy gold: SELECT * FROM singer

easy pred: select count ( * ) from concert
easy gold: SELECT count(*) FROM singer

medium pred: select Name , Age , Age from singer
medium gold: SELECT name ,  country ,  age FROM singer

medium pred: select Country , Age , Age from singer order by Age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

easy pred: select Name from stadium
easy gold: select song_name from singer

medium pred: select T1.Name , T2.Year from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT song_name ,  song_release_year FROM singer

medium pred: select T1.Name , T2.Year from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID order by T4.Age
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age

medium pred: select T3.Song_Name , T1.Year from concert as T1 join singer_in_concert as T2 on T1.concert_ID = T2.concert_ID join singer as T3 on T2.Singer_ID = T3.Singer_ID order by T3.Age asc limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

easy pred: select T4.Country from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T1.Average > 1
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

medium pred: select T3.Country , count ( * ) from concert as T1 join singer_in_concert as T2 on T1.concert_ID = T2.concert_ID join singer as T3 on T2.Singer_ID = T3.Singer_ID group by T3.Country
medium gold: SELECT country ,  count(*) FROM singer GROUP BY country

hard pred: select Name from singer where Age > ( select avg ( Age ) from singer )
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

medium pred: select Name , Capacity from stadium order by Highest desc
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC

medium pred: select Name , Capacity from stadium order by Highest desc limit 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

medium pred: select Year from concert where Year = 1
medium gold: SELECT * FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select count ( * ) from concert where Year = 1
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

extra pred: select T1.Name , T1.Capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where T2.Year > = 1 order by T2.Year desc
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC

extra pred: select T1.Name , T1.Capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID order by T2.Year desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

medium pred: select Year from concert order by Year desc
medium gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC

easy pred: select Stadium_ID from stadium
easy gold: SELECT stadium_id FROM concert

easy pred: select Country from singer where Age > 1
easy gold: SELECT country FROM singer WHERE age  <  30

medium pred: select T1.Name , T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT concert_name ,  theme from concert

medium pred: select T1.Name , T2.Theme , count ( * ) from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID group by T2.Theme
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

medium pred: select T2.Song_Name , count ( * ) from singer_in_concert as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Singer_ID
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

easy pred: select Song_Name from singer
easy gold: select name from singer

hard pred: select T4.Song_Name , T1.Capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID join singer_in_concert as T3 on T2.concert_ID = T3.concert_ID join singer as T4 on T3.Singer_ID = T4.Singer_ID where T2.Year = 1
hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

medium pred: select Song_Name , Country from singer where Song_Name = 1
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

medium pred: select Name from singer where Birth_Year = 1
medium gold: SELECT Name, Birth_Year from singer WHERE Birth_Year = 1948

medium pred: select Name , Birth_Year from singer where Birth_Year = 1 or Birth_Year = 1
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

easy pred: select Name , Net_Worth_Millions from singer order by Birth_Year asc
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC

medium pred: select T1.Citizenship , count ( * ) from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Citizenship
medium gold: SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship

medium pred: select T1.Citizenship , count ( * ) from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T1.Citizenship order by count ( * ) desc limit 1
medium gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC

hard pred: select Name , count ( * ) from singer group by Citizenship order by count ( * ) desc limit 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

medium pred: select Name from singer where Name = 1
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID

medium pred: select T1.Name , T1.Birth_Year from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID where T2.Sales > 1
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID WHERE t2.Sales > 300000

medium pred: select T1.Name , count ( * ) from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID
medium gold: SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

medium pred: select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID having count ( * ) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

medium pred: select T1.Name , sum ( T2.Sales ) from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

easy pred: select T1.Singer_ID from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID having count ( * ) > = 1
easy gold: SELECT DISTINCT Singer_ID from song

hard pred: select Name from singer except select T1.Name from singer as T1 join song as T2 on T1.Singer_ID = T2.Singer_ID group by T2.Singer_ID having count ( * ) > = 1
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

easy pred: select T3.District from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where T1.Age < 1
easy gold: SELECT city FROM employee WHERE age  <  30

medium pred: select City from employee group by City having count ( * ) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

easy pred: select count ( * ) from shop
easy gold: SELECT sum(number_products) FROM shop

medium pred: select Name from shop group by Shop_ID order by count ( * ) desc limit 1
medium gold: SELECT name FROM shop ORDER BY number_products DESC LIMIT 1

medium pred: select Manager_name , District from shop group by Manager_name order by count ( * ) desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

hard pred: select Name from shop where Number_products < ( select avg ( Number_products ) from shop )
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

extra pred: select T2.Name from hiring as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID group by T1.Employee_ID order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

easy pred: select Name from employee
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

extra pred: select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID group by T1.Year_awarded order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

easy pred: select count ( * ) from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID join hiring as T3 on T2.Employee_ID = T3.Employee_ID where T3.Employee_ID in ( select Employee_ID from hiring )
easy gold: SELECT count(distinct Employee_ID) FROM evaluation

easy pred: select Name from employee
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

hard pred: select Name from employee except select Name from employee
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

easy pred: select count ( * ) from hiring
easy gold: SELECT count(distinct Shop_ID) FROM hiring

easy pred: select Name from shop where Name like 1
easy gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id

extra pred: select Name from shop where Name like 1 group by Name order by count ( * ) desc limit 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

hard pred: select Name from shop where Shop_ID not in ( select Employee_ID from hiring )
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

easy pred: select count ( * ) from employee
easy gold: SELECT count(*) FROM hiring

medium pred: select T2.Name , count ( * ) from hiring as T1 join shop as T2 on T1.Shop_ID = T2.Shop_ID group by T1.Shop_ID
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

easy pred: select Name from visitor where Level_of_membership > = 1 order by Level_of_membership
easy gold: SELECT name FROM visitor ORDER BY Level_of_membership DESC

medium pred: select T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.Level_of_membership < = 1 except select Level_of_membership from visitor where Level_of_membership < = 1
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

medium pred: select Name , Level_of_membership from visitor where Level_of_membership > 1 and Level_of_membership > 1
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

medium pred: select T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T2.Museum_ID order by count ( * ) desc limit 1
medium gold: SELECT name FROM museum ORDER BY num_of_staff DESC LIMIT 1

medium pred: select T1.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T2.Museum_ID order by avg ( T1.Num_of_Staff ) desc limit 1
medium gold: SELECT museum_id FROM museum ORDER BY num_of_staff DESC LIMIT 1

easy pred: select min ( T2.Total_spent ) from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID where T1.Open_Year < 1
easy gold: SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010

hard pred: select Name from museum where Open_Year > ( select min ( T2.Total_spent ) from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID where T1.Open_Year < 1 )
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

easy pred: select Name , Name from visitor
easy gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id

medium pred: select T1.Name , T1.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID group by T2.visitor_ID having count ( * ) > 1
medium gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

extra pred: select T1.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID where T2.Total_spent = ( select max ( Total_spent ) from visit )
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

extra pred: select T1.ID , T1.Level_of_membership from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID group by T1.ID order by sum ( T2.Total_spent ) desc limit 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

medium pred: select T1.Museum_ID , count ( * ) from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID group by T2.Museum_ID
medium gold: SELECT t2.Museum_ID ,  t1.name, count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID

extra pred: select count ( * ) from visitor where ID not in ( select Museum_ID from visit )
extra gold: SELECT count(*) FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

hard pred: select T3.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T1.ID not in ( select Museum_ID from visit )
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

easy pred: select count ( * ) from visit
easy gold: SELECT sum(num_of_ticket) FROM visit

medium pred: select T2.Museum_ID from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID group by T1.ID order by count ( * ) desc limit 1
medium gold: SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1

hard pred: select Name , Age from visitor group by ID order by count ( * ) desc limit 1
hard gold: SELECT t1.name,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

easy pred: select sum ( Total_spent ) from visit
easy gold: SELECT max(Total_spent) FROM visit

medium pred: select T2.Num_of_Ticket from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID where T1.Level_of_membership = 1
medium gold: SELECT t2.Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

extra pred: select T1.Name from visitor as T1 join visit as T2 on T1.ID = T2.visitor_ID join museum as T3 on T2.Museum_ID = T3.Museum_ID where T3.Open_Year > 1 intersect select T4.Name from visitor as T4 join visit as T5 on T4.ID = T5.visitor_ID join museum as T6 on T5.Museum_ID = T6.Museum_ID where T6.Open_Year > 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

medium pred: select count ( * ) from museum where Open_Year > 1
medium gold: SELECT count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010

extra pred: select count ( * ) from museum where Museum_ID not in ( select T2.Museum_ID from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID where T1.Open_Year > 1 )
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

easy pred: select count ( * ) from Likes
easy gold: SELECT count(*) FROM Highschooler

medium pred: select count ( * ) , T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T1.student_id = 1 group by T2.grade
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  11 OR grade  =  12

medium pred: select count ( * ) , T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.grade = 1 group by T1.student_id
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

hard pred: select grade from Highschooler order by grade asc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) ASC LIMIT 1

hard pred: select T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T2.grade order by count ( * ) desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

easy pred: select count ( * ) from Likes
easy gold: SELECT count(*) FROM Highschooler

medium pred: select T2.grade , count ( * ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T2.grade
medium gold: SELECT grade, count(*) FROM Highschooler GROUP BY grade

easy pred: select T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T2.grade having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  10

easy pred: select count ( * ) from Likes group by student_id having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

easy pred: select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T1.student_id in ( select student_id from Likes )
easy gold: SELECT name FROM highschooler

eval_err_num:38
medium pred: select friend , friend , friend
medium gold: SELECT T2.name, T3.name FROM friend as T1 join highschooler as T2  on friend_id = T2.ID join highschooler as T3 on student_id = T3.ID

eval_err_num:39
medium pred: select friend , count ( * ) from Likes group by student_id
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

easy pred: select name from Highschooler where grade = 1
easy gold: SELECT name FROM highschooler

eval_err_num:40
medium pred: select friend , count ( * ) from Likes group by student_id
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:41
extra pred: select friend , friend group by friend order by count ( * ) asc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:42
extra pred: select friend , count ( * ) from Friend group by friend order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

easy pred: select count ( * ) from Likes ( select count ( * ) from Likes group by * having count ( * ) > 1 )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  > 5)

easy pred: select count ( * ) from Likes ( select count ( * ) from Likes group by student_id having count ( * ) > = 1 )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 3)

medium pred: select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by T1.student_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:43
easy pred: select T1.* from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:44
hard pred: select friend from Likes where student_id in ( select T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.name = 1 )
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:45
hard pred: select friend from Highschooler where name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:46
easy pred: select T1.* from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:47
hard pred: select friend from Highschooler where name = 1
hard gold: SELECT T3.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.liked_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:48
hard pred: select friend from Highschooler where name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

hard pred: select count ( * ) from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T2.name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

easy pred: select student_id from Likes
easy gold: SELECT ID FROM highschooler

medium pred: select count ( * ) , T3.student_id from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID join Likes as T3 on T2.ID = T3.student_id group by T3.student_id
medium gold: SELECT student_id, count(*) FROM friend group by student_id

easy pred: select T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id group by T1.student_id having count ( * ) > = 1
easy gold: SELECT student_id FROM Friend

hard pred: select student_id from Likes except select T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id group by T1.student_id having count ( * ) > = 1
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

easy pred: select T2.name from Friend as T1 join Highschooler as T2 on T1.friend_id = T2.ID where T1.student_id in ( select student_id from Likes )
easy gold: SELECT name FROM highschooler

eval_err_num:49
easy pred: select name from Highschooler where friend in ( select student_id from Likes )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 5)

eval_err_num:50
easy pred: select friend from Likes where student_id in ( select T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID join Friend as T3 on T2.ID = T3.friend_id group by friend having count ( * ) > = 1 )
easy gold: SELECT distinct T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:51
hard pred: select friend , friend group by friend having count ( * ) > = 1
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:52
easy pred: select friend
easy gold: SELECT student_id FROM Friend

eval_err_num:53
medium pred: select friend , friend , friend
medium gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id

eval_err_num:54
extra pred: select friend , friend , friend , friend where friend = 1
extra gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id where T1.student_id in (SELECT liked_id FROM Likes)

eval_err_num:55
hard pred: select friend from Likes where friend not in ( select student_id from Likes )
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

easy pred: select count ( * ) from Likes where student_id in ( select student_id from Likes )
easy gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:56
easy pred: select friend , friend , friend
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:57
easy pred: select count ( * ) from Friend where friend in ( select student_id from Likes )
easy gold: SELECT count (*) FROM (SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id)

eval_err_num:58
hard pred: select friend , friend , friend
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:59
hard pred: select friend from Highschooler except select name from Highschooler
hard gold: SELECT name FROM Highschooler where ID not in (SELECT student_id FROM Likes)

eval_err_num:60
easy pred: select * from Friend where friend not in ( select student_id from Likes )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:61
medium pred: select friend , count ( * ) from Likes group by student_id
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

easy pred: select count ( * ) from Likes
easy gold: SELECT count(distinct student_id) FROM likes

easy pred: select T2.name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T1.student_id in ( select student_id from Likes )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:62
extra pred: select count ( * ) from Likes where friend in ( select student_id from Likes )
extra gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:63
extra pred: select friend group by friend order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:64
easy pred: select friend
easy gold: SELECT name FROM highschooler

eval_err_num:65
medium pred: select friend , friend group by friend having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  1

eval_err_num:66
medium pred: select friend , friend group by friend having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:67
medium pred: select friend , friend
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:68
medium pred: select friend , friend group by friend having count ( * ) > = 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:69
medium pred: select friend , friend , grade from Highschooler group by friend having count ( * ) > = 1
medium gold: SELECT T2.name, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:70
hard pred: select friend from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.grade = 1 and T1.student_id in ( select friend from Friend group by friend having count ( * ) > 1 )
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

easy pred: select * from Highschooler where name = 1
easy gold: SELECT grade FROM highschooler where name = "Kyle"

eval_err_num:71
hard pred: select friend from Highschooler where name = 1
hard gold: SELECT T3.name  FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id JOIN Highschooler as T3 on T3.ID = T1.student_id WHERE T2.name  =  "Kyle"

medium pred: select count ( * ) from Friend where student_id in ( select T1.student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where T2.name = 1 and T2.name = 1 )
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

medium pred: select T1.student_id , T2.grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID
medium gold: SELECT id, grade FROM highschooler

extra pred: select student_id from Likes where student_id not in ( select student_id from Likes )
extra gold: SELECT avg(grade) FROM Highschooler WHERE id not IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: select student_id , student_id from Likes where student_id not in ( select student_id from Likes )
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

easy pred: select Age from teacher
easy gold: SELECT Hometown FROM teacher

medium pred: select Hometown , Hometown from teacher
medium gold: SELECT Age ,  Hometown FROM teacher

easy pred: select Hometown from teacher where Hometown != 1
easy gold: SELECT * FROM teacher WHERE Hometown != "Little Lever Urban Distric"

medium pred: select Name from teacher order by Age asc limit 1
medium gold: SELECT * FROM teacher ORDER BY Age ASC LIMIT 1

easy pred: select Hometown from teacher
easy gold: SELECT * FROM teacher order BY Hometown

easy pred: select Hometown , count ( * ) from teacher group by Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

easy pred: select Hometown , count ( * ) from teacher group by Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

easy pred: select Course from course
easy gold: SELECT * FROM course_arrange

medium pred: select Course , Course from course
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

easy pred: select Course from course
easy gold: SELECT * FROM course_arrange

easy pred: select Course from course
easy gold: SELECT * FROM course_arrange

hard pred: select T1.Name , T3.Course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

medium pred: select T1.Name , count ( * ) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select T1.Name , count ( * ) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by T2.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: select T1.Name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID group by T3.Course_ID having count ( * ) > = 1
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

easy pred: select property_type_description from Ref_Property_Types
easy gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code

easy pred: select T2.area_code , T1.state from VOTES as T1 join AREA_CODE_STATE as T2 on T1.state = T2.state
easy gold: SELECT * FROM area_code_state

easy pred: select count ( state ) from VOTES
easy gold: SELECT count(*) FROM area_code_state

medium pred: select T2.contestant_name , T1.contestant_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number
medium gold: SELECT contestant_number ,  contestant_name FROM contestants

medium pred: select T2.contestant_name , T1.contestant_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number order by T2.contestant_name desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

easy pred: select * from VOTES
easy gold: SELECT state FROM votes

medium pred: select * , vote_id from VOTES
medium gold: SELECT vote_id,  state FROM votes

medium pred: select vote_id , phone_number , phone_number from VOTES
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

easy pred: select T2.area_code from VOTES as T1 join AREA_CODE_STATE as T2 on T1.state = T2.state order by T1.created asc limit 1
easy gold: SELECT min(area_code) FROM area_code_state

medium pred: select max ( phone_number ) , min ( phone_number ) from VOTES
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

easy pred: select created from VOTES
easy gold: SELECT * FROM votes

easy pred: select created from VOTES where state = 1
easy gold: SELECT * FROM votes WHERE state  =  'CA'

easy pred: select created from VOTES where state = 1 and state = 1
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

easy pred: select created from VOTES
easy gold: SELECT * FROM votes

easy pred: select created from VOTES
easy gold: SELECT * FROM votes

medium pred: select state from VOTES group by state having state > = 1 group by * having state > = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

medium pred: select T2.contestant_name , T1.created from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number group by T1.state having count ( * ) > = 1
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

easy pred: select created from VOTES
easy gold: SELECT * FROM votes

extra pred: select state from VOTES order by created asc limit 1
extra gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

extra pred: select T2.contestant_name , T1.created from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number order by T1.created asc limit 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

easy pred: select created from VOTES
easy gold: SELECT * FROM votes

medium pred: select created from VOTES where state = 1 or state = 1
medium gold: SELECT * FROM votes WHERE state  =  'NY' OR state  =  'CA'

medium pred: select count ( * ) from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number where T1.state = 1 or T1.state = 1
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

hard pred: select T2.contestant_name from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number where T1.vote_id not in ( select contestant_number from CONTESTANTS )
hard gold: SELECT * FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

extra pred: select count ( * ) from VOTES where vote_id not in ( select contestant_number from CONTESTANTS )
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

easy pred: select T2.area_code , T1.state from VOTES as T1 join AREA_CODE_STATE as T2 on T1.state = T2.state
easy gold: SELECT * FROM area_code_state

easy pred: select state , state from VOTES
easy gold: SELECT * FROM votes

medium pred: select T2.area_code , count ( T1.state ) from VOTES as T1 join AREA_CODE_STATE as T2 on T1.state = T2.state group by T2.area_code
medium gold: SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code

extra pred: select T2.area_code from VOTES as T1 join AREA_CODE_STATE as T2 on T1.state = T2.state group by T2.area_code order by T1.created desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

easy pred: select created from VOTES
easy gold: SELECT * FROM votes

medium pred: select T1.created from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number where T2.contestant_name = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

medium pred: select T2.contestant_name , T1.state , T1.phone_number from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number where T2.contestant_name = 1
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

easy pred: select area_code from AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

hard pred: select T1.state from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state join CONTESTANTS as T3 on T2.contestant_number = T3.contestant_number where T3.contestant_name = 1
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

extra pred: select T1.section_description from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Degree_Programs as T5 on T4.degree_program_id = T5.degree_program_id group by T5.department_id order by count ( * ) desc limit 1
extra gold: SELECT T2.department_description ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

extra pred: select department_name , department_id from Departments group by department_id order by count ( * ) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:72
medium pred: select T1.* from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Degree_Programs as T5 on T4.degree_program_id = T5.degree_program_id join Departments as T6 on T5.department_id = T6.department_id where T6.department_name = 1
medium gold: SELECT * FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select count ( * ) from Departments where department_name = 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: select * from Courses group by course_id having count ( * ) = 1
medium gold: SELECT * FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  =  2

medium pred: select course_name , course_id from Courses group by course_id having count ( * ) < = 1
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

extra pred: select T2.first_name , T1.semester_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.semester_id order by count ( * ) asc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) ASC LIMIT 1

medium pred: select department_name from Departments where department_name like 1
medium gold: SELECT * FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select T1.course_description from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Degree_Programs as T4 on T3.degree_program_id = T4.degree_program_id join Departments as T5 on T4.department_id = T5.department_id where T5.department_name like 1
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

medium pred: select count ( * ) from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id where T2.semester_id = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

medium pred: select T2.first_name , T3.line_1 , T2.last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Addresses as T3 on T2.permanent_address_id = T3.address_id where T1.semester_id = 1
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

hard pred: select count ( * ) from Students where other_student_details = 1
hard gold: SELECT DISTINCT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

hard pred: select T2.first_name , T1.line_1 , T2.last_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where T2.cell_mobile_number = 1
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

extra pred: select T1.course_description from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id order by T4.ssn desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 3

extra pred: select first_name from Students order by cell_mobile_number desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: select T2.course_description from Student_Enrolment_Courses as T1 join Courses as T2 on T1.course_id = T2.course_id group by T1.student_course_id order by count ( * ) asc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1

extra pred: select T1.course_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id where T4.cell_mobile_number = ( select T5.student_id from Student_Enrolment as T5 join Students as T6 on T5.student_id = T6.student_id order by T6.cell_mobile_number desc limit 1 )
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.section_id , T1.section_description from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id group by T4.student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.student_id , T2.first_name , T2.last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 3

extra pred: select T1.student_id , T2.first_name , T2.last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

hard pred: select T1.section_description from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id where T4.semester_id not in ( select semester_id from Student_Enrolment )
hard gold: SELECT semester_description FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

hard pred: select T2.first_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id where T1.semester_id not in ( select semester_id from Student_Enrolment where semester_id = 1 )
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:73
extra pred: select T2.course_name from Student_Enrolment_Courses as T1 join Courses as T2 on T1.course_id = T2.course_id group by student_enrolment_T2.course_id order by count ( * ) asc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) ASC LIMIT 1

extra pred: select student_course_id , count ( * ) from Student_Enrolment_Courses group by student_enrolment_Courses.course_id order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:74
extra pred: select T2.course_name from Student_Enrolment_Courses as T1 join Courses as T2 on T1.course_id = T2.course_id group by student_enrolment_T2.course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:75
extra pred: select count ( T1.student_id ) from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id where T2.student_id not in ( select T3.student_id from Student_Enrolment as T5 join Students as T4 on T5.student_id = T4.student_id join Addresses as T5 on T4.permanent_address_id = T5.address_id where T5.state_province_county = 1 )
extra gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

extra pred: select last_name from Students where student_id not in ( select T1.student_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Addresses as T3 on T2.permanent_address_id = T3.address_id where T3.state_province_county = 1 )
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

medium pred: select T3.transcript_date , T2.transcript_id from Student_Enrolment_Courses as T1 join Transcript_Contents as T2 on T1.student_course_id = T2.student_course_id join Transcripts as T3 on T2.transcript_id = T3.transcript_id group by student_enrolment_Courses.course_id having count ( * ) = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  = 2

medium pred: select T3.transcript_date , T2.transcript_id from Student_Enrolment_Courses as T1 join Transcript_Contents as T2 on T1.student_course_id = T2.student_course_id join Transcripts as T3 on T2.transcript_id = T3.transcript_id group by student_enrolment_Courses.course_id having count ( * ) > = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

medium pred: select email_address from Students where first_name = 1 and last_name = 1
medium gold: SELECT current_address_id FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

medium pred: select first_name , first_name , last_name from Students
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered DESC LIMIT 1

eval_err_num:76
medium pred: select T2.first_name , T2.first_name , T2.last_name , T2.last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id where T1.student_id in ( select T3.student_id , T4.last_name , T4.last_name from Student_Enrolment as T3 join Students as T4 on T3.student_id = T4.student_id where T3.student_id in ( select T5.student_id , T6.last_name , T6.last_name from Student_Enrolment as T5 join Students as T6 on T5.student_id = T6.student_id where T5.student_id in ( select T7.student_id , T8.last_name , T8.last_name from Student_Enrolment as T7 join Students as T8 on T7.student_id = T8.student_id where T7.student_id in ( select T9.student_id , T10.last_name , T10.last_name from Student_Enrolment as T9 join Students as T10 on T9.student_id = T10.student_id where T9.student_id in ( select T11.student_id , T12.last_name , T12.last_name from Student_Enrolment as T11 join Students as T12 on T11.student_id = T12.student_id where T11.student_id in ( select T13.student_id , T14.last_name , T14.last_name from Student_Enrolment as T13 join Students as T14 on T13.student_id = T14.student_id where T13.student_id in ( select T15.student_id , T16.last_name , T16.last_name from Student_Enrolment as T15 join Students as T16 on T15.student_id = T16.student_id where T15.student_id in ( select T17.student_id , T18.last_name , T18.last_name from Student_Enrolment as T17 join Students as T18 on T17.student_id = T18.student_id where T17.student_id in ( select T19.student_id , T20.last_name , T20.last_name from Student_Enrolment as T19 join Students as T20 on T19.student_id = T20.student_id where T19.student_id in ( select T21.student_id , T22.last_name , T22.last_name from Student_Enrolment as T221 join Students as T22 on T221.student_id = T22.student_id where T21.student_id in ( select T23.student_id , T24.last_name , T24.last_name from Student_Enrolment as T243 join Students as T24 on T243.student_id = T24.student_id where T23.student_id in ( select T25.student_id , T26.last_name , T26.last_name from Student_Enrolment as T265 join Students as T26 on T265.student_id = T26.student_id where T25.student_id in ( select T27.student_id , T28.last_name , T28.last_name from Student_Enrolment as T287 join Students as T28 on T287.student_id = T28.student_id where T27.student_id in ( select T29.student_id , T30.last_name , T30.last_name from Student_Enrolment as T309 join Students as T30 on T309.student_id = T30.student_id where T29.student_id in ( select T31.student_id , T32.last_name , T32.last_name from Student_Enrolment as T31 join Students as T32 on T31.student_id = T32.student_id where T31.student_id in ( select T33.student_id , T34.last_name , T34.last_name from Student_Enrolment as T33 join Students as T34 on T33.student_id = T34.student_id where T33.student_id in ( select T35.student_id , T36.last_name , T36.last_name from Student_Enrolment as T35 join Students as T36 on T35.student_id = T36.student_id where T35.student_id in ( select T37.student_id , T38.last_name , T38.last_name from Student_Enrolment as T37 join Students as T38 on T37.student_id = T38.student_id where T37.student_id in ( select T39.student_id , T40.last_name , T40.last_name from Student_Enrolment as T39 join Students as T40 on T39.student_id = T40.student_id where T39.student_id in ( select T41.student_id , T42.last_name , T42.last_name from Student_Enrolment as T41 join Students as T42 on T41.student_id = T42.student_id where T41.student_id in ( select T43.student_id , T44.last_name , T44.last_name from Student_Enrolment as T43 join Students as T44 on T43.student_id = T44.student_id where T43.student_id in ( select T45.student_id , T46.last_name , T46.last_name from Student_Enrolment as T45 join Students as T46 on T45.student_id = T46.student_id where T45.student_id in ( select T47.student_id , T48.last_name , T48.last_name from Student_Enrolment as T47 join Students as T48 on T47.student_id = T48.student_id where T47.student_id in ( select T49.student_id , T50.last_name , T50.last_name from Student_Enrolment as T49 join Students as T50 on T49.student_id = T50.student_id where T49.student_id in ( select T51.student_id , T52.last_name , T52.last_name from Student_Enrolment as T51 join Students as T52 on T51.student_id = T52.student_id where T51.student_id in ( select T53.student_id , T54.last_name , T54.last_name from Student_Enrolment as T53 join Students as T54 on T53.student_id = T54.student_id where T53.student_id in ( select T55.student_id , T56.last_name , T56.last_name from Student_Enrolment as T55 join Students as T56 on T55.student_id = T56.student_id where T55.student_id in ( select T57.student_id , T58.last_name , T58.last_name from Student_Enrolment as T57 join Students as T58 on T57.student_id = T58.student_id where T57.student_id in ( select T59.student_id , T60.last_name , T60.last_name from Student_Enrolment as T59 join Students as T60 on T59.student_id = T60.student_id where T59.student_id in ( select T61.student_id , T62.last_name , T62.last_name from Student_Enrolment as T61 join Students as T62 on T61.student_id = T62.student_id where T61.student_id in ( select T63.student_id , T64.last_name , T64.last_name from Student_Enrolment as T63 join Students as T64 on T63.student_id = T64.student_id where T63.student_id in ( select T65.student_id , T66.last_name , T66.last_name from Student_Enrolment as T65 join Students as T66 on T65.student_id = T66.student_id where T65.student_id in ( select T67.student_id , T68.last_name , T68.last_name from Student_Enrolment as T67 join Students as T68 on T67.student_id = T68.student_id where T67.student_id in ( select T69.student_id , T70.last_name , T70.last_name from Student_Enrolment as T69 join Students as T70 on T69.student_id = T70.student_id where T69.student_id in ( select T71.student_id , T72.last_name , T72.last_name from Student_Enrolment as T71 join Students as T72 on T71.student_id = T72.student_id where T71.student_id in ( select T73.student_id , T74.last_name , T74.last_name from Student_Enrolment as T73 join Students as T74 on T73.student_id = T74.student_id where T73.student_id in ( select T75.student_id , T76.last_name , T76.last_name from Student_Enrolment as T75 join Students as T76 on T75.student_id = T76.student_id where T75.student_id in ( select T77.student_id , T78.last_name , T78.last_name from Student_Enrolment as T77 join Students as T78 on T77.student_id = T78.student_id where T77.student_id in ( select T79.student_id , T80.last_name , T80.last_name from Student_Enrolment as T79 join Students as T80 on T79.student_id = T80.student_id where T79.student_id in ( select T81.student_id , T82.last_name , T82.last_name from Student_Enrolment as T81 join Students as T82 on T81.student_id = T82.student_id where T81.student_id in ( select T83.student_id , T84.last_name , T84.last_name from Student_Enrolment as T83 join Students as T84 on T83.student_id = T84.student_id where T83.student_id in ( select T85.student_id , T86.last_name , T86.last_name from Student_Enrolment as T85 join Students as T86 on T85.student_id = T86.student_id where T85.student_id in ( select T87.student_id , T88.last_name , T88.last_name from Student_Enrolment as T87 join Students as T88 on T87.student_id = T88.student_id where T87.student_id in ( select T89.student_id , T90.last_name , T90.last_name from Student_Enrolment as T89 join Students as T90 on T89.student_id = T90.student_id where T89.student_id in ( select T91.student_id , T92.last_name , T92.last_name from Student_Enrolment as T91 join Students as T92 on T91.student_id = T92.student_id where T91.student_id in ( select T93.student_id , T94.last_name , T94.last_name from Student_Enrolment as T93 join Students as T94 on T93.student_id = T94.student_id where T93.student_id in ( select T95.student_id , T96.last_name , T96.last_name from Student_Enrolment as T95 join Students as T96 on T95.student_id = T96.student_id where T95.student_id in ( select T97.student_id , T98.last_name , T98.last_name from Student_Enrolment as T97 join Students as T98 on T97.student_id = T98.student_id where T97.student_id in ( select T99.student_id , T100.last_name , T100.last_name from Student_Enrolment as T99 join Students as T100 on T99.student_id = T100.student_id where T99.student_id in ( select T101.student_id , T102.last_name , T102.last_name from Student_Enrolment as T101 join Students as T102 on T101.student_id = T102.student_id where T101.student_id in ( select T103.student_id , T104.last_name , T104.last_name from Student_Enrolment as T103 join Students as T104 on T103.student_id = T104.student_id where T103.student_id in ( select T105.student_id , T106.last_name , T106.last_name from Student_Enrolment as T105 join Students as T106 on T105.student_id = T106.student_id where T105.student_id in ( select T107.student_id , T108.last_name , T108.last_name from Student_Enrolment as T107 join Students as T108 on T107.student_id = T108.student_id where T107.student_id in ( select T109.student_id , T110.last_name , T110.last_name from Student_Enrolment as T109 join Students as T110 on T109.student_id = T110.student_id where T109.student_id in ( select T111.student_id , T112.last_name , T112.last_name from Student_Enrolment as T111 join Students as T112 on T111.student_id = T112.student_id where T111.student_id in ( select T113.student_id , T114.last_name , T114.last_name from Student_Enrolment as T113 join Students as T114 on T113.student_id = T114.student_id where T113.student_id in ( select T115.student_id , T116.last_name , T116.last_name from Student_Enrolment as T115 join Students as T116 on T115.student_id = T116.student_id where T115.student_id in ( select T117.student_id , T118.last_name , T118.last_name from Student_Enrolment as T117 join Students as T118 on T117.student_id = T118.student_id where T117.student_id in ( select T119.student_id , T120.last_name , T120.last_name from Student_Enrolment as T119 join Students as T120 on T119.student_id = T120.student_id where T119.student_id in ( select T121.student_id , T122.last_name , T122.last_name from Student_Enrolment as T121 join Students as T122 on T121.student_id = T122.student_id where T121.student_id in ( select T123.student_id , T124.last_name , T124.last_name from Student_Enrolment as T123 join Students as T124 on T123.student_id = T124.student_id where T123.student_id in ( select T125.student_id , T126.last_name , T126.last_name from Student_Enrolment as T125 join Students as T126 on T125.student_id = T126.student_id where T125.student_id in ( select T127.student_id , T128.last_name , T128.last_name from Student_Enrolment as T127 join Students as T128 on T127.student_id = T128.student_id where T127.student_id in ( select T129.student_id , T130.last_name , T130.last_name from Student_Enrolment as T129 join Students as T130 on T129.student_id = T130.student_id where T129.student_id in ( select T131.student_id , T132.last_name , T132.last_name from Student_Enrolment as T131 join Students as T132 on T131.student_id = T132.student_id where T131.student_id in ( select T133.student_id , T134.last_name , T134.last_name from Student_Enrolment as T133 join Students as T134 on T133.student_id = T134.student_id where T133.student_id in ( select T135.student_id , T136.last_name , T136.last_name from Student_Enrolment as T135 join Students as T136 on T135.student_id = T136.student_id where T135.student_id in ( select T137.student_id , T138.last_name , T138.last_name from Student_Enrolment as T137 join Students as T138 on T137.student_id = T138.student_id where T137.student_id in ( select T139.student_id , T140.last_name , T140.last_name from Student_Enrolment as T139 join Students as T140 on T139.student_id = T140.student_id where T139.student_id in ( select T141.student_id , T142.last_name , T142.last_name from Student_Enrolment as T141 join Students as T142 on T141.student_id = T142.student_id where T141.student_id in ( select T143.student_id , T144.last_name , T144.last_name from Student_Enrolment as T143 join Students as T144 on T143.student_id = T144.student_id where T143.student_id in ( select T145.student_id , T146.last_name , T146.last_name from Student_Enrolment as T145 join Students as T146 on T145.student_id = T146.student_id where T145.student_id in ( select T147.student_id , T148.last_name , T148.last_name from Student_Enrolment as T147 join Students as T148 on T147.student_id = T148.student_id where T147.student_id in ( select T149.student_id , T150.last_name , T150.last_name from Student_Enrolment as T149 join Students as T150 on T149.student_id = T150.student_id where T149.student_id in ( select T151.student_id , T152.last_name , T152.last_name from Student_Enrolment as T151 join Students as T152 on T151.student_id = T152.student_id where T151.student_id in ( select T153.student_id , T154.last_name , T154.last_name from Student_Enrolment as T153 join Students as T154 on T153.student_id = T154.student_id where T153.student_id in ( select T155.student_id , T156.last_name , T156.last_name from Student_Enrolment as T155 join Students as T156 on T155.student_id = T156.student_id where T155.student_id in ( select T157.student_id , T158.last_name , T158.last_name from Student_Enrolment as T157 join Students as T158 on T157.student_id = T158.student_id where T157.student_id in ( select T159.student_id , T160.last_name , T160.last_name from Student_Enrolment as T159 join Students as T160 on T159.student_id = T160.student_id where T159.student_id in ( select T161.student_id , T162.last_name , T162.last_name from Student_Enrolment as T161 join Students as T162 on T161.student_id = T162.student_id where T161.student_id in ( select T163.student_id , T164.last_name , T164.last_name from Student_Enrolment as T163 join Students as T164 on T163.student_id = T164.student_id where T163.student_id in ( select T165.student_id , T166.last_name , T166.last_name from Student_Enrolment as T165 join Students as T166 on T165.student_id = T166.student_id where T165.student_id in ( select T167.student_id , T168.last_name , T168.last_name from Student_Enrolment as T167 join Students as T168 on T167.student_id = T168.student_id where T167.student_id in ( select T169.student_id , T170.last_name , T170.last_name from Student_Enrolment as T169 join Students as T170 on T169.student_id = T170.student_id where T169.student_id in ( select T171.student_id , T172.last_name , T172.last_name from Student_Enrolment as T171 join Students as T172 on T171.student_id = T172.student_id where T171.student_id in ( select T173.student_id , T174.last_name , T174.last_name from Student_Enrolment as T173 join Students as T174 on T173.student_id = T174.student_id where T173.student_id in ( select T175.student_id , T176.last_name , T176.last_name from Student_Enrolment as T175 join Students as T176 on T175.student_id = T176.student_id where T175.student_id in ( select T177.student_id , T178.last_name , T178.last_name from Student_Enrolment as T177 join Students as T178 on T177.student_id = T178.student_id where T177.student_id in ( select T179.student_id , T180.last_name , T180.last_name from Student_Enrolment as T179 join Students as T180 on T179.student_id = T180.student_id where T179.student_id in ( select T181.student_id , T182.last_name , T182.last_name from Student_Enrolment as T181 join Students as T182 on T181.student_id = T182.student_id where T181.student_id in ( select T183.student_id , T184.last_name , T184.last_name from Student_Enrolment as T183 join Students as T184 on T183.student_id = T184.student_id where T183.student_id in ( select T185.student_id , T186.last_name , T186.last_name from Student_Enrolment as T185 join Students as T186 on T185.student_id = T186.student_id where T185.student_id in ( select T187.student_id , T188.last_name , T188.last_name from Student_Enrolment as T187 join Students as T188 on T187.student_id = T188.student_id where T187.student_id in ( select T189.student_id , T190.last_name , T190.last_name from Student_Enrolment as T189 join Students as T190 on T189.student_id = T190.student_id where T189.student_id in ( select T191.student_id , T192.last_name , T192.last_name from Student_Enrolment as T191 join Students as T192 on T191.student_id = T192.student_id where T191.student_id in ( select T193.student_id , T194.last_name , T194.last_name from Student_Enrolment as T193 join Students as T194 on T193.student_id = T194.student_id where T193.student_id in ( select T195.student_id , T196.last_name , T196.last_name from Student_Enrolment as T195 join Students as T196 on T195.student_id = T196.student_id where T195.student_id in ( select T197.student_id , T198.last_name , T198.last_name from Student_Enrolment as T197 join Students as T198 on T197.student_id = T198.student_id where T197.student_id in ( select T199.student_id , T200.last_name , T200.last_name from Student_Enrolment as T199 join Students as T200 on T199.student_id = T200.student_id where T199.student_id ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) in
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: select first_name , first_name , last_name from Students order by date_left desc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left DESC LIMIT 1

medium pred: select first_name , first_name , last_name from Students order by date_left limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

extra pred: select T1.address_id from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id order by T2.date_left desc limit 1
extra gold: SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select count ( * ) from Students where student_id in ( select T1.student_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by T1.student_id order by count ( * ) desc limit 1 )
extra gold: SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: select T1.line_1 , T3.student_id from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id group by T3.student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.other_details from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id where T5.first_name = 1
medium gold: SELECT other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select T5.first_name , T5.last_name , T1.section_description from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id where T5.first_name = 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select min ( date_left ) from Students
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

medium pred: select date_first_registered from Students order by date_first_registered desc limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

hard pred: select semester_id , student_id from Student_Enrolment
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1

hard pred: select count ( * ) from Student_Enrolment_Courses as T1 join Transcript_Contents as T2 on T1.student_course_id = T2.student_course_id join Transcripts as T3 on T2.transcript_id = T3.transcript_id where student_enrolment_Courses.course_id in ( select semester_id from Student_Enrolment )
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:77
extra pred: select T1.other_details from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Transcript_Contents as T4 on T3.student_course_id = T4.student_course_id join Transcripts as T5 on T4.transcript_id = T5.transcript_id group by T4.transcript_id order by count ( T5.* ) asc limit 1
extra gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

extra pred: select T4.date_first_registered , T1.transcript_id from Transcript_Contents as T1 join Student_Enrolment_Courses as T2 on T1.student_course_id = T2.student_course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id group by T1.transcript_id order by count ( * ) asc limit 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

medium pred: select T1.semester_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id where T3.first_name = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'

medium pred: select semester_name from Semesters where semester_name = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

extra pred: select cell_mobile_number from Students where first_name = 1 or last_name = 1
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

easy pred: select * from Owners
easy gold: SELECT * FROM Professionals

hard pred: select T1.state from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.professional_id in ( select T8.state from Owners as T5 join Dogs as T6 on T5.owner_id = T6.owner_id join Treatments as T7 on T6.dog_id = T7.dog_id join Professionals as T8 on T7.professional_id = T8.professional_id where T5.city in ( select state from Professionals ) )
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

hard pred: select weight from Dogs order by age desc limit 1
hard gold: SELECT * FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

hard pred: select avg ( age ) , min ( age ) from Dogs
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

easy pred: select * from Professionals
easy gold: SELECT * FROM Professionals WHERE role_code = 'Employee'

easy pred: select count ( * ) from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.state = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Connecticut'

easy pred: select count ( * ) from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.state = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Indiana'

eval_err_num:78
medium pred: select T4.* from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.state = 1 group by T4.professional_id having count ( * ) = 1
medium gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1

extra pred: select T1.owner_id , T1.last_name , T1.home_phone from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count ( * ) > 1 union select T7.professional_id , T5.last_name , T5.home_phone from Owners as T5 join Dogs as T6 on T5.owner_id = T6.owner_id join Treatments as T7 on T6.dog_id = T7.dog_id join Professionals as T8 on T7.professional_id = T8.professional_id group by T8.professional_id having count ( * ) > 1
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2 where T2.charge_amount > 1
medium gold: SELECT name FROM Treatments  AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 500

hard pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2 where T2.charge_amount > 1
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

hard pred: select T1.name , T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T1.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.first_name = 1
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

easy pred: select T1.name from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Professionals as T3 on T2.professional_id = T3.professional_id where T3.first_name = 1
easy gold: SELECT name FROM Dogs

hard pred: select name from Dogs except select name from Dogs where name = 1
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

medium pred: select T4.first_name , T1.treatment_type_code from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id
medium gold: SELECT T1.first_name, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select T4.owner_id , T5.email_address , T1.treatment_type_code from Treatment_Types as T1 join Treatments as T2 on T1.treatment_type_code = T2.treatment_type_code join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id join Professionals as T5 on T2.professional_id = T5.professional_id
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.email_address, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

extra pred: select T1.owner_id , T4.role_code , T4.email_address from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id except select T5.owner_id , T7.role_code , T7.email_address from Dogs as T5 join Treatments as T6 on T5.dog_id = T6.dog_id join Professionals as T7 on T6.professional_id = T7.professional_id
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select owner_id , count ( * ) from Dogs group by owner_id
medium gold: SELECT T1.owner_id ,count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id

medium pred: select T2.owner_id from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id group by T1.owner_id having count ( * ) = 1
medium gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name, count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id Having count(*) = 2

extra pred: select T2.owner_id from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id group by T1.owner_id order by count ( * ) desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

medium pred: select count ( * ) from Professionals group by professional_id
medium gold: SELECT T1.professional_id , count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count ( * ) = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) = 1

medium pred: select T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count ( * ) > = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) >= 2

medium pred: select T2.owner_id , T4.role_code , T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

medium pred: select breed_code from Dogs group by breed_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 2

medium pred: select breed_code from Dogs group by breed_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 1

extra pred: select name from Dogs group by breed_code order by count ( * ) desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

hard pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2
hard gold: SELECT T1.owner_id, T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id

extra pred: select T2.owner_id , T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id group by T1.owner_id order by count ( * ) desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

easy pred: select treatment_type_code , treatment_type_description from Treatment_Types
easy gold: SELECT * FROM Treatment_Types

extra pred: select T1.treatment_type_code , T2.charge_amount from Treatment_Types as T1 join Charges as T2 order by T2.charge_amount desc
extra gold: SELECT treatment_type_code, sum(cost_of_treatment) FROM Treatments group by treatment_type_code order by sum(cost_of_treatment) desc

extra pred: select T1.treatment_type_description , T2.charge_amount from Treatment_Types as T1 join Charges as T2 order by T2.charge_amount desc
extra gold: SELECT T2.treatment_type_code, T1.treatment_type_description,  sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

extra pred: select T1.treatment_type_description from Treatment_Types as T1 join Charges as T2 group by T1.treatment_type_code order by sum ( T2.charge_amount ) desc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

medium pred: select T1.name , T2.charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

medium pred: select count ( * ) from Charges where charge_amount > 1
medium gold: SELECT count(name) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 700

hard pred: select T1.owner_id , T5.zip_code from Owners as T1 join Charges as T2 join Dogs as T3 on T1.owner_id = T3.owner_id join Treatments as T4 on T3.dog_id = T4.dog_id join Professionals as T5 on T4.professional_id = T5.professional_id where T2.charge_amount > 1
hard gold: SELECT T1.owner_id ,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id Having sum(T3.cost_of_treatment) > 400

extra pred: select T1.owner_id from Owners as T1 join Charges as T2 where T2.charge_amount > 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

medium pred: select T2.first_name , T1.gender from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id
medium gold: SELECT T1.first_name, T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T3.role_code , count ( * ) from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Professionals as T3 on T2.professional_id = T3.professional_id group by T3.first_name
medium gold: SELECT T1.first_name, T2.treatment_type_code, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: select T3.professional_id , count ( T4.home_phone ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count ( * ) = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  = 1

medium pred: select T4.professional_id , count ( T4.home_phone ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by T4.professional_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

medium pred: select min ( charge_amount ) , max ( charge_amount ) , avg ( charge_amount ) from Charges
medium gold: SELECT min(cost_of_treatment), max(cost_of_treatment), avg(cost_of_treatment) FROM Treatments

extra pred: select T1.first_name , max ( T2.charge_amount ) , avg ( T2.charge_amount ) from Professionals as T1 join Charges as T2 group by T1.first_name
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT min(cost_of_treatment) FROM Treatments )

extra pred: select T1.first_name , max ( T2.charge_amount ) from Owners as T1 join Charges as T2 join Dogs as T3 on T1.owner_id = T3.owner_id join Treatments as T4 on T3.dog_id = T4.dog_id join Professionals as T5 on T4.professional_id = T5.professional_id group by T5.first_name
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT max(cost_of_treatment) FROM Treatments )

extra pred: select avg ( T2.charge_amount ) , T1.first_name from Professionals as T1 join Charges as T2 where T2.charge_amount < ( select min ( charge_amount ) from Charges )
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

hard pred: select breed_code from Dogs group by breed_code order by count ( * ) desc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) DESC LIMIT 1

hard pred: select breed_code from Dogs group by breed_code order by count ( * ) asc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) ASC LIMIT 1

extra pred: select age from Dogs group by breed_code order by count ( * ) asc limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

medium pred: select name from Dogs where name = 1
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

medium pred: select T1.name , T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id where T1.name = 1
medium gold: SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

medium pred: select T1.first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.city = 1
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

medium pred: select * from Dogs order by age desc limit 1
medium gold: SELECT * FROM Dogs order by age asc limit 1

extra pred: select T2.last_name from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id order by T1.age desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

extra pred: select T2.owner_id from Dogs as T1 join Owners as T2 on T1.owner_id = T2.owner_id order by T1.age asc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT min(age) FROM Dogs )

medium pred: select email_address , state from Professionals where state = 1 or state = 1
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

medium pred: select T4.zip_code , T1.street , T1.state from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.state = 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE state = 'Wisconsin'

medium pred: select T4.role_code , T1.street from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T1.city like 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

easy pred: select state from Professionals
easy gold: SELECT state FROM Owners

easy pred: select count ( * ) from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.state = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Vermont'

medium pred: select T1.first_name , T1.last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where T4.state like 1
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

easy pred: select age from Dogs order by age desc
easy gold: SELECT age FROM Dogs ORDER BY age

hard pred: select * from Dogs where age < ( select avg ( age ) from Dogs ) order by age desc limit 1
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

easy pred: select * from Breeds
easy gold: SELECT * FROM Treatments

eval_err_num:79
easy pred: select T1.* from Breeds as T1 join Charges as T2 order by T2.charge_amount asc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment ASC

eval_err_num:80
easy pred: select T1.* from Dogs as T1 join Charges as T2 order by T2.charge_amount desc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment DESC

eval_err_num:81
medium pred: select T1.* from Dogs as T1 join Charges as T2 order by T2.charge_amount desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

easy pred: select * from Dogs
easy gold: SELECT * FROM Owners

easy pred: select * from Dogs
easy gold: SELECT count(*) FROM Dogs

hard pred: select count ( * ) from Treatments where treatment_type_code = 1
hard gold: SELECT count(*) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

extra pred: select count ( * ) from Owners where owner_id not in ( select dog_id from Treatments )
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

easy pred: select * from Dogs
easy gold: SELECT * FROM Owners

easy pred: select count ( * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Treatment_Types as T4 on T3.treatment_type_code = T4.treatment_type_code where T4.treatment_type_description = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Arizona'

extra pred: select count ( * ) from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id where T2.treatment_id not in ( select T4.dog_id from Treatment_Types as T3 join Treatments as T4 on T3.treatment_type_code = T4.treatment_type_code where T3.treatment_type_description = 1 )
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

                     easy                 medium               hard                 extra                all                  joint_all           
count                481                  441                  145                  133                  1200                 421                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.399                0.177                0.103                0.045                0.242                0.069               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.664                0.424                0.508                0.383                0.528                0.000               
select(no AGG)       0.675                0.431                0.531                0.391                0.539                0.000               
where                0.571                0.399                0.221                0.111                0.399                0.000               
where(no OP)         0.602                0.417                0.397                0.167                0.450                0.000               
group(no Having)     0.519                0.543                0.625                0.522                0.548                0.000               
group                0.444                0.533                0.594                0.500                0.524                0.000               
order                0.467                0.441                0.643                0.545                0.526                0.000               
and/or               1.000                0.954                0.937                0.882                0.963                0.000               
IUEN                 0.000                0.000                0.182                0.375                0.238                0.000               
keywords             0.805                0.814                0.717                0.535                0.754                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.636                0.399                0.448                0.331                0.492                0.000               
select(no AGG)       0.647                0.406                0.469                0.338                0.502                0.000               
where                0.626                0.392                0.190                0.080                0.381                0.000               
where(no OP)         0.660                0.409                0.342                0.120                0.430                0.000               
group(no Having)     0.667                0.479                0.541                0.393                0.483                0.000               
group                0.571                0.471                0.514                0.377                0.462                0.000               
order                0.368                0.377                0.551                0.448                0.441                0.000               
and/or               0.994                0.988                0.978                0.933                0.984                0.000               
IUEN                 0.000                0.000                0.100                0.125                0.114                0.000               
keywords             0.861                0.740                0.593                0.459                0.696                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.650                0.411                0.476                0.355                0.510                1.000               
select(no AGG)       0.660                0.418                0.498                0.363                0.520                1.000               
where                0.597                0.395                0.204                0.093                0.390                1.000               
where(no OP)         0.630                0.413                0.367                0.140                0.440                1.000               
group(no Having)     0.583                0.509                0.580                0.449                0.513                1.000               
group                0.500                0.500                0.551                0.430                0.491                1.000               
order                0.412                0.406                0.593                0.492                0.480                1.000               
and/or               0.997                0.971                0.957                0.907                0.973                1.000               
IUEN                 1.000                1.000                0.129                0.188                0.154                1.000               
keywords             0.832                0.775                0.649                0.494                0.724                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                421                  421                  269                  88                   1                   

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.382                0.183                0.175                0.068                0.000               
