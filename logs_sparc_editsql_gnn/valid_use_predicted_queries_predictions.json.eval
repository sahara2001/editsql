eval_err_num:1
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT * FROM AIRLINES

eval_err_num:2
easy pred: select flights . * from airlines as T1 join flights as T2 where airlines . airline_name = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:3
easy pred: select airlines . country from airlines where airlines . airline_name = 1
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:4
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT Abbreviation FROM AIRLINES

eval_err_num:5
easy pred: select airlines . airline_name from airlines where airlines . airline_name = 1
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:6
medium pred: select airlines . airline_name , airlines . abbreviation from airlines
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES

eval_err_num:7
medium pred: select airlines . airline_name , airlines . abbreviation from airlines where airlines . country = 1
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

eval_err_num:8
easy pred: select airports . * from airports where airports . city = 1
easy gold: SELECT * FROM AIRPORTS WHERE city  =  "Anthony"

eval_err_num:9
medium pred: select airports . airport_code , airports . airport_name from airports where airports . city = 1
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

eval_err_num:10
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT * FROM AIRLINES

eval_err_num:11
easy pred: select count ( airlines . airline_name ) from airlines
easy gold: SELECT count(*) FROM AIRLINES

eval_err_num:12
easy pred: select flights . source_airport from flights
easy gold: SELECT * FROM AIRPORTS

eval_err_num:13
easy pred: select count ( airports . * ) from airports
easy gold: SELECT count(*) FROM AIRPORTS

eval_err_num:14
easy pred: select flights . * from flights
easy gold: SELECT * FROM FLIGHTS

eval_err_num:15
easy pred: select count ( flights . * ) from flights
easy gold: SELECT count(*) FROM FLIGHTS

eval_err_num:16
easy pred: select airlines . airline_name from airlines
easy gold: SELECT Airline FROM AIRLINES

eval_err_num:17
easy pred: select airlines . airline_name from airlines where airlines . airline_name like 1
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

eval_err_num:18
easy pred: select airlines . airline_name from airlines where airlines . country = 1
easy gold: SELECT airline FROM AIRLINES WHERE Country  =  "USA"

eval_err_num:19
easy pred: select count ( airlines . airline_name ) from airlines where airlines . country = 1
easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"

eval_err_num:20
medium pred: select airports . city , airlines . country from airports as T1 join airlines as T2
medium gold: SELECT City ,  Country FROM AIRPORTS

eval_err_num:21
medium pred: select airports . city , airlines . country from airports as T1 join airlines as T2 join flights as T3 on T1.AirportCode = T3.DestAirport where flights . destination_airport = 1
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

eval_err_num:22
easy pred: select airports . airport_name from airports
easy gold: SELECT AirportName FROM AIRPORTS

eval_err_num:23
easy pred: select airports . airport_name from airports where airports . airport_name like 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

eval_err_num:24
easy pred: select airports . airport_name from airports
easy gold: SELECT AirportName FROM AIRPORTS

eval_err_num:25
easy pred: select airports . airport_name from airports where airports . airport_name = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

eval_err_num:26
easy pred: select flights . * from flights where flights . airline = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:27
easy pred: select count ( flights . * ) from flights where flights . airline = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:28
easy pred: select min ( flights . airline ) from airlines as T1 join flights as T2 where airlines . abbreviation = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:29
easy pred: select count ( flights . * ) from airlines as T1 join flights as T2 where airlines . abbreviation = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:30
medium pred: select flights . * from flights where flights . destination_airport = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:31
medium pred: select count ( flights . * ) from flights where flights . source_airport = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:32
medium pred: select flights . * from flights where flights . destination_airport = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:33
medium pred: select count ( flights . * ) from flights where flights . destination_airport = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:34
medium pred: select flights . * from flights where flights . destination_airport = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:35
hard pred: select flights . * from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where airports . airport_name = 1 and flights . destination_airport = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:36
hard pred: select count ( flights . * ) from flights where flights . source_airport = 1 and flights . airline = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:37
medium pred: select flights . * from airlines as T1 join flights as T2 where airlines . airline_name = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:38
medium pred: select count ( flights . * ) from airlines as T1 join flights as T2 where airlines . airline_name = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:39
easy pred: select flights . airline from flights
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:40
easy pred: select count ( airlines . country ) from airlines
easy gold: SELECT count(*) FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:41
medium pred: select count ( airports . * ) from airports where airports . airport_name = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

eval_err_num:42
easy pred: select flights . airline from flights
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:43
medium pred: select airlines . abbreviation from airlines where airlines . abbreviation = 1
medium gold: SELECT * FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

eval_err_num:44
medium pred: select count ( flights . * ) from airlines as T1 join flights as T2 where airlines . country = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

eval_err_num:45
hard pred: select flights . airline from flights where flights . destination_airport = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

eval_err_num:46
hard pred: select count ( flights . * ) from flights where flights . source_airport = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

eval_err_num:47
easy pred: select airports . city from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:48
hard pred: select airports . city from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport order by flights . destination_airport
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC

eval_err_num:49
extra pred: select flights . destination_airport from flights group by flights . destination_airport order by count ( flights . * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

eval_err_num:50
easy pred: select airports . airport_name from airports group by airports . city having count ( airports . * ) = 1
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport

eval_err_num:51
hard pred: select airports . airport_name from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport group by flights . destination_airport order by count ( * )
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC

eval_err_num:52
extra pred: select airports . city from airports group by airports . city order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

eval_err_num:53
easy pred: select flights . destination_airport from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:54
easy pred: select flights . destination_airport , flights . destination_airport from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

eval_err_num:55
extra pred: select flights . destination_airport , flights . destination_airport from flights order by flights . destination_airport desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

eval_err_num:56
easy pred: select flights . destination_airport from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:57
easy pred: select flights . destination_airport , flights . destination_airport from flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

eval_err_num:58
extra pred: select flights . destination_airport , flights . destination_airport from flights group by flights . destination_airport order by count ( * ) asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

eval_err_num:59
medium pred: select count ( flights . * ) from flights
medium gold: SELECT count(*) ,  T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline

eval_err_num:60
extra pred: select airlines . airline_name from airlines as T1 join flights as T2 group by airlines . airline_id order by count ( flights . * ) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

eval_err_num:61
medium pred: select airlines . abbreviation from airlines
medium gold: SELECT Abbreviation ,  Country FROM AIRLINES

eval_err_num:62
hard pred: select airlines . airline_name , airlines . country from airlines as T1 join flights as T2 order by flights . airline
hard gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*)

eval_err_num:63
extra pred: select airlines . country from airlines as T1 join flights as T2 group by airlines . country order by count ( flights . * ) asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

eval_err_num:64
easy pred: select flights . * from airlines as T1 join flights as T2 where airlines . abbreviation = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "AHD"

eval_err_num:65
medium pred: select airlines . airline_name from airlines where airlines . abbreviation = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

eval_err_num:66
easy pred: select flights . airline from flights where flights . airline = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "AHD"

eval_err_num:67
medium pred: select airlines . airline_name from airlines where airlines . abbreviation = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

eval_err_num:68
medium pred: select airlines . airline_name from airlines where airlines . country = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

eval_err_num:69
extra pred: select airlines . abbreviation from airlines where airlines . abbreviation = 1 and airlines . country = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:70
medium pred: select airlines . country from airlines where airlines . abbreviation = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:71
extra pred: select flights . * from airlines as T1 join flights as T2 where airlines . country = 1 and airlines . country = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

eval_err_num:72
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

eval_err_num:73
medium pred: select airlines . airline_name from airlines as T1 join flights as T2 group by airlines . country having count ( flights . * ) > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

eval_err_num:74
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

eval_err_num:75
medium pred: select airlines . abbreviation from airlines as T1 join flights as T2 where flights . flight_number < 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

eval_err_num:76
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT FlightNo FROM FLIGHTS

eval_err_num:77
medium pred: select airlines . abbreviation from airlines where airlines . country = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

eval_err_num:78
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT FlightNo FROM FLIGHTS

eval_err_num:79
easy pred: select airlines . abbreviation from airlines where airlines . country = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:80
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT FlightNo FROM FLIGHTS

eval_err_num:81
easy pred: select airlines . airline_id , flights . flight_number from airlines as T1 join flights as T2 where airlines . abbreviation = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

eval_err_num:82
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT FlightNo FROM FLIGHTS

eval_err_num:83
easy pred: select airlines . airline_name from airlines as T1 join flights as T2 where flights . airline = 1
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode

eval_err_num:84
medium pred: select airlines . airline_name from airlines as T1 join flights as T2 where flights . destination_airport = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:85
easy pred: select airlines . abbreviation from airlines
easy gold: SELECT FlightNo FROM FLIGHTS

eval_err_num:86
easy pred: select airlines . airline_name from airlines as T1 join flights as T2 where flights . airline = 1
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode

eval_err_num:87
medium pred: select airlines . airline_name from airlines as T1 join flights as T2 where flights . destination_airport = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:88
medium pred: select flights . * from flights where flights . destination_airport = 1
medium gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen"

eval_err_num:89
hard pred: select flights . * from flights where flights . source_airport = 1 and flights . destination_airport = 1
hard gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

eval_err_num:90
hard pred: select count ( flights . * ) from flights where flights . source_airport = 1 and flights . destination_airport = 1
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

eval_err_num:91
easy pred: select flights . source_airport from flights
easy gold: SELECT SourceAirport FROM Flights

eval_err_num:92
hard pred: select airports . airport_name , flights . destination_airport from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport
hard gold: SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights

eval_err_num:93
hard pred: select airports . airport_name from airports as T1 join flights as T2 on T1.AirportCode = T2.DestAirport where flights . destination_airport not in ( select flights . destination_airport from flights )
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

eval_err_num:94
easy pred: select pets . * from Pets
easy gold: SELECT * FROM pets

eval_err_num:95
easy pred: select pets . * from Pets where pets . weight > 1
easy gold: SELECT * FROM pets WHERE weight  >  10

eval_err_num:96
easy pred: select count ( pets . * ) from Pets where pets . weight > 1
easy gold: SELECT count(*) FROM pets WHERE weight  >  10

eval_err_num:97
easy pred: select pets . * from Pets order by pets . pet_age
easy gold: SELECT * FROM pets ORDER BY pet_age

eval_err_num:98
easy pred: select pets . weight from Pets
easy gold: SELECT weight FROM pets ORDER BY pet_age

eval_err_num:99
medium pred: select pets . weight from Pets order by pets . pet_age asc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:100
easy pred: select pets . pet_type from Pets
easy gold: SELECT DISTINCT petType FROM pets

eval_err_num:101
medium pred: select pets . pet_type , pets . * from Pets order by pets . weight desc limit 1
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

eval_err_num:102
medium pred: select * from Student where student . age > 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:103
medium pred: select count ( * ) from Student where student . age > 1
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:104
easy pred: select student . * from Student where student . sex = 1
easy gold: SELECT * FROM student WHERE sex  =  'F'

eval_err_num:105
medium pred: select student . * from Student where student . sex = 1 and student . sex = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'

eval_err_num:106
hard pred: select count ( * ) from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where student . sex = 1 and pets . pet_age = 1
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

eval_err_num:107
easy pred: select pets . pet_type from Pets
easy gold: SELECT DISTINCT pettype FROM pets

eval_err_num:108
easy pred: select count ( pets . pet_type ) from Pets
easy gold: SELECT count(DISTINCT pettype) FROM pets

eval_err_num:109
easy pred: select pets . pet_type from Pets where pets . pet_age = 1
easy gold: SELECT DISTINCT T1.Fname FROM student AS T1

eval_err_num:110
hard pred: select pets . pet_type from Pets where pets . pet_age = 1
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:111
extra pred: select pets . pet_type , pets . pet_type from Pets where pets . pet_age = 1 or pets . pet_type = 1
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

eval_err_num:112
hard pred: select pets . pet_type from Pets
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:113
extra pred: select student . * from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where pets . pet_type = 1
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:114
extra pred: select pets . pet_type from Pets where pets . pet_type = 1
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:115
hard pred: select *
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:116
hard pred: select student . * from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where pets . pet_type = 1
hard gold: SELECT major FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:117
extra pred: select pets . pet_age from Pets where pets . weight = 1 or pets . pet_type = 1
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:118
easy pred: select has_pet . student_id from Has_Pet
easy gold: SELECT stuid FROM student

eval_err_num:119
hard pred: select pets . pet_age from Pets where pets . pet_age = 1
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:120
hard pred: select pets . pet_id from Pets where pets . pet_age = 1
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:121
hard pred: select *
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:122
extra pred: select pets . pet_age from Pets where pets . pet_type not in ( select pets . pet_type from Pets where pets . pet_type = 1 )
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:123
extra pred: select pets . pet_age , pets . pet_age from Pets where pets . pet_type = 1
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:124
medium pred: select pets . * from Pets order by pets . pet_age asc limit 1
medium gold: SELECT * FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:125
medium pred: select pets . pet_type from Pets where pets . weight = ( select min ( pets . pet_age ) from Pets )
medium gold: SELECT pettype FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:126
medium pred: select pets . weight , pets . * from Pets order by pets . weight limit 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:127
easy pred: select pets . pet_type from Pets
easy gold: SELECT petid FROM pets

eval_err_num:128
easy pred: select pets . pet_type from Pets where pets . pet_age > 1
easy gold: SELECT petid FROM pets WHERE pet_age  >  1

eval_err_num:129
medium pred: select pets . * from Pets where pets . weight > 1
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

eval_err_num:130
easy pred: select pets . pet_type from Pets
easy gold: SELECT DISTINCT pettype FROM pets

eval_err_num:131
medium pred: select pets . pet_type , max ( pets . pet_age ) from Pets group by pets . pet_type
medium gold: SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype

eval_err_num:132
medium pred: select avg ( student . age ) from Student
medium gold: SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype

eval_err_num:133
easy pred: select pets . * from Pets
easy gold: SELECT * FROM pets

eval_err_num:134
medium pred: select pets . pet_type , avg ( pets . weight ) from Pets group by pets . pet_type
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

eval_err_num:135
easy pred: select *
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:136
easy pred: select pets . pet_type from Pets
easy gold: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:137
medium pred: select pets . pet_type , pets . pet_age from Pets
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:138
easy pred: select *
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:139
medium pred: select pets . * from Pets where pets . pet_age = 1 and pets . pet_type = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:140
medium pred: select pets . pet_id from Pets where pets . pet_age = 1
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:141
easy pred: select student . * from Student
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:142
medium pred: select count ( * ) , pets . pet_type from Pets group by pets . pet_type
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

eval_err_num:143
medium pred: select pets . pet_type , student . sex from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1

eval_err_num:144
medium pred: select pets . pet_type from Pets where pets . pet_type = 1 group by pets . pet_type having count ( pets . * ) > 1
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

eval_err_num:145
medium pred: select student . age from Student where student . age = 1
medium gold: SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'

eval_err_num:146
hard pred: select has_pet . * from Student as T1 join Has_Pet as T2 on T1.StuID = T2.StuID where student . age = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:147
hard pred: select pets . pet_type from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where student . age = 1
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:148
hard pred: select student . * from Student where student . student_id not in ( select pets . pet_type from Pets )
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

eval_err_num:149
extra pred: select avg ( student . age ) from Pets as T1 join Has_Pet as T2 on T1.PetID = T2.PetID join Student as T3 on T2.StuID = T3.StuID where pets . weight = 1
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

eval_err_num:150
easy pred: select country . name from country
easy gold: SELECT Name FROM country

eval_err_num:151
easy pred: select country . name from country where country . continent = 1
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

eval_err_num:152
easy pred: select count ( country . * ) from country
easy gold: SELECT count(*) FROM country

eval_err_num:153
easy pred: select count ( * ) from country where country . region = 1
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:154
easy pred: select country . region from country where country . region = 1
easy gold: SELECT * FROM country WHERE Region  =  "Caribbean"

eval_err_num:155
easy pred: select country . surface_area from country where country . region = 1
easy gold: SELECT SurfaceArea FROM country WHERE Region  =  "Caribbean"

eval_err_num:156
easy pred: select sum ( country . surface_area ) from country where country . region = 1
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

eval_err_num:157
easy pred: select country . region from country
easy gold: SELECT Continent FROM country

eval_err_num:158
easy pred: select country . name from country where country . government_form = 1
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

eval_err_num:159
easy pred: select country . name from country
easy gold: SELECT Region FROM country

eval_err_num:160
medium pred: select city . name from city where city . district = 1
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

eval_err_num:161
easy pred: select countrylanguage . language from countrylanguage
easy gold: SELECT LANGUAGE FROM countrylanguage

eval_err_num:162
medium pred: select country . code from country where country . region = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:163
extra pred: select city . district from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1 group by country . code order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

eval_err_num:164
medium pred: select country . population , country . population from country
medium gold: SELECT Population ,  LifeExpectancy FROM country

eval_err_num:165
medium pred: select country . population from country where country . region = 1
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

eval_err_num:166
easy pred: select country . region from country where country . region = 1
easy gold: SELECT Region FROM country WHERE Name  =  "Angola"

eval_err_num:167
easy pred: select country . region from country where country . region = 1
easy gold: SELECT Population FROM country WHERE Name  =  "Angola"

eval_err_num:168
easy pred: select country . population from country
easy gold: SELECT LifeExpectancy FROM country

eval_err_num:169
easy pred: select country . population from country where country . region = 1
easy gold: SELECT LifeExpectancy FROM country WHERE Region  =  "Central Africa"

eval_err_num:170
easy pred: select avg ( country . population ) from country where country . region = 1
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

eval_err_num:171
easy pred: select country . name from country where country . region = 1
easy gold: SELECT Name FROM country WHERE Continent  =  "Asia"

eval_err_num:172
hard pred: select country . name from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1 order by city . population limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

eval_err_num:173
easy pred: select count ( city . * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1
easy gold: SELECT sum(Population) FROM country WHERE Continent  =  "Asia"

eval_err_num:174
easy pred: select * from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where country . region = 1 order by countrylanguage . percentage desc limit 1
easy gold: SELECT max(GNP) FROM country WHERE Continent  =  "Asia"

eval_err_num:175
easy pred: select country . region from country where country . region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Africa"

eval_err_num:176
medium pred: select country . region from country where country . region = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:177
medium pred: select avg ( countrylanguage . percentage ) , avg ( country . population ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where country . region = 1
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:178
medium pred: select country . region from country where country . region = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:179
medium pred: select country . region from country where country . region = 1
medium gold: SELECT SurfaceArea FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:180
medium pred: select sum ( country . surface_area ) from country where country . region = 1 or country . region = 1
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:181
easy pred: select city . population from city where city . district = 1
easy gold: SELECT Population FROM city WHERE District  =  "Gelderland"

eval_err_num:182
easy pred: select sum ( city . population ) from city where city . district = 1
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

eval_err_num:183
easy pred: select country . code from country
easy gold: SELECT * FROM country

eval_err_num:184
easy pred: select country . region from country where country . region = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:185
medium pred: select avg ( countrylanguage . percentage ) , avg ( country . population ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where country . region = 1
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:186
easy pred: select city . district from city
easy gold: SELECT DISTINCT LANGUAGE FROM countrylanguage

eval_err_num:187
easy pred: select count ( city . district ) from city
easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage

eval_err_num:188
easy pred: select country . region from country where country . region = 1
easy gold: SELECT DISTINCT GovernmentForm FROM country WHERE Continent  =  "Africa"

eval_err_num:189
easy pred: select count ( country . region ) from country where country . region = 1
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

eval_err_num:190
easy pred: select country . * from country where country . region = 1
easy gold: SELECT * FROM country WHERE Name  =  "Aruba"

eval_err_num:191
medium pred: select countrylanguage . language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where country . region = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:192
medium pred: select count ( * ) from country where country . region = 1
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:193
medium pred: select countrylanguage . language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where country . region = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan"

eval_err_num:194
medium pred: select count ( * ) from country where country . region = 1
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

eval_err_num:195
medium pred: select country . region , count ( city . * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by country . region
medium gold: SELECT count(*) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name

eval_err_num:196
extra pred: select country . region from country group by country . region order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:197
medium pred: select country . region , count ( city . * ) from city as T1 join country as T2 on T1.CountryCode = T2.Code group by country . region
medium gold: SELECT COUNT(*) ,  T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent

eval_err_num:198
extra pred: select country . region from city as T1 join country as T2 on T1.CountryCode = T2.Code group by country . region order by count ( city . * ) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:199
medium pred: select country . code from country where country . region = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:200
extra pred: select country . name from country where country . region = 1 or country . region = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch"

eval_err_num:201
easy pred: select count ( * ) from country where country . region = 1
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

eval_err_num:202
medium pred: select country . name from country where country . region = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:203
extra pred: select country . name from country where country . name = 1 or country . name = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

eval_err_num:204
medium pred: select country . code from country
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

eval_err_num:205
medium pred: select country . code from country where country . region = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T"

eval_err_num:206
extra pred: select country . region from country where country . code = 1 intersect select country . region from country where country . government_form = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

eval_err_num:207
medium pred: select country . region from country where country . region = 1
medium gold: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:208
medium pred: select country . region from country where country . region = 1
medium gold: SELECT DISTINCT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:209
medium pred: select count ( country . continent ) from country where country . region = 1
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:210
easy pred: select country . region from country
easy gold: SELECT DISTINCT Region FROM country

eval_err_num:211
hard pred: select country . name from country where country . region = 1 or country . region = 1
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

eval_err_num:212
medium pred: select country . region , count ( * ) from country group by country . region
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE IsOfficial  =  "T"

eval_err_num:213
extra pred: select country . code from country where country . region = 1 or country . region = 1
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

eval_err_num:214
medium pred: select country . region from country where country . region = 1
medium gold: SELECT DISTINCT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia"

eval_err_num:215
extra pred: select country . region from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where country . region = 1 group by country . region order by count ( countrylanguage . * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

eval_err_num:216
easy pred: select country . region from country except select country . region from country where country . government_form = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:217
hard pred: select country . region from country where country . region = 1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

eval_err_num:218
medium pred: select city . name from city where city . district = 1
medium gold: SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:219
extra pred: select city . name from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1 order by city . population desc limit 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

eval_err_num:220
medium pred: select city . name , city . population , country . population from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1
medium gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia"

eval_err_num:221
hard pred: select city . name , country . population from city as T1 join country as T2 on T1.CountryCode = T2.Code order by country . surface_area desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:222
medium pred: select country . code from country
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

eval_err_num:223
hard pred: select country . code from country where country . code != 1
hard gold: SELECT * FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:224
extra pred: select country . region from country where country . code = 1
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:225
hard pred: select country . name from country where country . government_form = 1
hard gold: SELECT Name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

eval_err_num:226
extra pred: select count ( * ) from country where country . region = 1
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

eval_err_num:227
medium pred: select country . region from country where country . name = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

eval_err_num:228
medium pred: select country . region from country where country . name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

eval_err_num:229
medium pred: select country . code from country where country . name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

eval_err_num:230
easy pred: select country . name from country
easy gold: SELECT T1.Name FROM country AS t1

eval_err_num:231
easy pred: select country . name from country where country . region > 1
easy gold: SELECT T1.Name FROM country AS t1 WHERE  IndepYear  <  1930

eval_err_num:232
medium pred: select country . region from country where country . region > 1
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

eval_err_num:233
easy pred: select country . * from country where country . region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Europe"

eval_err_num:234
easy pred: select country . surface_area from country where country . region = 1
easy gold: SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe"

eval_err_num:235
hard pred: select country . region from country where country . region = 1 group by country . region having count ( * ) > 1
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

eval_err_num:236
easy pred: select max ( country . population ) from country where country . region = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Asia"

eval_err_num:237
extra pred: select country . region from country where country . population < ( select max ( country . population ) from country where country . region = 1 )
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

eval_err_num:238
easy pred: select city . population from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Africa"

eval_err_num:239
extra pred: select country . region from country where country . region > 1
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

eval_err_num:240
easy pred: select country . code from country group by country . code
easy gold: SELECT CountryCode FROM countrylanguage

eval_err_num:241
hard pred: select country . code from country where country . code != 1
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:242
easy pred: select country . code from country group by country . code
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage

eval_err_num:243
easy pred: select country . code from country where country . code != 1
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE ! =  "English"

eval_err_num:244
easy pred: select country . code from country except select country . region from country
easy gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic"

eval_err_num:245
hard pred: select country . code from country where country . code != 1
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:246
medium pred: select country . name from country where country . code = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English'

eval_err_num:247
extra pred: select country . region from country where country . region = 1
extra gold: SELECT Name FROM country WHERE Continent  =  'Europe' AND Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English')

eval_err_num:248
extra pred: select city . name from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

eval_err_num:249
medium pred: select country . region from country where country . region = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:250
medium pred: select country . name from country where country . region = 1 and country . region = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:251
hard pred: select city . district from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1 intersect select city . district from city as T3 join country as T4 on T3.CountryCode = T4.Code where country . region = 1
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:252
medium pred: select country . region from country order by country . population asc limit 1
medium gold: SELECT * FROM country ORDER BY Population LIMIT 1

eval_err_num:253
medium pred: select country . name , country . region , country . surface_area from city as T1 join country as T2 on T1.CountryCode = T2.Code order by city . population asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

eval_err_num:254
medium pred: select country . region from country order by country . surface_area desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:255
medium pred: select country . region , country . continent from country order by country . surface_area desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:256
easy pred: select country . name from country
easy gold: SELECT Name FROM country

eval_err_num:257
medium pred: select country . name from country group by country . region having count ( * ) > = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:258
medium pred: select country . name , count ( * ) from country group by country . region having count ( * ) > = 1
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:259
easy pred: select city . district , avg ( city . population ) from city group by city . district
easy gold: SELECT avg(Population) FROM city

eval_err_num:260
extra pred: select city . district , count ( * ) from city group by city . district having avg ( city . population ) > 1
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

eval_err_num:261
easy pred: select country . region from country where country . population > 1
easy gold: SELECT * FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:262
medium pred: select country . population , country . region from country where country . population > 1 order by country . region
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:263
easy pred: select country . name from country where country . population < 1
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:264
medium pred: select avg ( city . population ) , min ( city . population ) from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . population < 1
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:265
medium pred: select country . region from city as T1 join country as T2 on T1.CountryCode = T2.Code order by city . district desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:266
medium pred: select country . name , country . name from city as T1 join country as T2 on T1.CountryCode = T2.Code order by city . district desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:267
easy pred: select country . region from country order by country . population desc
easy gold: SELECT * FROM country ORDER BY Population DESC

eval_err_num:268
medium pred: select country . name from city as T1 join country as T2 on T1.CountryCode = T2.Code order by city . population desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

eval_err_num:269
easy pred: select country . region from country order by country . population asc
easy gold: SELECT * FROM country ORDER BY Population

eval_err_num:270
medium pred: select country . name from country order by country . population asc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

eval_err_num:271
easy pred: select country . region from country where country . region = 1
easy gold: SELECT * FROM country WHERE continent  =  "Asia"

eval_err_num:272
easy pred: select count ( country . * ) from country where country . region = 1
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

eval_err_num:273
easy pred: select country . region from country where country . region = 1
easy gold: SELECT * FROM country WHERE continent  =  "Europe"

eval_err_num:274
medium pred: select city . name from city as T1 join country as T2 on T1.CountryCode = T2.Code where country . region = 1
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

eval_err_num:275
easy pred: select country . region from country where country . region = 1
easy gold: SELECT * FROM country WHERE Continent  =  "North America"

eval_err_num:276
medium pred: select country . region from country where country . surface_area > 1 and country . surface_area > 1
medium gold: SELECT * FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

eval_err_num:277
hard pred: select sum ( country . surface_area ) , avg ( country . surface_area ) from country where country . surface_area > 1
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

eval_err_num:278
easy pred: select city . name from city group by city . district
easy gold: SELECT name FROM city

eval_err_num:279
easy pred: select city . name from city where city . district between 1 and 1
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000

eval_err_num:280
easy pred: select country . code from country
easy gold: SELECT LANGUAGE FROM countrylanguage

eval_err_num:281
hard pred: select country . code from city as T1 join country as T2 on T1.CountryCode = T2.Code group by country . code order by count ( city . * ) desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

eval_err_num:282
easy pred: select cartoon . directed_by from Cartoon where cartoon . title = 1
easy gold: SELECT Directed_by FROM Cartoon WHERE Title = "Day of the Dark Knight!"

eval_err_num:283
easy pred: select tv_channel . content from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "Day of the Dark Knight!"

eval_err_num:284
medium pred: select cartoon . title from Cartoon where cartoon . directed_by = 1 or cartoon . directed_by = 1
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"

eval_err_num:285
easy pred: select tv_channel . * from TV_Channel where tv_channel . country = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Italy"

eval_err_num:286
easy pred: select tv_channel . * from TV_Channel where tv_channel . country = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Poland"

eval_err_num:287
hard pred: select tv_channel . country , count ( tv_channel . * ) from TV_Channel group by tv_channel . country order by count ( tv_channel . * ) desc limit 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1

eval_err_num:288
easy pred: select cartoon . directed_by from Cartoon where cartoon . title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!"

eval_err_num:289
hard pred: select tv_channel . series_name from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . title = 1
hard gold: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!")

eval_err_num:290
medium pred: select cartoon . title , count ( * ) from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id group by tv_channel . series_name
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel

eval_err_num:291
easy pred: select tv_series . episode from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id join TV_series as T3 on T2.id = T3.Channel where cartoon . title = 1
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Rock TV"

eval_err_num:292
easy pred: select cartoon . title from Cartoon where cartoon . title = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Rock TV"

eval_err_num:293
hard pred: select tv_channel . language , count ( * ) from TV_Channel group by tv_channel . language having count ( * ) = 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1

eval_err_num:294
easy pred: select cartoon . title from Cartoon where cartoon . title = 1
easy gold: SELECT Written_by FROM Cartoon WHERE Title = "The Rise of the Blue Beetle!"

eval_err_num:295
easy pred: select cartoon . directed_by from Cartoon where cartoon . title = 1
easy gold: SELECT Directed_by FROM Cartoon WHERE Title = "The Rise of the Blue Beetle!"

eval_err_num:296
medium pred: select tv_channel . country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"

eval_err_num:297
easy pred: select tv_channel . country from TV_Channel where tv_channel . series_name = 1
easy gold: SELECT Country FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:298
easy pred: select tv_channel . country from TV_Channel where tv_channel . series_name = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:299
medium pred: select cartoon . directed_by from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where tv_channel . series_name = 1
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

eval_err_num:300
easy pred: select tv_channel . pixel_aspect_ratio_par from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Double Down"

eval_err_num:301
easy pred: select tv_channel . pixel_aspect_ratio_par from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Keepers"

eval_err_num:302
medium pred: select tv_channel . content , tv_channel . content from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where cartoon . title = 1 order by tv_series . rating desc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3

eval_err_num:303
easy pred: select tv_series . weekly_rank from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id join TV_series as T3 on T2.id = T3.Channel where cartoon . directed_by = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "Emily"

eval_err_num:304
easy pred: select cartoon . directed_by from Cartoon where cartoon . directed_by = 1
easy gold: SELECT Share FROM TV_series WHERE Episode = "Emily"

eval_err_num:305
medium pred: select min ( cartoon . directed_by ) , max ( tv_series . share ) from TV_series as T1 join TV_Channel as T2 on T1.Channel = T2.id join Cartoon as T3 on T2.id = T3.Channel where cartoon . directed_by = 1
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series

eval_err_num:306
easy pred: select tv_channel . pixel_aspect_ratio_par from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "A Love of a Lifetime"

eval_err_num:307
easy pred: select cartoon . title from Cartoon where cartoon . title = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

eval_err_num:308
medium pred: select cartoon . directed_by from Cartoon where cartoon . title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"

eval_err_num:309
easy pred: select * from TV_Channel where tv_channel . series_name = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:310
easy pred: select tv_channel . language from TV_Channel where tv_channel . series_name = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:311
medium pred: select tv_channel . content from TV_Channel where tv_channel . series_name = 1
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

eval_err_num:312
easy pred: select cartoon . original_air_date from Cartoon where cartoon . title = 1
easy gold: SELECT Original_air_date FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

eval_err_num:313
easy pred: select cartoon . production_code from Cartoon where cartoon . title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

eval_err_num:314
medium pred: select tv_channel . package_option , count ( cartoon . title ) from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id group by tv_channel . package_option order by count ( * ) desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

eval_err_num:315
easy pred: select cartoon . directed_by from Cartoon where cartoon . directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"

eval_err_num:316
easy pred: select cartoon . title from Cartoon where cartoon . directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"

eval_err_num:317
medium pred: select tv_channel . country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . directed_by = 1 and cartoon . directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Todd Casey'

eval_err_num:318
medium pred: select tv_channel . country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Steven Melching'

eval_err_num:319
hard pred: select tv_channel . country from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . directed_by = 1 and cartoon . directed_by = 1
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

eval_err_num:320
easy pred: select cartoon . directed_by from Cartoon where cartoon . title = 1
easy gold: SELECT Directed_by FROM Cartoon WHERE Title = "Deep Cover for Batman!"

eval_err_num:321
easy pred: select tv_channel . language from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Deep Cover for Batman!"

eval_err_num:322
extra pred: select cartoon . title from Cartoon where cartoon . directed_by = 1 or cartoon . directed_by = 1
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

eval_err_num:323
easy pred: select tv_channel . country from TV_Channel where tv_channel . series_name = 1
easy gold: SELECT Country FROM TV_Channel WHERE series_name = "MTV Music"

eval_err_num:324
easy pred: select count ( * ) from TV_Channel where tv_channel . series_name = 1
easy gold: SELECT COUNT(*) FROM TV_Channel WHERE Country = "Italy"

eval_err_num:325
easy pred: select tv_channel . country from TV_Channel group by tv_channel . country having count ( tv_channel . * ) > 1
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

eval_err_num:326
easy pred: select cartoon . directed_by from Cartoon where cartoon . title = 1
easy gold: SELECT Directed_by FROM Cartoon WHERE Title = "Return of the Fearsome Fangs!"

eval_err_num:327
easy pred: select cartoon . title from Cartoon where cartoon . directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"

eval_err_num:328
hard pred: select tv_channel . id from Cartoon as T1 join TV_Channel as T2 on T1.Channel = T2.id where cartoon . directed_by = 1 intersect select tv_channel . id from Cartoon as T3 join TV_Channel as T4 on T3.Channel = T4.id where cartoon . directed_by = 1
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:329
easy pred: select poker_player . earnings from poker_player
easy gold: SELECT * FROM poker_player

eval_err_num:330
easy pred: select count ( poker_player . * ) from poker_player
easy gold: SELECT count(*) FROM poker_player

eval_err_num:331
easy pred: select poker_player . earnings from poker_player
easy gold: SELECT Earnings FROM poker_player

eval_err_num:332
easy pred: select poker_player . * from poker_player order by poker_player . earnings desc
easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC

eval_err_num:333
easy pred: select poker_player . * from poker_player
easy gold: SELECT * FROM poker_player

eval_err_num:334
easy pred: select poker_player . final_table_made from poker_player
easy gold: SELECT Final_Table_Made FROM poker_player

eval_err_num:335
medium pred: select poker_player . final_table_made , poker_player . final_table_made , poker_player . final_table_made from poker_player where poker_player . final_table_made = 1
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

eval_err_num:336
easy pred: select poker_player . earnings from poker_player
easy gold: SELECT Earnings FROM poker_player

eval_err_num:337
easy pred: select avg ( poker_player . earnings ) from poker_player
easy gold: SELECT avg(Earnings) FROM poker_player

eval_err_num:338
easy pred: select poker_player . money_rank from poker_player
easy gold: SELECT Money_Rank FROM poker_player

eval_err_num:339
easy pred: select poker_player . * from poker_player order by poker_player . money_rank desc
easy gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC

eval_err_num:340
medium pred: select poker_player . * from poker_player order by poker_player . money_rank desc limit 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

eval_err_num:341
easy pred: select poker_player . * from poker_player where poker_player . money_rank < 1
easy gold: SELECT * FROM poker_player WHERE Earnings  <  200000

eval_err_num:342
easy pred: select poker_player . final_table_made from poker_player where poker_player . earnings < 1 intersect select poker_player . final_table_made from poker_player where poker_player . money_rank < 1
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

eval_err_num:343
easy pred: select poker_player . earnings from poker_player
easy gold: SELECT * FROM poker_player

eval_err_num:344
easy pred: select people . name from people
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:345
easy pred: select poker_player . * from poker_player where poker_player . money_rank > 1
easy gold: SELECT * FROM poker_player WHERE Earnings  >  300000

eval_err_num:346
medium pred: select people . name from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID where poker_player . earnings > 1
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:347
easy pred: select people . name from people
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:348
medium pred: select people . name from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID order by poker_player . final_table_made
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

eval_err_num:349
easy pred: select poker_player . * from poker_player
easy gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:350
medium pred: select poker_player . * from poker_player order by poker_player . earnings
medium gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings

eval_err_num:351
hard pred: select poker_player . * from poker_player order by poker_player . earnings limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:352
easy pred: select max ( people . height ) , min ( poker_player . earnings ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:353
hard pred: select poker_player . final_table_made from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID order by people . height desc limit 1
hard gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:354
hard pred: select poker_player . * from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID order by people . height desc limit 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:355
easy pred: select max ( people . height ) , min ( poker_player . earnings ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:356
medium pred: select poker_player . * from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID where people . height > 1
medium gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:357
medium pred: select avg ( poker_player . earnings ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID where people . height > 1
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:358
easy pred: select poker_player . * from poker_player order by poker_player . earnings desc
easy gold: SELECT * FROM poker_player ORDER BY Earnings DESC

eval_err_num:359
medium pred: select people . name from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID order by poker_player . money_rank desc limit 1
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

eval_err_num:360
easy pred: select people . nationality from people
easy gold: SELECT Nationality FROM people

eval_err_num:361
easy pred: select poker_player . * from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by people . nationality
easy gold: SELECT * FROM people GROUP BY Nationality

eval_err_num:362
medium pred: select people . nationality , count ( poker_player . * ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by people . nationality
medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality

eval_err_num:363
easy pred: select people . nationality from people
easy gold: SELECT Nationality FROM people

eval_err_num:364
easy pred: select count ( poker_player . * ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by people . nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

eval_err_num:365
hard pred: select people . nationality from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by people . nationality order by count ( poker_player . * ) desc limit 1
hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:366
easy pred: select count ( poker_player . * ) from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by people . nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

eval_err_num:367
easy pred: select people . nationality from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID group by people . nationality having count ( poker_player . * ) > = 1
easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2

eval_err_num:368
medium pred: select people . name , people . birth_date from people
medium gold: SELECT Name ,  Birth_Date FROM people

eval_err_num:369
medium pred: select people . name , people . birth_date from people order by people . name asc
medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC

eval_err_num:370
easy pred: select people . name from people
easy gold: SELECT Name FROM people

eval_err_num:371
easy pred: select people . name from people where people . nationality != 1
easy gold: SELECT Name FROM people WHERE Nationality != "Russia"

eval_err_num:372
easy pred: select poker_player . earnings from poker_player
easy gold: SELECT * FROM poker_player

eval_err_num:373
hard pred: select poker_player . * from poker_player where poker_player . money_rank != 1
hard gold: SELECT * FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:374
hard pred: select people . name from people as T1 join poker_player as T2 on T1.People_ID = T2.People_ID where poker_player . people_id not in ( select poker_player . people_id from poker_player )
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:375
easy pred: select death_
easy gold: SELECT killed FROM death

eval_err_num:376
easy pred: select max ( death . injured ) from death
easy gold: SELECT max(killed) FROM death

eval_err_num:377
easy pred: select min ( death . injured ) from death
easy gold: SELECT min(killed) FROM death

eval_err_num:378
medium pred: select max ( death . injured ) , min ( death . injured ) from death
medium gold: SELECT max(killed) ,  min(killed) FROM death

eval_err_num:379
easy pred: select ship . * from ship
easy gold: SELECT * FROM death as T1 JOIN ship as T2 ON T1.caused_by_ship_id  =  T2.id

eval_err_num:380
medium pred: select ship . * from ship where ship . disposition_of_ship = 1
medium gold: SELECT * FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:381
medium pred: select death . injured , death . injured from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id where ship . ship_type = 1
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:382
medium pred: select battle . id , ship . name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle
medium gold: SELECT id, name FROM battle

eval_err_num:383
easy pred: select battle . id , ship . name , ship . disposition_of_ship from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle
easy gold: SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle

eval_err_num:384
medium pred: select ship . location , ship . name from ship where ship . ship_type = 1
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

eval_err_num:385
hard pred: select death . injured , death . injured from death
hard gold: SELECT T1.id ,  T1.name, sum(T3.killed), sum(T3.injured) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id

eval_err_num:386
hard pred: select death . killed from death where death . injured > 1
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

eval_err_num:387
medium pred: select ship . id , ship . name , count ( * ) from ship group by ship . id
medium gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id

eval_err_num:388
hard pred: select death . caused_by_ship_id , ship . name from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id group by ship . id order by count ( * ) desc
hard gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured)

eval_err_num:389
extra pred: select ship . id , ship . name from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id group by ship . id order by sum ( death . injured ) desc limit 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured) DESC LIMIT 1

eval_err_num:390
easy pred: select battle . name from battle where battle . latin_commander = 1
easy gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan'

eval_err_num:391
easy pred: select battle . name from battle where battle . latin_commander = 1
easy gold: SELECT name FROM battle WHERE latin_commander  =  'Baldwin I'

eval_err_num:392
medium pred: select ship . name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where battle . latin_commander = 1 or battle . latin_commander = 1
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

eval_err_num:393
easy pred: select battle . id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . disposition_of_ship = 1
easy gold: SELECT lost_in_battle FROM ship WHERE tonnage  =  '225'

eval_err_num:394
medium pred: select battle . name , ship . id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . disposition_of_ship = 1
medium gold: SELECT T2.id, T2.name from ship AS T1 join battle AS T2 ON T1.lost_in_battle = T2.id WHERE tonnage  =  '225'

eval_err_num:395
extra pred: select battle . id , ship . name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . disposition_of_ship = 1 intersect select battle . id , ship . name from battle as T3 join ship as T4 on T3.id = T4.lost_in_battle where ship . disposition_of_ship = 1
extra gold: SELECT id, name FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

eval_err_num:396
extra pred: select count ( * ) from ship where ship . id not in ( select battle . id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . disposition_of_ship = 1 )
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

eval_err_num:397
medium pred: select ship . name , battle . date from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice'

eval_err_num:398
medium pred: select battle . name , battle . date from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atlanta'

eval_err_num:399
extra pred: select battle . name , battle . date from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . name = 1
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

eval_err_num:400
medium pred: select battle . id , ship . name from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . location = 1
medium gold: SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:401
extra pred: select battle . id from battle as T1 join ship as T2 on T1.id = T2.lost_in_battle where ship . id not in ( select battle . id from battle )
extra gold: SELECT T1.id, T1.name FROM battle EXCEPT SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:402
extra pred: select battle . name , death . killed , battle . latin_commander , battle . bulgarian_commander from death as T1 join ship as T2 on T1.caused_by_ship_id = T2.id join battle as T3 on T2.lost_in_battle = T3.id where ship . location = 1
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:403
easy pred: select count ( countries . * ) from countries
easy gold: SELECT count(*) FROM CONTINENTS;

eval_err_num:404
medium pred: select countries . country_id , countries . country_name from countries
medium gold: SELECT ContId ,  Continent FROM CONTINENTS;

eval_err_num:405
medium pred: select countries . country_name , countries . country_name from countries
medium gold: SELECT T1.ContId ,  T1.Continent , * FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent;

eval_err_num:406
medium pred: select countries . country_name , count ( * ) from countries group by countries . country_name
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

eval_err_num:407
medium pred: select countries . country_name , car_makers . id from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country
medium gold: Select FullName, ID From CAR_MAKERS;

eval_err_num:408
medium pred: select countries . country_name , countries . country_id from countries
medium gold: Select Country, FullName, ID From CAR_MAKERS;

eval_err_num:409
medium pred: select countries . country_name , count ( * ) from countries group by countries . country_name
medium gold: SELECT count(*), T1.Country, T1.FullName, T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:410
medium pred: select countries . country_name , countries . country_id , count ( * ) from countries group by countries . country_id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:411
easy pred: select avg ( cars_data . horsepower ) from cars_data
easy gold: Select avg(horsepower) FROM CARS_DATA;

eval_err_num:412
hard pred: select max ( cars_data . horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:413
hard pred: select min ( cars_data . horsepower ) from cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:414
hard pred: select cars_data . accelerate from cars_data order by cars_data . horsepower desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:415
easy pred: select avg ( cars_data . weight ) from cars_data
easy gold: SELECT avg(Weight) FROM CARS_DATA

eval_err_num:416
extra pred: select car_makers . * from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where cars_data . weight > ( select avg ( cars_data . weight ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  >  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:417
extra pred: select car_makers . * from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where cars_data . weight > ( select avg ( cars_data . weight ) from cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:418
extra pred: select countries . country_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where cars_data . weight > ( select avg ( cars_data . weight ) from cars_data )
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:419
medium pred: select cars_data . id , cars_data . weight from cars_data where cars_data . year = 1
medium gold: Select T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

eval_err_num:420
medium pred: select car_names . make_id , cars_data . horsepower , cars_data . horsepower from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where cars_data . year = 1
medium gold: Select T1.horsepower, T1.mpg, T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

eval_err_num:421
extra pred: select countries . country_name , cars_data . horsepower , cars_data . horsepower from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where cars_data . year = 1
extra gold: SELECT T1.Maker, T4.horsepower, T4.mpg, T4.id, T2.model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:422
extra pred: select countries . country_name , car_makers . full_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where cars_data . year = 1
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:423
medium pred: select car_names . make , cars_data . horsepower from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId
medium gold: SELECT Make , Model from Car_Names;

eval_err_num:424
medium pred: select cars_data . horsepower , cars_data . horsepower , cars_data . horsepower from cars_data
medium gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId;

eval_err_num:425
extra pred: select car_names . make , cars_data . horsepower from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where cars_data . year = ( select max ( cars_data . year ) from cars_data )
extra gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:426
extra pred: select car_names . make , cars_data . year from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where cars_data . year = ( select max ( cars_data . year ) from cars_data )
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:427
easy pred: select cars_data . horsepower from cars_data
easy gold: SELECT DISTINCT model FROM MODEL_LIST;

eval_err_num:428
medium pred: select cars_data . horsepower , cars_data . year from cars_data
medium gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id;

eval_err_num:429
hard pred: select * , cars_data . horsepower from cars_data where cars_data . year > 1
hard gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:430
hard pred: select car_makers . country from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where cars_data . year > 1
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:431
medium pred: select countries . country_name , countries . country_name from countries
medium gold: Select T1.Maker, T2.CountryName from Car_Makers as T1 JOIN Countries as T2 on T1.Country = T2.CountryId;

eval_err_num:432
medium pred: select countries . country_name , countries . country_name , countries . country_name from countries
medium gold: SELECT T1.Continent,  T3.Maker, T2.CountryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country;

eval_err_num:433
hard pred: select countries . country_name , count ( * ) from countries group by countries . country_name
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

eval_err_num:434
easy pred: select count ( countries . * ) from countries
easy gold: SELECT count(*) from Countries;

eval_err_num:435
medium pred: select count ( * ) from countries group by countries . country_name
medium gold: SELECT *, count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country;

eval_err_num:436
extra pred: select countries . country_name from countries group by countries . country_name order by count ( * ) asc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) ASC LIMIT 1;

eval_err_num:437
extra pred: select countries . country_name from countries group by countries . country_name order by count ( * ) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

eval_err_num:438
easy pred: select count ( countries . * ) from countries
easy gold: Select Count(*) FROM CAR_MAKERS;

eval_err_num:439
medium pred: select countries . country_name , continents . cont_id from continents as T1 join countries as T2 on T1.ContId = T2.Continent
medium gold: SELECT FullName, id FROM CAR_MAKERS;

eval_err_num:440
medium pred: select countries . country_name , continents . cont_id , cars_data . horsepower from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country join model_list as T4 on T3.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model join cars_data as T6 on T5.MakeId = T6.Id
medium gold: SELECT T1.Model ,  T2.FullName, T2.id  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id;

eval_err_num:441
medium pred: select countries . country_name , count ( * ) from countries group by countries . country_id
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

eval_err_num:442
medium pred: select cars_data . id from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where car_names . model = 1
medium gold: SELECT T1.ID FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:443
medium pred: select car_makers . maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model where car_names . make = 1
medium gold: SELECT T1.Horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:444
medium pred: select car_names . make from car_names where car_names . make = 1
medium gold: SELECT T1.MPG FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:445
medium pred: select cars_data . accelerate from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id where car_names . make = 1
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:446
easy pred: select car_makers . country from car_makers
easy gold: SELECT distinct Maker FROM CAR_MAKERS;

eval_err_num:447
medium pred: select countries . country_name from countries
medium gold: SELECT T1.Maker, T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId;

eval_err_num:448
medium pred: select car_makers . full_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where countries . country_name = 1
medium gold: SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:449
medium pred: select count ( countries . country_name ) from countries where countries . country_name = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:450
easy pred: select count ( car_makers . * ) from car_makers
easy gold: SELECT count(*) FROM MODEL_LIST;

eval_err_num:451
hard pred: select count ( * ) from countries where countries . country_name = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Germany';

eval_err_num:452
hard pred: select count ( * ) from countries where countries . country_name = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'japan';

eval_err_num:453
hard pred: select count ( * ) from countries where countries . country_name = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:454
easy pred: select car_makers . * from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where cars_data . year = 1
easy gold: SELECT * FROM CARS_DATA WHERE YEAR  =  1974;

eval_err_num:455
medium pred: select cars_data . weight , cars_data . horsepower from cars_data where cars_data . year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE YEAR  =  1974;

eval_err_num:456
medium pred: select cars_data . horsepower from cars_data where cars_data . year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974;

eval_err_num:457
hard pred: select min ( cars_data . weight ) from cars_data where cars_data . year = 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

eval_err_num:458
easy pred: select countries . country_name from countries
easy gold: Select CountryName FROM COUNTRIES;

eval_err_num:459
hard pred: select countries . country_name from countries where countries . country_id not in ( select countries . continent from countries )
hard gold: Select CountryName FROM COUNTRIES where CountryID not in (Select Country from CAR_MAKERS);

eval_err_num:460
medium pred: select countries . country_name from countries group by countries . country_name having count ( * ) > = 1
medium gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:461
medium pred: select countries . country_name , countries . country_id from countries group by countries . country_id having count ( * ) > = 1
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:462
medium pred: select car_makers . country , countries . country_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country
medium gold: SELECT T3.Maker, T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country;

eval_err_num:463
hard pred: select countries . country_name , count ( * ) from countries group by countries . country_name
hard gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country GROUP BY T1.CountryName;

eval_err_num:464
extra pred: select countries . country_name , countries . country_name from countries where countries . country_name = 1
extra gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName;

eval_err_num:465
extra pred: select countries . country_name from countries group by countries . country_name having count ( * ) > = 1
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

eval_err_num:466
medium pred: select car_names . make , cars_data . horsepower from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:467
medium pred: select * , cars_data . horsepower from cars_data where cars_data . horsepower = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  8;

eval_err_num:468
medium pred: select cars_data . horsepower from cars_data where cars_data . horsepower = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3;

eval_err_num:469
extra pred: select max ( cars_data . cylinders ) from cars_data where cars_data . horsepower = 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:470
medium pred: select model_list . model_id from model_list as T1 join car_names as T2 on T1.Model = T2.Model join cars_data as T3 on T2.MakeId = T3.Id order by cars_data . horsepower desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY horsepower DESC LIMIT 1;

eval_err_num:471
medium pred: select * from cars_data order by cars_data . horsepower desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1;

eval_err_num:472
hard pred: select car_names . make from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId order by cars_data . horsepower desc limit 1
hard gold: SELECT T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:473
hard pred: select countries . country_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id order by cars_data . horsepower desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:474
easy pred: select avg ( cars_data . horsepower ) from cars_data
easy gold: SELECT avg(edispl) FROM CARS_DATA;

eval_err_num:475
medium pred: select car_names . make_id , avg ( cars_data . cylinders ) from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId group by car_names . make_id
medium gold: SELECT T1.Make, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Make;

eval_err_num:476
medium pred: select cars_data . horsepower , avg ( cars_data . horsepower ) from cars_data group by cars_data . horsepower
medium gold: SELECT T1.Model, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Model;

eval_err_num:477
medium pred: select avg ( cars_data . horsepower ) from cars_data
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

eval_err_num:478
easy pred: select cars_data . horsepower from cars_data
easy gold: SELECT distinct Model from CAR_NAMES;

eval_err_num:479
medium pred: select car_names . make from car_names
medium gold: SELECT Model, Make FROM CAR_NAMES;

eval_err_num:480
medium pred: select count ( * ) , car_names . make_id from car_names group by car_names . make_id
medium gold: SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model;

eval_err_num:481
hard pred: select countries . country_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model group by car_names . make_id order by count ( * ) desc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

eval_err_num:482
easy pred: select countries . country_name from countries
easy gold: SELECT FullName FROM CAR_MAKERS;

eval_err_num:483
medium pred: select car_makers . full_name , car_makers . full_name from car_makers
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:484
medium pred: select car_makers . full_name , car_makers . full_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where countries . country_name = 1
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:485
medium pred: select count ( * ) from countries where countries . country_name = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:486
easy pred: select * from countries group by countries . continent having count ( * ) > = 1
easy gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:487
medium pred: select * from car_makers group by car_makers . id having count ( * ) > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  1;

eval_err_num:488
medium pred: select countries . continent from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by car_makers . full_name having count ( * ) > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:489
medium pred: select car_names . make , car_makers . id from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model join car_makers as T4 on T3.Maker = T4.Id where cars_data . horsepower > 1 group by car_makers . id having count ( * ) > 1
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:490
hard pred: select count ( model_list . model_id ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where car_makers . full_name = 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id WHERE T3.FullName  =  'General Motors';

eval_err_num:491
hard pred: select count ( model_list . model_id ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id where car_makers . full_name = 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T1.MakeId  =  T3.Id WHERE T3.weight > 3500;

eval_err_num:492
extra pred: select count ( * ) from ( select countries . continent from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country where car_makers . full_name = 1 union select countries . continent from countries as T3 join car_makers as T4 on T3.CountryId = T4.Country where car_makers . full_name = 1 )
extra gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:493
extra pred: select countries . country_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model where car_makers . full_name = 1 or car_names . make = 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:494
medium pred: select continents . continent , cars_data . weight from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country join model_list as T4 on T3.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model join cars_data as T6 on T5.MakeId = T6.Id
medium gold: SELECT Year, weight FROM CARS_DATA;

eval_err_num:495
easy pred: select continents . continent from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country join model_list as T4 on T3.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model join cars_data as T6 on T5.MakeId = T6.Id where cars_data . weight > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  >  3000;

eval_err_num:496
easy pred: select continents . continent from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country join model_list as T4 on T3.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model join cars_data as T6 on T5.MakeId = T6.Id where cars_data . weight > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  <  4000;

eval_err_num:497
medium pred: select continents . continent from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country join model_list as T4 on T3.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model join cars_data as T6 on T5.MakeId = T6.Id where cars_data . weight > 1
medium gold: SELECT DISTINCT Year FROM CARS_DATA WHERE Weight  >  3000 AND Weight  <  4000;

eval_err_num:498
medium pred: select min ( cars_data . accelerate ) from cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate ASC LIMIT 1;

eval_err_num:499
medium pred: select min ( cars_data . accelerate ) from cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

eval_err_num:500
hard pred: select model_list . model_id , car_makers . country , car_makers . country from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join car_names as T3 on T1.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id order by cars_data . horsepower desc limit 1
hard gold: SELECT T1.ID, T2.Make, T2.Model FROM CARS_DATA as T1 JOIN CAR_NAMES as T2 ON T1.ID = T2.MakeID ORDER BY T1.accelerate DESC LIMIT 1;

eval_err_num:501
medium pred: select cars_data . horsepower , countries . country_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id order by cars_data . horsepower desc limit 1
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

eval_err_num:502
medium pred: select * from cars_data where cars_data . horsepower = 1
medium gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo';

eval_err_num:503
extra pred: select car_makers . * from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where cars_data . horsepower = 1 order by cars_data . horsepower limit 1
extra gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:504
extra pred: select car_makers . maker from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where cars_data . horsepower = 1
extra gold: SELECT T1.horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:505
extra pred: select cars_data . cylinders from cars_data where cars_data . horsepower = 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:506
medium pred: select max ( cars_data . horsepower ) from cars_data
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:507
medium pred: select cars_data . accelerate from cars_data order by cars_data . horsepower desc limit 1
medium gold: SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:508
hard pred: select car_names . make_id from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where cars_data . cylinders > ( select max ( cars_data . accelerate ) from cars_data )
hard gold: SELECT id FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:509
hard pred: select count ( * ) from cars_data where cars_data . horsepower > ( select max ( cars_data . horsepower ) from cars_data )
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:510
hard pred: select countries . country_name from countries where countries . country_id not in ( select countries . continent from countries )
hard gold: SELECT CountryName FROM COUNTRIES where CountryId not in (SELECT T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country);

eval_err_num:511
easy pred: select countries . country_name from countries except select countries . country_name from countries
easy gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country;

eval_err_num:512
easy pred: select count ( countries . country_name ) from countries group by countries . country_name having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  1 );

eval_err_num:513
easy pred: select countries . country_name from countries group by countries . country_name having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

eval_err_num:514
medium pred: select cars_data . horsepower , cars_data . weight from cars_data
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:515
medium pred: select * , cars_data . weight from cars_data where cars_data . horsepower = 1
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4;

eval_err_num:516
extra pred: select countries . continent from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id order by cars_data . horsepower limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:517
extra pred: select countries . continent from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id order by cars_data . horsepower desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:518
easy pred: select min ( cars_data . horsepower ) from cars_data
easy gold: SELECT min(Horsepower) FROM CARS_DATA;

eval_err_num:519
extra pred: select cars_data . id from cars_data where cars_data . horsepower > ( select min ( cars_data . horsepower ) from cars_data )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA);

eval_err_num:520
extra pred: select car_names . make_id , cars_data . horsepower from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId where cars_data . horsepower > 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 5;

eval_err_num:521
extra pred: select cars_data . id , cars_data . horsepower from car_names as T1 join cars_data as T2 on T1.MakeId = T2.Id group by car_names . make_id having count ( * ) > 1
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 3;

eval_err_num:522
medium pred: select car_makers . * from car_makers as T1 join model_list as T2 on T1.Id = T2.Maker join car_names as T3 on T2.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id where cars_data . year < 1 and cars_data . horsepower < 1
medium gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE YEAR  <  1980;

eval_err_num:523
extra pred: select cars_data . horsepower , cars_data . horsepower from cars_data where cars_data . year < 1 or cars_data . year < 1
extra gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980;

eval_err_num:524
extra pred: select max ( cars_data . cylinders ) from cars_data where cars_data . year < 1
extra gold: SELECT accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY accelerate DESC LIMIT 1;

eval_err_num:525
extra pred: select max ( cars_data . cylinders ) , max ( cars_data . cylinders ) from cars_data where cars_data . year < 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

eval_err_num:526
medium pred: select * from car_makers where car_makers . full_name = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName = 'Ford Motor Company';

eval_err_num:527
medium pred: select countries . country_name from countries where countries . country_name = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName != 'Ford Motor Company';

eval_err_num:528
extra pred: select cars_data . weight , cars_data . weight from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model join cars_data as T5 on T4.MakeId = T5.Id where countries . country_name = 1 or countries . country_name = 1
extra gold: SELECT T1.model, T2.Make, T3.weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'

eval_err_num:529
extra pred: select continents . continent from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country join model_list as T4 on T3.Id = T4.Maker join car_names as T5 on T4.Model = T5.Model join cars_data as T6 on T5.MakeId = T6.Id where car_makers . full_name = 1 and cars_data . weight > 1
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

eval_err_num:530
easy pred: select countries . country_name from countries
easy gold: SELECT CountryName FROM countries;

eval_err_num:531
easy pred: select countries . country_name from countries
easy gold: SELECT distinct T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:532
hard pred: select countries . country_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country join model_list as T3 on T2.Id = T3.Maker join car_names as T4 on T3.Model = T4.Model group by car_names . make_id having count ( * ) > 1
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:533
medium pred: select model_list . model_id , car_makers . full_name , cars_data . horsepower from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join car_names as T3 on T1.Model = T3.Model join cars_data as T4 on T3.MakeId = T4.Id
medium gold: SELECT T1.Id ,  T1.Maker, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:534
medium pred: select model_list . model_id , countries . country_name , count ( * ) from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join countries as T3 on T2.Country = T3.CountryId group by countries . country_id
medium gold: SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:535
medium pred: select countries . country_id , car_makers . full_name from countries as T1 join car_makers as T2 on T1.CountryId = T2.Country group by countries . country_id having count ( * ) > = 1
medium gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2;

eval_err_num:536
extra pred: select model_list . model_id , car_makers . full_name from model_list as T1 join car_makers as T2 on T1.Maker = T2.Id join countries as T3 on T2.Country = T3.CountryId group by countries . country_id having count ( * ) > 1
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:537
easy pred: select count ( matches . * ) from matches
easy gold: SELECT count(*) FROM matches

eval_err_num:538
easy pred: select max ( players . birth_date ) from players
easy gold: SELECT max(minutes) FROM matches

eval_err_num:539
easy pred: select min ( players . birth_date ) from players
easy gold: SELECT avg(minutes) FROM matches

eval_err_num:540
medium pred: select players . birth_date , max ( players . birth_date ) from players
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

eval_err_num:541
easy pred: select count ( matches . winner_name ) from matches
easy gold: SELECT count(DISTINCT tourney_name) FROM matches

eval_err_num:542
easy pred: select matches . winner_name from matches group by matches . winner_name having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  20

eval_err_num:543
easy pred: select matches . winner_name from matches group by matches . winner_name having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

eval_err_num:544
easy pred: select count ( matches . winner_entry ) from matches where matches . year = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE year = 2013

eval_err_num:545
easy pred: select count ( * ) from matches where matches . year = 1 and matches . year = 1
easy gold: SELECT count(*) FROM (SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016)

eval_err_num:546
hard pred: select matches . winner_name from matches where matches . year = 1 and matches . year = 1
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

eval_err_num:547
easy pred: select count ( matches . * ) from matches
easy gold: SELECT count(*) FROM matches

eval_err_num:548
easy pred: select count ( * ) from players where players . hand = 1
easy gold: SELECT count(*) FROM matches WHERE loser_hand = "L"

eval_err_num:549
medium pred: select count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id where matches . score = 1 and players . last_name = 1
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

eval_err_num:550
easy pred: select count ( players . * ) from players
easy gold: SELECT count(*) FROM players

eval_err_num:551
medium pred: select matches . year , players . birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id where matches . winner_name = 1
medium gold: SELECT T1.last_name, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships'

eval_err_num:552
medium pred: select matches . loser_name , players . country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id where matches . winner_name = 1
medium gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships'

eval_err_num:553
extra pred: select matches . winner_name , players . country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id where rankings . tours = 1 or rankings . tours = 1
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

eval_err_num:554
medium pred: select players . birth_date from players order by players . birth_date asc limit 1
medium gold: SELECT birth_date FROM players ORDER BY birth_date DESC LIMIT 1

eval_err_num:555
medium pred: select players . player_id , players . last_name from players order by players . birth_date limit 1
medium gold: SELECT player_id ,  last_name FROM players ORDER BY birth_date LIMIT 1

eval_err_num:556
medium pred: select matches . loser_name , players . country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by players . birth_date asc limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

eval_err_num:557
easy pred: select count ( * ) from players where players . first_name = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'R'

eval_err_num:558
easy pred: select players . hand from players where players . hand = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'L'

eval_err_num:559
medium pred: select players . country_code , players . birth_date from players where players . hand = 1
medium gold: SELECT country_code ,  birth_date FROM players WHERE hand  =  'L'

eval_err_num:560
medium pred: select matches . winner_name , players . country_code , players . birth_date from matches as T1 join players as T2 on T1.winner_id = T2.player_id where players . first_name = 1 order by players . birth_date
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

eval_err_num:561
easy pred: select count ( players . * ) from players
easy gold: SELECT count(*) FROM players

eval_err_num:562
hard pred: select count ( matches . winner_name ) from matches
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours ASC LIMIT 1

eval_err_num:563
hard pred: select count ( * ) from rankings group by rankings . player_id order by count ( * ) desc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:564
hard pred: select matches . winner_name , players . country_code from matches as T1 join players as T2 on T1.winner_id = T2.player_id
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:565
easy pred: select count ( matches . * ) from matches
easy gold: SELECT count(*) FROM matches

eval_err_num:566
hard pred: select matches . surface from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by matches . surface order by count ( rankings . * ) desc limit 1
hard gold: SELECT surface FROM matches GROUP BY surface ORDER  BY count(*) DESC LIMIT 1

eval_err_num:567
hard pred: select matches . year from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id order by rankings . ranking_points desc limit 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:568
hard pred: select matches . winner_name from matches group by matches . winner_hand order by count ( * ) desc limit 1
hard gold: SELECT loser_name FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:569
hard pred: select matches . loser_name , matches . winner_rank_points from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by players . birth_date desc limit 1
hard gold: SELECT loser_name, loser_rank_points FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:570
hard pred: select matches . winner_name , players . hand from matches as T1 join players as T2 on T1.winner_id = T2.player_id group by matches . winner_rank_points order by count ( * ) desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:571
medium pred: select matches . loser_name from matches order by matches . loser_rank_points desc limit 1
medium gold: SELECT loser_name FROM matches ORDER BY loser_rank_points DESC LIMIT 1

eval_err_num:572
hard pred: select matches . loser_name , players . hand from matches as T1 join players as T2 on T1.winner_id = T2.player_id where matches . winner_entry = 1 order by matches . loser_rank_points desc limit 1
hard gold: SELECT loser_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY loser_rank_points DESC LIMIT 1

eval_err_num:573
hard pred: select matches . winner_name from matches where matches . winner_name = 1 order by matches . loser_rank_points desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

eval_err_num:574
medium pred: select min ( matches . score ) from matches
medium gold: SELECT minutes FROM matches ORDER BY minutes ASC LIMIT 1

eval_err_num:575
medium pred: select max ( matches . score ) from matches
medium gold: SELECT minutes FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:576
medium pred: select matches . loser_name , players . last_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by players . birth_date desc limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:577
easy pred: select players . birth_date from players
easy gold: SELECT birth_date FROM players

eval_err_num:578
medium pred: select players . first_name , players . last_name from players
medium gold: SELECT T2.tours, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:579
medium pred: select matches . winner_name , avg ( rankings . ranking_points ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by matches . winner_name
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:580
medium pred: select matches . score , count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id group by rankings . player_id
medium gold: SELECT tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:581
medium pred: select avg ( players . hand ) , players . first_name , players . last_name from players
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:582
medium pred: select avg ( players . hand ) , min ( players . hand ) from players
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:583
easy pred: select count ( * ) , players . country_code from players group by players . country_code
easy gold: SELECT count(*) FROM players GROUP BY country_code

eval_err_num:584
hard pred: select players . country_code from players group by players . country_code order by count ( * ) asc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) ASC LIMIT 1

eval_err_num:585
hard pred: select players . country_code from players group by players . country_code order by count ( * ) desc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:586
medium pred: select matches . loser_rank , count ( * ) from matches group by matches . loser_name
medium gold: SELECT count(*), hand FROM players GROUP BY hand

eval_err_num:587
medium pred: select matches . winner_name , count ( * ) from matches group by matches . winner_name
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code

eval_err_num:588
medium pred: select matches . winner_name , count ( * ) from matches as T1 join players as T2 on T1.winner_id = T2.player_id group by players . country_code having count ( * ) > 1
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code HAVING count(*) > 50

eval_err_num:589
easy pred: select players . country_code from players group by players . country_code having count ( * ) > 1
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

eval_err_num:590
medium pred: select matches . winner_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by players . birth_date desc limit 1
medium gold: SELECT DISTINCT loser_name FROM matches ORDER BY loser_age DESC LIMIT 3

eval_err_num:591
medium pred: select matches . winner_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id order by players . birth_date asc limit 1
medium gold: SELECT DISTINCT winner_name FROM matches ORDER BY winner_age DESC LIMIT 3

eval_err_num:592
medium pred: select matches . loser_rank , rankings . ranking from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id order by players . birth_date asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:593
easy pred: select count ( * ) from matches where matches . winner_name = 1
easy gold: SELECT count(DISTINCT loser_name) FROM matches WHERE tourney_name  =  'Australian Open'

eval_err_num:594
easy pred: select count ( * ) from matches where matches . winner_name = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Australian Open'

eval_err_num:595
medium pred: select matches . winner_name , players . last_name from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id where rankings . tours = 1 intersect select matches . winner_name , rankings . tours from matches as T4 join players as T5 on T4.winner_id = T5.player_id join rankings as T6 on T5.player_id = T6.player_id where rankings . tours = 1
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

eval_err_num:596
easy pred: select conductor . * from conductor
easy gold: SELECT * FROM conductor

eval_err_num:597
easy pred: select count ( conductor . * ) from conductor
easy gold: SELECT count(*) FROM conductor

eval_err_num:598
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:599
easy pred: select conductor . age from conductor
easy gold: SELECT Age FROM conductor

eval_err_num:600
easy pred: select conductor . name from conductor order by conductor . age asc
easy gold: SELECT Name FROM conductor ORDER BY Age ASC

eval_err_num:601
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:602
easy pred: select conductor . name from conductor where conductor . nationality = 1
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

eval_err_num:603
easy pred: select orchestra . record_company from orchestra
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:604
medium pred: select orchestra . year_of_founded from orchestra
medium gold: SELECT Record_Company, Year_of_Founded FROM orchestra

eval_err_num:605
easy pred: select orchestra . record_company from orchestra order by orchestra . year_of_founded desc
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

eval_err_num:606
easy pred: select show . attendance from show
easy gold: SELECT Attendance FROM SHOW

eval_err_num:607
easy pred: select avg ( show . attendance ) from show
easy gold: SELECT avg(Attendance) FROM SHOW

eval_err_num:608
easy pred: select show . attendance from show
easy gold: SELECT SHARE FROM performance

eval_err_num:609
easy pred: select conductor . name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID join performance as T3 on T2.Orchestra_ID = T3.Orchestra_ID where performance . type = 1
easy gold: SELECT SHARE FROM performance WHERE TYPE != "Live final"

eval_err_num:610
medium pred: select max ( performance . share ) , min ( performance . share ) from performance where performance . type = 1
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

eval_err_num:611
easy pred: select conductor . nationality from conductor
easy gold: SELECT Nationality FROM conductor

eval_err_num:612
easy pred: select count ( conductor . nationality ) from conductor
easy gold: SELECT count(DISTINCT Nationality) FROM conductor

eval_err_num:613
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:614
easy pred: select conductor . year_of_work from conductor
easy gold: SELECT Year_of_Work FROM conductor

eval_err_num:615
easy pred: select conductor . name from conductor order by conductor . year_of_work desc
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

eval_err_num:616
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:617
easy pred: select conductor . year_of_work from conductor
easy gold: SELECT Year_of_Work FROM conductor

eval_err_num:618
medium pred: select conductor . name from conductor order by conductor . year_of_work desc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

eval_err_num:619
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:620
medium pred: select conductor . name from conductor
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

eval_err_num:621
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:622
medium pred: select conductor . name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID group by orchestra . conductor_id having count ( * ) > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

eval_err_num:623
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:624
extra pred: select conductor . name from conductor group by conductor . name order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:625
easy pred: select conductor . name from conductor
easy gold: SELECT Name FROM conductor

eval_err_num:626
medium pred: select conductor . name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where orchestra . year_of_founded > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

eval_err_num:627
easy pred: select performance . share from performance except select orchestra . record_company from orchestra
easy gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company

eval_err_num:628
medium pred: select orchestra . record_company , count ( * ) from orchestra group by orchestra . major_record_format
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

eval_err_num:629
easy pred: select performance . share from performance
easy gold: SELECT Major_Record_Format FROM orchestra

eval_err_num:630
medium pred: select performance . share from performance order by performance . share asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

eval_err_num:631
easy pred: select orchestra . * from orchestra
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:632
hard pred: select conductor . * from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID group by orchestra . major_record_format order by count ( orchestra . * ) desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:633
easy pred: select conductor . name from conductor
easy gold: SELECT Orchestra FROM orchestra

eval_err_num:634
hard pred: select conductor . name from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID join performance as T3 on T2.Orchestra_ID = T3.Orchestra_ID join show as T4 on T3.Performance_ID = T4.Performance_ID where show . show_id not in ( select orchestra . conductor_id from orchestra )
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

eval_err_num:635
easy pred: select orchestra . record_company from orchestra
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:636
easy pred: select * from orchestra where orchestra . year_of_founded > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003

eval_err_num:637
easy pred: select * from orchestra where orchestra . year_of_founded > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:638
hard pred: select conductor . * from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where conductor . nationality = 1 and orchestra . year_of_founded > 1
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:639
medium pred: select orchestra . orchestra from conductor as T1 join orchestra as T2 on T1.Conductor_ID = T2.Conductor_ID where conductor . name = 1 or conductor . name = 1
medium gold: SELECT * FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:640
medium pred: select count ( * ) from conductor where conductor . name = 1 or conductor . name = 1
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:641
easy pred: select documents . * from Documents
easy gold: SELECT * FROM Documents

eval_err_num:642
easy pred: select documents . document_id from Documents
easy gold: SELECT document_id FROM Documents

eval_err_num:643
medium pred: select documents . template_id , documents . document_name , documents . document_description from Documents
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

eval_err_num:644
easy pred: select documents . document_name from Documents
easy gold: SELECT document_name FROM Documents

eval_err_num:645
medium pred: select documents . document_name , documents . document_description from Documents
medium gold: SELECT document_name, Document_Description FROM Documents

eval_err_num:646
medium pred: select documents . document_name , documents . document_description from Documents where documents . document_name like 1
medium gold: SELECT document_name FROM Documents WHERE Document_Description LIKE "%w%"

eval_err_num:647
medium pred: select documents . document_name , documents . template_id from Documents where documents . document_name like 1
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

eval_err_num:648
easy pred: select documents . document_name from Documents
easy gold: SELECT document_name from Documents

eval_err_num:649
easy pred: select documents . document_id from Documents where documents . document_name = 1
easy gold: SELECT document_id FROM Documents WHERE document_name  =  "Robbin CV"

eval_err_num:650
medium pred: select documents . template_id , documents . document_name , documents . template_id from Documents where documents . document_name = 1
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

eval_err_num:651
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Documents

eval_err_num:652
easy pred: select documents . template_id from Documents
easy gold: SELECT DISTINCT template_id FROM Documents

eval_err_num:653
easy pred: select count ( documents . template_id ) from Documents
easy gold: SELECT count(DISTINCT template_id) FROM Documents

eval_err_num:654
easy pred: select documents . document_id from Documents
easy gold: SELECT document_id FROM Documents

eval_err_num:655
medium pred: select documents . template_id , templates . template_type_code , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T1.document_id, T2.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID

eval_err_num:656
medium pred: select documents . template_id , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where templates . template_type_code = 1
medium gold: SELECT T1.document_id FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID where T2.Template_Type_Code  =  'PPT'

eval_err_num:657
medium pred: select count ( documents . * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where templates . template_type_code = 1
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

eval_err_num:658
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Documents

eval_err_num:659
medium pred: select documents . template_id , count ( documents . * ) from Documents group by documents . template_id
medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id

eval_err_num:660
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Documents

eval_err_num:661
medium pred: select documents . template_id , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:662
medium pred: select templates . template_type_code , count ( documents . * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code
medium gold: SELECT count(*), T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id

eval_err_num:663
extra pred: select documents . template_id , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code order by count ( * ) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:664
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Documents

eval_err_num:665
medium pred: select documents . template_id , count ( documents . * ) from Documents group by documents . template_id
medium gold: SELECT template_id, count(*) FROM Documents GROUP BY template_id

eval_err_num:666
easy pred: select documents . template_id from Documents group by documents . template_id having count ( documents . * ) > 1
easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1

eval_err_num:667
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Documents

eval_err_num:668
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Templates

eval_err_num:669
hard pred: select documents . template_id from Documents where documents . template_id not in ( select documents . template_id from Documents )
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

eval_err_num:670
easy pred: select documents . * from Documents
easy gold: SELECT * FROM Templates

eval_err_num:671
easy pred: select count ( documents . * ) from Documents
easy gold: SELECT count(*) FROM Templates

eval_err_num:672
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Templates

eval_err_num:673
medium pred: select documents . template_id , templates . version_number , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

eval_err_num:674
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:675
easy pred: select templates . template_type_code from Templates
easy gold: SELECT DISTINCT template_type_code FROM Templates

eval_err_num:676
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id FROM Templates

eval_err_num:677
medium pred: select documents . template_id from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where templates . template_type_code = 1 or templates . template_type_code = 1
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

eval_err_num:678
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:679
easy pred: select count ( templates . template_type_code ) from Templates where templates . template_type_code = 1
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

eval_err_num:680
easy pred: select documents . document_name from Documents group by documents . template_id having count ( * ) = 1
easy gold: SELECT version_number FROM Templates

eval_err_num:681
easy pred: select * from Templates where templates . version_number > 1
easy gold: SELECT version_number FROM Templates WHERE version_number  >  5

eval_err_num:682
medium pred: select templates . template_type_code , templates . template_type_code from Templates where templates . version_number > 1
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

eval_err_num:683
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:684
medium pred: select templates . template_type_code , count ( documents . * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

eval_err_num:685
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:686
medium pred: select templates . template_type_code , count ( documents . * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

eval_err_num:687
hard pred: select templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code order by count ( documents . * ) desc limit 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:688
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:689
medium pred: select templates . template_type_code , count ( documents . * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

eval_err_num:690
easy pred: select templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code having count ( documents . * ) < 1
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

eval_err_num:691
easy pred: select count ( templates . * ) from Templates
easy gold: SELECT Version_Number FROM Templates

eval_err_num:692
easy pred: select min ( templates . version_number ) from Templates
easy gold: SELECT min(Version_Number) FROM Templates

eval_err_num:693
medium pred: select templates . template_type_code , templates . template_type_code from Templates
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

eval_err_num:694
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:695
medium pred: select documents . document_name , documents . document_name from Documents
medium gold: SELECT T1.template_type_code, T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:696
medium pred: select templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where documents . document_name = 1
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

eval_err_num:697
easy pred: select documents . document_name from Documents
easy gold: SELECT document_name FROM Documents

eval_err_num:698
medium pred: select documents . document_name , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T2.document_name, T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:699
medium pred: select documents . document_name from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where templates . template_type_code = 1
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

eval_err_num:700
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:701
medium pred: select templates . template_type_code , documents . template_id from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T1.template_type_code , T2.document_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:702
medium pred: select templates . template_type_code , count ( documents . * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

eval_err_num:703
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:704
medium pred: select templates . template_type_code , count ( documents . * ) from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code
medium gold: SELECT T1.template_type_code, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

eval_err_num:705
hard pred: select templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code order by count ( documents . * ) desc
hard gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC

eval_err_num:706
extra pred: select templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID group by templates . template_type_code order by count ( documents . * ) desc limit 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:707
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates

eval_err_num:708
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:709
hard pred: select templates . template_type_code from Templates except select templates . template_type_code from Templates
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:710
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Ref_template_types

eval_err_num:711
medium pred: select templates . template_type_code , templates . template_details from Templates
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

eval_err_num:712
medium pred: select templates . template_type_code , templates . template_details from Templates
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

eval_err_num:713
easy pred: select ref_template_types . template_type_code , ref_template_types . template_type_code from Templates as T1 join Ref_Template_Types as T2 on T1.Template_Type_Code = T2.Template_Type_Code where templates . template_type_code = 1
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

eval_err_num:714
easy pred: select templates . template_type_code from Templates
easy gold: SELECT template_type_code FROM Ref_template_types

eval_err_num:715
medium pred: select templates . template_type_code , paragraphs . paragraph_text from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID join Templates as T3 on T2.Template_ID = T3.Template_ID
medium gold: SELECT template_type_code , template_type_description FROM Ref_template_types

eval_err_num:716
easy pred: select templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID where documents . document_description = 1
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

eval_err_num:717
easy pred: select documents . template_id from Documents
easy gold: select Template_ID from Documents

eval_err_num:718
medium pred: select documents . template_id , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: select T2.Template_ID, T1.template_type_code from Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.template_ID

eval_err_num:719
medium pred: select templates . template_type_code from Templates
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

eval_err_num:720
medium pred: select templates . template_type_code from Templates group by templates . template_type_code
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

eval_err_num:721
easy pred: select documents . template_id from Documents
easy gold: SELECT template_id from Templates

eval_err_num:722
medium pred: select documents . template_id , templates . template_type_code from Documents as T1 join Templates as T2 on T1.Template_ID = T2.Template_ID
medium gold: SELECT T2.template_id, T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code

eval_err_num:723
medium pred: select documents . template_id from Documents where documents . document_name = 1
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

eval_err_num:724
easy pred: select documents . * from Documents
easy gold: SELECT * FROM Paragraphs

eval_err_num:725
easy pred: select count ( documents . * ) from Documents
easy gold: SELECT count(*) FROM Paragraphs

eval_err_num:726
easy pred: select documents . document_id from Documents
easy gold: SELECT paragraph_id FROM Paragraphs

eval_err_num:727
medium pred: select documents . document_id , documents . document_name from Documents
medium gold: SELECT T1.paragraph_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID

eval_err_num:728
medium pred: select documents . document_id from Documents where documents . document_name = 1
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:729
medium pred: select count ( * ) from Documents where documents . document_name = 1
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:730
easy pred: select documents . document_description from Documents
easy gold: SELECT paragraph_text FROM Paragraphs

eval_err_num:731
medium pred: select paragraphs . paragraph_text , documents . other_details from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID
medium gold: SELECT Other_Details, paragraph_text FROM Paragraphs

eval_err_num:732
easy pred: select paragraphs . paragraph_text , documents . other_details from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID where documents . other_details like 1
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

eval_err_num:733
medium pred: select documents . template_id , documents . document_description from Documents
medium gold: SELECT paragraph_id ,  paragraph_text FROM Paragraphs

eval_err_num:734
medium pred: select documents . document_name , documents . document_description , documents . document_description from Documents
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text, T2.Document_Name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:735
medium pred: select documents . template_id , documents . document_name from Documents where documents . document_name = 1
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

eval_err_num:736
easy pred: select documents . document_description from Documents
easy gold: SELECT paragraph_text FROM Paragraphs

eval_err_num:737
medium pred: select documents . document_name , documents . document_name from Documents
medium gold: SELECT T1.paragraph_text, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:738
medium pred: select documents . document_name from Documents where documents . document_name = 1
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

eval_err_num:739
easy pred: select documents . document_id from Documents
easy gold: SELECT document_id FROM Paragraphs

eval_err_num:740
medium pred: select documents . template_id , count ( documents . * ) from Documents group by documents . template_id
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:741
medium pred: select documents . document_id from Documents order by documents . document_description
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

eval_err_num:742
medium pred: select documents . document_id , documents . document_name from Documents
medium gold: SELECT document_id ,  document_name FROM Documents

eval_err_num:743
medium pred: select documents . document_name , count ( * ) from Documents group by documents . template_id
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

eval_err_num:744
easy pred: select documents . document_id from Documents
easy gold: SELECT document_id FROM Paragraphs

eval_err_num:745
medium pred: select documents . template_id , count ( documents . * ) from Documents group by documents . template_id
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:746
easy pred: select documents . document_id from Documents group by documents . template_id having count ( documents . * ) > = 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

eval_err_num:747
medium pred: select documents . template_id , documents . document_name from Documents
medium gold: SELECT document_id ,  document_name FROM Documents

eval_err_num:748
medium pred: select documents . template_id , documents . document_name , documents . document_id from Documents
medium gold: SELECT T1.document_id ,  T2.document_name , T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:749
medium pred: select documents . template_id , documents . document_name , count ( * ) from Documents group by documents . template_id order by count ( * )
medium gold: SELECT T1.document_id ,  T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

eval_err_num:750
extra pred: select documents . template_id , documents . document_name from Documents order by documents . document_id limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:751
easy pred: select documents . document_id from Documents
easy gold: SELECT document_id FROM Paragraphs

eval_err_num:752
medium pred: select documents . template_id , count ( documents . * ) from Documents group by documents . template_id
medium gold: SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:753
medium pred: select documents . template_id from Documents group by documents . template_id order by count ( documents . * )
medium gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*)

eval_err_num:754
hard pred: select documents . document_id from Documents group by documents . template_id order by count ( documents . * ) asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:755
easy pred: select documents . document_id from Documents
easy gold: SELECT document_id FROM Paragraphs

eval_err_num:756
medium pred: select documents . template_id , count ( documents . * ) from Documents group by documents . template_id
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:757
easy pred: select documents . document_id from Documents where documents . document_id not in ( select documents . template_id from Documents group by documents . template_id having count ( documents . * ) between 1 and 1 )
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

eval_err_num:758
easy pred: select singer . * from singer
easy gold: SELECT * FROM singer

eval_err_num:759
easy pred: select count ( singer . * ) from singer
easy gold: SELECT count(*) FROM singer

eval_err_num:760
easy pred: select singer . name from singer
easy gold: SELECT name FROM singer

eval_err_num:761
medium pred: select singer . name , singer . country , singer . age from singer
medium gold: SELECT name ,  country ,  age FROM singer

eval_err_num:762
medium pred: select singer . name , singer . is_male , singer . age from singer order by singer . age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

eval_err_num:763
easy pred: select singer . age from singer
easy gold: select age from singer

eval_err_num:764
easy pred: select singer . age from singer where singer . country = 1
easy gold: select age from singer WHERE country  =  'France'

eval_err_num:765
medium pred: select avg ( singer . age ) , min ( singer . age ) , min ( singer . age ) from singer where singer . country = 1
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

eval_err_num:766
easy pred: select singer . song_name from singer
easy gold: select song_name from singer

eval_err_num:767
medium pred: select stadium . name , concert . year from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT song_name ,  song_release_year FROM singer

eval_err_num:768
medium pred: select stadium . name , concert . year , singer . song_release_year from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID order by singer . age
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age

eval_err_num:769
medium pred: select singer . age , concert . year from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID order by singer . age desc limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

eval_err_num:770
easy pred: select singer . country from singer
easy gold: SELECT country FROM singer

eval_err_num:771
easy pred: select singer . country from singer where singer . age > 1
easy gold: SELECT country FROM singer WHERE age  >  20

eval_err_num:772
easy pred: select singer . country from singer where singer . age > 1
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

eval_err_num:773
easy pred: select singer . country from singer
easy gold: SELECT country FROM singer

eval_err_num:774
medium pred: select singer . country , count ( * ) from singer group by singer . country
medium gold: SELECT country ,  count(*) FROM singer GROUP BY country

eval_err_num:775
easy pred: select avg ( singer . age ) from singer
easy gold: SELECT avg(age) FROM singer

eval_err_num:776
hard pred: select stadium . name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID join stadium as T4 on T3.Stadium_ID = T4.Stadium_ID where singer . age > ( select avg ( singer . age ) from singer )
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

eval_err_num:777
easy pred: select stadium . name from stadium
easy gold: SELECT name FROM stadium

eval_err_num:778
easy pred: select stadium . name , stadium . capacity from stadium where stadium . capacity > 1
easy gold: SELECT name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

eval_err_num:779
medium pred: select stadium . name , stadium . location from stadium where stadium . capacity > 1 or stadium . capacity < 1
medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

eval_err_num:780
easy pred: select stadium . capacity from stadium
easy gold: select capacity FROM stadium

eval_err_num:781
easy pred: select avg ( stadium . capacity ) from stadium
easy gold: SELECT avg(capacity) FROM stadium

eval_err_num:782
medium pred: select avg ( stadium . capacity ) , max ( stadium . capacity ) from stadium
medium gold: SELECT avg(capacity) ,  max(capacity) FROM stadium

eval_err_num:783
medium pred: select stadium . name , stadium . capacity from stadium
medium gold: SELECT name ,  capacity FROM stadium

eval_err_num:784
medium pred: select stadium . name , stadium . capacity from stadium order by stadium . average desc
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC

eval_err_num:785
medium pred: select stadium . name , stadium . capacity from stadium order by stadium . average desc limit 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

eval_err_num:786
easy pred: select concert . * from concert where concert . year = 1
easy gold: SELECT * FROM concert WHERE YEAR  =  2014

eval_err_num:787
medium pred: select concert . * , concert . year from concert where concert . year = 1
medium gold: SELECT * FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

eval_err_num:788
medium pred: select count ( concert . * ) from concert where concert . year = 1
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

eval_err_num:789
easy pred: select stadium . name from stadium
easy gold: SELECT name from stadium

eval_err_num:790
medium pred: select stadium . name , count ( concert . * ) from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID group by stadium . stadium_id
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

eval_err_num:791
medium pred: select stadium . name , stadium . capacity from stadium
medium gold: SELECT name ,  capacity FROM stadium

eval_err_num:792
extra pred: select stadium . name , stadium . capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where concert . year > = 1 order by concert . year desc
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC

eval_err_num:793
extra pred: select stadium . name , stadium . capacity from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where concert . year > = 1 group by stadium . location order by count ( concert . * ) desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:794
easy pred: select concert . year from concert
easy gold: SELECT YEAR FROM concert

eval_err_num:795
medium pred: select concert . year from concert order by concert . year desc
medium gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC

eval_err_num:796
hard pred: select concert . year from concert group by concert . year order by count ( concert . * ) desc limit 1
hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:797
easy pred: select stadium . stadium_id from stadium
easy gold: SELECT stadium_id FROM concert

eval_err_num:798
hard pred: select stadium . name from stadium where stadium . stadium_id not in ( select stadium . stadium_id from stadium )
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

eval_err_num:799
easy pred: select singer . country from singer
easy gold: SELECT country FROM singer

eval_err_num:800
easy pred: select singer . country from singer where singer . age < 1
easy gold: SELECT country FROM singer WHERE age  >  40

eval_err_num:801
easy pred: select singer . country from singer where singer . age < 1
easy gold: SELECT country FROM singer WHERE age  <  30

eval_err_num:802
hard pred: select singer . country from singer where singer . age < 1 intersect select singer . country from singer where singer . age < 1
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

eval_err_num:803
medium pred: select stadium . name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where concert . year = 1
medium gold: SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:804
hard pred: select stadium . name from stadium except select stadium . name from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where concert . year = 1
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:805
medium pred: select stadium . name , concert . theme from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID
medium gold: SELECT concert_name ,  theme from concert

eval_err_num:806
medium pred: select stadium . name , concert . theme , count ( concert . * ) from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID group by concert . stadium_id
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

eval_err_num:807
easy pred: select singer . name from singer
easy gold: SELECT name FROM singer

eval_err_num:808
medium pred: select singer . name , count ( * ) from singer group by singer . name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

eval_err_num:809
easy pred: select singer . name from singer
easy gold: select name from singer

eval_err_num:810
hard pred: select singer . name from singer as T1 join singer_in_concert as T2 on T1.Singer_ID = T2.Singer_ID join concert as T3 on T2.concert_ID = T3.concert_ID where concert . year = 1
hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

eval_err_num:811
easy pred: select singer . name from singer
easy gold: SELECT name FROM singer

eval_err_num:812
medium pred: select singer . name from singer where singer . song_name = 1
medium gold: SELECT name FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:813
medium pred: select singer . name , singer . country from singer where singer . song_name = 1
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:814
medium pred: select stadium . name , stadium . location from stadium
medium gold: SELECT name ,  location FROM stadium

eval_err_num:815
medium pred: select stadium . name , stadium . location from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where concert . year = 1
medium gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014

eval_err_num:816
extra pred: select stadium . name , stadium . location from stadium as T1 join concert as T2 on T1.Stadium_ID = T2.Stadium_ID where concert . year = 1 intersect select stadium . name , stadium . location from stadium as T3 join concert as T4 on T3.Stadium_ID = T4.Stadium_ID where concert . year = 1
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

eval_err_num:817
medium pred: select singer . name , singer . birth_year from singer
medium gold: SELECT Name, Birth_Year from singer

eval_err_num:818
medium pred: select singer . name from singer where singer . birth_year = 1
medium gold: SELECT Name, Birth_Year from singer WHERE Birth_Year = 1948

eval_err_num:819
medium pred: select singer . name from singer where singer . birth_year > 1 or singer . birth_year > 1
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

eval_err_num:820
medium pred: select singer . name , singer . net_worth_millions from singer
medium gold: SELECT Name, Net_Worth_Millions FROM singer

eval_err_num:821
easy pred: select singer . name , singer . net_worth_millions from singer order by singer . birth_year desc
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC

eval_err_num:822
medium pred: select singer . name from singer order by singer . net_worth_millions desc limit 1
medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

eval_err_num:823
medium pred: select singer . name , singer . citizenship from singer
medium gold: SELECT Name, Citizenship FROM singer

eval_err_num:824
medium pred: select singer . name , singer . citizenship , count ( * ) from singer group by singer . citizenship
medium gold: SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship

eval_err_num:825
medium pred: select singer . name , singer . citizenship from singer group by singer . citizenship order by count ( * ) desc limit 1
medium gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC

eval_err_num:826
hard pred: select singer . name from singer group by singer . citizenship order by count ( * ) desc limit 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:827
medium pred: select singer . name , song . title from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID

eval_err_num:828
medium pred: select singer . name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID where song . sales < 1
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID WHERE t2.Sales > 300000

eval_err_num:829
medium pred: select song . title from song where song . sales < 1
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

eval_err_num:830
medium pred: select song . title , count ( * ) from song group by song . singer_id
medium gold: SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:831
medium pred: select singer . name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by song . singer_id having count ( * ) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

eval_err_num:832
medium pred: select song . title , song . sales from song
medium gold: SELECT title, Sales from song

eval_err_num:833
medium pred: select singer . name , sum ( song . sales ) from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID group by song . singer_id
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:834
easy pred: select song . singer_id from song group by song . singer_id having count ( * ) > = 1
easy gold: SELECT DISTINCT Singer_ID from song

eval_err_num:835
hard pred: select singer . name from song as T1 join singer as T2 on T1.Singer_ID = T2.Singer_ID where song . singer_id not in ( select song . singer_id from song )
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

eval_err_num:836
easy pred: select hiring . * from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID where employee . age < 1
easy gold: SELECT * FROM employee WHERE age  <  30

eval_err_num:837
easy pred: select employee . city from employee where employee . age < 1
easy gold: SELECT city FROM employee WHERE age  <  30

eval_err_num:838
medium pred: select shop . district from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID where employee . age > 1 intersect select employee . city from employee where employee . age < 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

eval_err_num:839
easy pred: select shop . * from shop
easy gold: SELECT * FROM shop

eval_err_num:840
easy pred: select count ( * )
easy gold: SELECT sum(number_products) FROM shop

eval_err_num:841
medium pred: select shop . name from shop group by shop . shop_id order by count ( * ) desc limit 1
medium gold: SELECT name FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:842
medium pred: select shop . name , shop . district from shop group by shop . shop_id order by count ( * ) desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:843
easy pred: select avg ( shop . number_products ) from shop
easy gold: SELECT avg(Number_products) FROM shop

eval_err_num:844
medium pred: select min ( shop . number_products ) , max ( shop . number_products ) from shop
medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop

eval_err_num:845
medium pred: select shop . name , shop . number_products from shop
medium gold: SELECT name, number_products FROM shop

eval_err_num:846
easy pred: select avg ( shop . number_products ) from shop
easy gold: SELECT avg(number_products) FROM shop

eval_err_num:847
hard pred: select shop . name from shop where shop . number_products < ( select avg ( shop . number_products ) from shop )
hard gold: SELECT name FROM shop WHERE number_products  <  (SELECT avg(number_products) FROM shop)

eval_err_num:848
hard pred: select shop . name from shop where shop . number_products < ( select avg ( shop . number_products ) from shop )
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

eval_err_num:849
easy pred: select count ( evaluation . * ) from evaluation
easy gold: SELECT count(*) FROM evaluation

eval_err_num:850
easy pred: select evaluation . year_awarded from evaluation
easy gold: SELECT Year_awarded FROM evaluation

eval_err_num:851
extra pred: select employee . name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by hiring . employee_id order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:852
easy pred: select employee . name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by hiring . employee_id
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

eval_err_num:853
extra pred: select employee . name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by hiring . employee_id order by count ( employee . * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:854
hard pred: select employee . name , hiring . start_from from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID join hiring as T3 on T2.Employee_ID = T3.Employee_ID order by evaluation . bonus desc limit 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

eval_err_num:855
easy pred: select count ( employee . * ) from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by hiring . employee_id
easy gold: SELECT count(distinct Employee_ID) FROM evaluation

eval_err_num:856
easy pred: select employee . name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID group by hiring . employee_id
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

eval_err_num:857
hard pred: select employee . name , employee . name from employee
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

eval_err_num:858
easy pred: select count ( hiring . * ) from hiring
easy gold: SELECT count(distinct Shop_ID) FROM hiring

eval_err_num:859
easy pred: select shop . name from shop group by shop . shop_id
easy gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id

eval_err_num:860
extra pred: select shop . name from employee as T1 join hiring as T2 on T1.Employee_ID = T2.Employee_ID join shop as T3 on T2.Shop_ID = T3.Shop_ID group by shop . shop_id order by count ( employee . * ) desc limit 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:861
easy pred: select hiring . * from hiring
easy gold: SELECT * FROM hiring

eval_err_num:862
hard pred: select shop . name from shop except select shop . name from shop
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

eval_err_num:863
easy pred: select count ( hiring . * ) from hiring
easy gold: SELECT count(*) FROM hiring

eval_err_num:864
medium pred: select count ( * ) , shop . name from shop group by shop . name
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

eval_err_num:865
easy pred: select visitor . * from visitor
easy gold: SELECT * FROM visitor

eval_err_num:866
easy pred: select visitor . * from visitor order by visitor . level_of_membership desc
easy gold: SELECT * FROM visitor ORDER BY Level_of_membership DESC

eval_err_num:867
easy pred: select visitor . name from visitor order by visitor . level_of_membership
easy gold: SELECT name FROM visitor ORDER BY Level_of_membership DESC

eval_err_num:868
medium pred: select visitor . name from visitor where visitor . level_of_membership < ( select min ( visitor . level_of_membership ) from visitor where visitor . level_of_membership < 1 )
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

eval_err_num:869
easy pred: select count ( visitor . * ) from visitor where visitor . level_of_membership > 1
easy gold: SELECT count(*) FROM visitor WHERE Level_of_membership  >  4

eval_err_num:870
medium pred: select visitor . name , visitor . level_of_membership from visitor where visitor . level_of_membership > 1
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4

eval_err_num:871
medium pred: select visitor . name , visitor . level_of_membership from visitor where visitor . level_of_membership > 1 order by visitor . name
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

eval_err_num:872
easy pred: select count ( museum . * ) from museum
easy gold: SELECT count(*) FROM museum

eval_err_num:873
easy pred: select avg ( visit . total_spent ) from visit
easy gold: SELECT avg(num_of_staff) FROM museum

eval_err_num:874
medium pred: select museum . name from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID order by visit . total_spent desc limit 1
medium gold: SELECT name FROM museum ORDER BY num_of_staff DESC LIMIT 1

eval_err_num:875
medium pred: select museum . museum_id from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID group by museum . museum_id order by avg ( visit . total_spent ) desc limit 1
medium gold: SELECT museum_id FROM museum ORDER BY num_of_staff DESC LIMIT 1

eval_err_num:876
easy pred: select museum . name from museum where museum . open_year < 1
easy gold: SELECT name FROM museum WHERE open_year  <  2010

eval_err_num:877
easy pred: select museum . name from museum where museum . open_year < 1
easy gold: SELECT name FROM museum WHERE open_year  >  2010

eval_err_num:878
easy pred: select min ( visit . total_spent ) from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID where museum . open_year < 1
easy gold: SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010

eval_err_num:879
hard pred: select museum . name from museum where museum . open_year > ( select min ( visit . total_spent ) from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID where museum . open_year < 1 )
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

eval_err_num:880
easy pred: select visitor . name , visitor . name from visitor
easy gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id

eval_err_num:881
medium pred: select visitor . name from visitor group by visitor . visitor_id having count ( * ) > 1
medium gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

eval_err_num:882
medium pred: select visitor . name , visitor . name , visit . visitor_id from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID group by visitor . visitor_id having count ( * ) > 1
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

eval_err_num:883
easy pred: select sum ( visit . total_spent ) from visit
easy gold: SELECT sum(Total_spent) FROM visit

eval_err_num:884
extra pred: select visitor . name from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID group by visit . visitor_id order by sum ( visit . total_spent ) desc limit 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

eval_err_num:885
extra pred: select visitor . visitor_id , visitor . level_of_membership from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID group by visitor . visitor_id order by sum ( visit . total_spent ) desc limit 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

eval_err_num:886
medium pred: select museum . museum_id , museum . name from museum
medium gold: SELECT Museum_ID, name FROM museum

eval_err_num:887
medium pred: select museum . museum_id , museum . name , count ( * ) from museum group by museum . museum_id
medium gold: SELECT t2.Museum_ID ,  t1.name, count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID

eval_err_num:888
extra pred: select museum . museum_id , museum . name from museum group by museum . museum_id order by count ( * ) desc limit 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:889
easy pred: select count ( museum . * ) from museum
easy gold: SELECT count(*) FROM museum

eval_err_num:890
extra pred: select count ( visitor . * ) from visitor where visitor . visitor_id not in ( select visit . visitor_id from visit )
extra gold: SELECT count(*) FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:891
hard pred: select museum . name from museum where museum . museum_id not in ( select visit . visitor_id from visit )
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:892
easy pred: select count ( visit . * ) from visit
easy gold: SELECT sum(num_of_ticket) FROM visit

eval_err_num:893
medium pred: select visit . visitor_id from visit group by visit . visitor_id order by count ( * ) desc limit 1
medium gold: SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1

eval_err_num:894
hard pred: select visitor . name , visitor . age from visit as T1 join visitor as T2 on T1.visitor_ID = T2.ID where visit . visitor_id in ( select visit . visitor_id from visit group by visit . visitor_id order by count ( * ) desc limit 1 )
hard gold: SELECT t1.name,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

eval_err_num:895
easy pred: select sum ( visit . total_spent ) from visit
easy gold: SELECT sum(Total_spent) FROM visit

eval_err_num:896
easy pred: select visit . total_spent from visit order by visit . total_spent desc limit 1
easy gold: SELECT max(Total_spent) FROM visit

eval_err_num:897
medium pred: select avg ( visit . total_spent ) , max ( visit . total_spent ) from visit
medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit

eval_err_num:898
easy pred: select min ( visitor . level_of_membership ) from visitor
easy gold: SELECT min(Level_of_membership) FROM visitor

eval_err_num:899
easy pred: select count ( visitor . * ) from visitor where visitor . level_of_membership = 1
easy gold: SELECT count(*) FROM visitor WHERE Level_of_membership  =  1

eval_err_num:900
medium pred: select * from visitor where visitor . level_of_membership = 1
medium gold: SELECT t2.Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

eval_err_num:901
medium pred: select sum ( visit . total_spent ) from visit
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

eval_err_num:902
easy pred: select museum . name from museum where museum . open_year < 1
easy gold: SELECT name FROM museum WHERE open_year  <  2009

eval_err_num:903
easy pred: select museum . name from museum where museum . open_year > 1
easy gold: SELECT name FROM museum WHERE open_year > 2011

eval_err_num:904
extra pred: select visitor . name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where museum . open_year > 1 intersect select visitor . name from museum as T4 join visit as T5 on T4.Museum_ID = T5.Museum_ID join visitor as T6 on T5.visitor_ID = T6.ID where museum . open_year > 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

eval_err_num:905
easy pred: select museum . name from museum where museum . open_year > 1
easy gold: SELECT name FROM museum WHERE open_year  >  2010

eval_err_num:906
medium pred: select count ( visitor . * ) from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where museum . open_year > 1
medium gold: SELECT count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010

eval_err_num:907
extra pred: select count ( visitor . * ) from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where museum . open_year > 1
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

eval_err_num:908
easy pred: select count ( likes . * ) from Likes
easy gold: SELECT count(*) FROM Highschooler

eval_err_num:909
medium pred: select count ( * ) , highschooler . grade from Highschooler where highschooler . grade > 1 group by highschooler . grade
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  11 OR grade  =  12

eval_err_num:910
medium pred: select count ( * ) from Highschooler where highschooler . grade > 1 and highschooler . grade = 1
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

eval_err_num:911
easy pred: select count ( highschooler . grade ) from Highschooler
easy gold: SELECT count(distinct grade) FROM Highschooler

eval_err_num:912
easy pred: select highschooler . grade from Highschooler
easy gold: SELECT distinct grade FROM Highschooler

eval_err_num:913
hard pred: select highschooler . grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by highschooler . grade order by count ( likes . * ) asc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) ASC LIMIT 1

eval_err_num:914
hard pred: select highschooler . grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by highschooler . grade order by count ( likes . * ) desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

eval_err_num:915
easy pred: select count ( likes . * ) from Likes
easy gold: SELECT count(*) FROM Highschooler

eval_err_num:916
medium pred: select count ( highschooler . id ) from Highschooler
medium gold: SELECT grade, count(*) FROM Highschooler GROUP BY grade

eval_err_num:917
easy pred: select * from Highschooler group by highschooler . grade having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  10

eval_err_num:918
easy pred: select highschooler . grade from Highschooler group by highschooler . grade having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

eval_err_num:919
easy pred: select highschooler . name from Highschooler
easy gold: SELECT name FROM highschooler

eval_err_num:920
medium pred: select highschooler . name , count ( * ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id
medium gold: SELECT T2.name, T3.name FROM friend as T1 join highschooler as T2  on friend_id = T2.ID join highschooler as T3 on student_id = T3.ID

eval_err_num:921
medium pred: select highschooler . name , count ( * ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:922
easy pred: select highschooler . name from Highschooler where highschooler . id = 1
easy gold: SELECT name FROM highschooler

eval_err_num:923
medium pred: select highschooler . name , count ( * ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:924
extra pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id order by count ( * ) asc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:925
extra pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:926
easy pred: select count ( * ) from Likes ( select count ( * ) from Likes group by likes . student_id having count ( * ) > 1 )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  > 5)

eval_err_num:927
easy pred: select count ( * ) from Likes ( select count ( likes . student_id ) from Likes group by likes . student_id having count ( * ) > = 1 )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 3)

eval_err_num:928
medium pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id having count ( * ) > 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:929
easy pred: select likes . * from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where highschooler . name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:930
hard pred: select count ( * ) from Highschooler where highschooler . name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:931
hard pred: select highschooler . name from Highschooler where highschooler . name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:932
easy pred: select likes . * from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where highschooler . name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:933
hard pred: select highschooler . name from Highschooler where highschooler . name = 1
hard gold: SELECT T3.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.liked_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:934
hard pred: select highschooler . name from Highschooler where highschooler . name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:935
hard pred: select count ( likes . student_id ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where highschooler . name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:936
easy pred: select likes . student_id from Likes
easy gold: SELECT ID FROM highschooler

eval_err_num:937
medium pred: select count ( likes . student_id ) , likes . student_id from Likes group by likes . student_id
medium gold: SELECT student_id, count(*) FROM friend group by student_id

eval_err_num:938
easy pred: select likes . student_id from Likes group by likes . student_id having count ( * ) > = 1
easy gold: SELECT student_id FROM Friend

eval_err_num:939
hard pred: select likes . student_id from Likes group by likes . student_id having count ( * ) > = 1
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

eval_err_num:940
easy pred: select highschooler . name from Highschooler
easy gold: SELECT name FROM highschooler

eval_err_num:941
easy pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id having count ( * ) > = 1
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 5)

eval_err_num:942
easy pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id having count ( * ) > = 1
easy gold: SELECT distinct T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:943
hard pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id having count ( * ) > = 1
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:944
easy pred: select likes . student_id from Likes
easy gold: SELECT student_id FROM Friend

eval_err_num:945
medium pred: select likes . student_id , highschooler . name , likes . student_id from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID
medium gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id

eval_err_num:946
extra pred: select likes . student_id , likes . student_id from Likes where likes . student_id in ( select likes . student_id from Likes group by likes . student_id having count ( likes . * ) = 1 )
extra gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id where T1.student_id in (SELECT liked_id FROM Likes)

eval_err_num:947
hard pred: select likes . student_id from Likes where likes . student_id in ( select likes . student_id from Likes where likes . student_id in ( select likes . student_id from Likes group by likes . student_id having count ( likes . * ) = 1 ) )
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

eval_err_num:948
easy pred: select count ( likes . * ) from Likes where likes . student_id in ( select likes . student_id from Likes )
easy gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:949
easy pred: select highschooler . name from Highschooler
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:950
easy pred: select count ( likes . student_id ) from Likes where likes . student_id in ( select likes . student_id from Likes )
easy gold: SELECT count (*) FROM (SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id)

eval_err_num:951
hard pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where likes . liked_id not in ( select likes . student_id from Likes )
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:952
hard pred: select likes . student_id from Likes
hard gold: SELECT name FROM Highschooler where ID not in (SELECT student_id FROM Likes)

eval_err_num:953
easy pred: select likes . student_id from Likes except select likes . student_id from Likes
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:954
medium pred: select likes . student_id , count ( * ) from Likes group by likes . student_id
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:955
easy pred: select count ( likes . * ) from Likes where likes . student_id in ( select likes . student_id from Likes )
easy gold: SELECT count(distinct student_id) FROM likes

eval_err_num:956
easy pred: select highschooler . name from Highschooler
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:957
extra pred: select count ( * ) from Highschooler where highschooler . grade = ( select max ( highschooler . grade ) from Highschooler )
extra gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:958
extra pred: select count ( * ) from Likes where likes . student_id in ( select likes . student_id from Likes group by likes . student_id order by count ( likes . * ) desc limit 1 )
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:959
easy pred: select highschooler . name from Highschooler
easy gold: SELECT name FROM highschooler

eval_err_num:960
medium pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  1

eval_err_num:961
medium pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:962
medium pred: select highschooler . name from Highschooler
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:963
medium pred: select likes . student_id from Likes group by likes . student_id having count ( * ) > = 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:964
medium pred: select highschooler . name , highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where likes . student_id in ( select likes . student_id from Likes )
medium gold: SELECT T2.name, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:965
hard pred: select highschooler . name from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID group by likes . student_id having count ( * ) > 1
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:966
easy pred: select highschooler . grade from Highschooler where highschooler . name = 1
easy gold: SELECT grade FROM highschooler where name = "Kyle"

eval_err_num:967
medium pred: select count ( * ) from Highschooler where highschooler . name = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:968
hard pred: select highschooler . name from Highschooler where highschooler . name = 1
hard gold: SELECT T3.name  FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id JOIN Highschooler as T3 on T3.ID = T1.student_id WHERE T2.name  =  "Kyle"

eval_err_num:969
medium pred: select count ( * ) from Highschooler where highschooler . name = 1 and highschooler . name = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:970
medium pred: select likes . student_id , highschooler . grade from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID
medium gold: SELECT id, grade FROM highschooler

eval_err_num:971
easy pred: select avg ( highschooler . grade ) from Highschooler
easy gold: SELECT avg(grade) FROM highschooler

eval_err_num:972
extra pred: select avg ( highschooler . grade ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where likes . student_id not in ( select likes . student_id from Likes )
extra gold: SELECT avg(grade) FROM Highschooler WHERE id not IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:973
hard pred: select avg ( highschooler . grade ) from Likes as T1 join Highschooler as T2 on T1.student_id = T2.ID where likes . student_id not in ( select likes . student_id from Likes )
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:974
easy pred: select teacher . * from teacher
easy gold: SELECT * FROM teacher

eval_err_num:975
easy pred: select count ( teacher . * ) from teacher
easy gold: SELECT count(*) FROM teacher

eval_err_num:976
easy pred: select teacher . name from teacher
easy gold: SELECT Name FROM teacher

eval_err_num:977
easy pred: select teacher . name from teacher order by teacher . age
easy gold: SELECT Name FROM teacher ORDER BY Age ASC

eval_err_num:978
easy pred: select teacher . age from teacher
easy gold: SELECT Hometown FROM teacher

eval_err_num:979
medium pred: select teacher . age , teacher . hometown from teacher
medium gold: SELECT Age ,  Hometown FROM teacher

eval_err_num:980
easy pred: select teacher . hometown from teacher
easy gold: SELECT Hometown FROM teacher

eval_err_num:981
easy pred: select teacher . hometown from teacher where teacher . hometown != 1
easy gold: SELECT * FROM teacher WHERE Hometown != "Little Lever Urban Distric"

eval_err_num:982
easy pred: select teacher . name from teacher where teacher . hometown = 1 or teacher . hometown = 1
easy gold: SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban Distric"

eval_err_num:983
easy pred: select teacher . age from teacher
easy gold: SELECT Age FROM teacher

eval_err_num:984
easy pred: select * from teacher where teacher . age = 1
easy gold: SELECT * FROM teacher WHERE Age  =  32

eval_err_num:985
medium pred: select teacher . age from teacher where teacher . age > 1
medium gold: SELECT * FROM teacher WHERE Age  =  32 OR Age  =  33

eval_err_num:986
medium pred: select teacher . name from teacher where teacher . age > 1 and teacher . age < 1
medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33

eval_err_num:987
easy pred: select * from teacher order by teacher . age
easy gold: SELECT * FROM teacher ORDER BY Age

eval_err_num:988
medium pred: select teacher . name from teacher order by teacher . age asc limit 1
medium gold: SELECT * FROM teacher ORDER BY Age ASC LIMIT 1

eval_err_num:989
medium pred: select teacher . hometown from teacher order by teacher . age asc limit 1
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

eval_err_num:990
easy pred: select teacher . hometown from teacher
easy gold: SELECT Hometown FROM teacher

eval_err_num:991
easy pred: select teacher . hometown from teacher order by teacher . hometown
easy gold: SELECT * FROM teacher order BY Hometown

eval_err_num:992
medium pred: select count ( * ) , teacher . hometown from teacher group by teacher . hometown
medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:993
easy pred: select count ( teacher . * ) from teacher
easy gold: SELECT COUNT(*) FROM teacher

eval_err_num:994
easy pred: select teacher . hometown , count ( * ) from teacher group by teacher . hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:995
hard pred: select count ( teacher . hometown ) from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID group by teacher . hometown order by count ( course . * ) desc limit 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:996
easy pred: select count ( teacher . * ) from teacher
easy gold: SELECT COUNT(*) FROM teacher

eval_err_num:997
easy pred: select teacher . hometown , count ( * ) from teacher group by teacher . hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:998
easy pred: select teacher . hometown from teacher group by teacher . hometown having count ( * ) > = 1
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

eval_err_num:999
easy pred: select course_arrange . * from course_arrange
easy gold: SELECT * FROM course_arrange

eval_err_num:1000
medium pred: select course . course , count ( course . * ) from course group by course . course
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:1001
easy pred: select course_arrange . * from course_arrange
easy gold: SELECT * FROM course_arrange

eval_err_num:1002
medium pred: select teacher . name , course . course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:1003
hard pred: select teacher . name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID order by course . course
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

eval_err_num:1004
easy pred: select course_arrange . * from course_arrange
easy gold: SELECT * FROM course_arrange

eval_err_num:1005
medium pred: select teacher . name , course . course from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:1006
hard pred: select teacher . name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID join course as T3 on T2.Course_ID = T3.Course_ID where course . course = 1
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

eval_err_num:1007
easy pred: select teacher . name from teacher
easy gold: SELECT Name FROM teacher

eval_err_num:1008
medium pred: select teacher . name , count ( * ) from teacher group by teacher . name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:1009
easy pred: select teacher . name from teacher
easy gold: SELECT Name FROM teacher

eval_err_num:1010
medium pred: select teacher . name , count ( * ) from teacher group by teacher . name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:1011
medium pred: select teacher . name from teacher as T1 join course_arrange as T2 on T1.Teacher_ID = T2.Teacher_ID group by course_arrange . teacher_id having count ( * ) > = 1
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

eval_err_num:1012
easy pred: select *
easy gold: SELECT * FROM Other_Available_Features

eval_err_num:1013
easy pred: select count ( other_available_features . feature_description ) from Other_Available_Features
easy gold: SELECT count(*) FROM Other_Available_Features

eval_err_num:1014
easy pred: select other_available_features . * from Other_Available_Features where other_available_features . feature_name = 1
easy gold: SELECT * FROM Other_Available_Features WHERE feature_name  =  "AirCon"

eval_err_num:1015
medium pred: select properties . property_type_code from Properties as T1 join Other_Property_Features as T2 on T1.property_id = T2.property_id join Other_Available_Features as T3 on T2.feature_id = T3.feature_id where other_available_features . feature_name = 1
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"

eval_err_num:1016
easy pred: select properties . property_type_code from Properties
easy gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code

eval_err_num:1017
medium pred: select properties . property_type_code , properties . property_type_code from Properties
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

eval_err_num:1018
easy pred: select area_code_state . area_code , area_code_state . state from AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

eval_err_num:1019
easy pred: select count ( area_code_state . area_code ) from AREA_CODE_STATE
easy gold: SELECT count(*) FROM area_code_state

eval_err_num:1020
easy pred: select contestants . * from CONTESTANTS
easy gold: SELECT * FROM contestants

eval_err_num:1021
easy pred: select contestants . contestant_name from CONTESTANTS
easy gold: SELECT  contestant_name FROM contestants

eval_err_num:1022
medium pred: select contestants . contestant_name , votes . phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number
medium gold: SELECT contestant_number ,  contestant_name FROM contestants

eval_err_num:1023
medium pred: select contestants . contestant_name , votes . phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by contestants . contestant_name desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

eval_err_num:1024
easy pred: select votes . * from VOTES
easy gold: SELECT state FROM votes

eval_err_num:1025
medium pred: select votes . vote_id , count ( * ) from VOTES group by votes . vote_id
medium gold: SELECT vote_id,  state FROM votes

eval_err_num:1026
medium pred: select votes_ , votes . phone_number , votes . phone_number from VOTES
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

eval_err_num:1027
easy pred: select area_code_state . area_code from AREA_CODE_STATE
easy gold: SELECT area_code FROM area_code_state

eval_err_num:1028
easy pred: select max ( area_code_state . area_code ) from AREA_CODE_STATE
easy gold: SELECT max(area_code) FROM area_code_state

eval_err_num:1029
easy pred: select min ( area_code_state . area_code ) from AREA_CODE_STATE
easy gold: SELECT min(area_code) FROM area_code_state

eval_err_num:1030
medium pred: select area_code_state . area_code from AREA_CODE_STATE order by area_code_state . area_code desc limit 1
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

eval_err_num:1031
easy pred: select votes . * from VOTES
easy gold: SELECT * FROM votes

eval_err_num:1032
easy pred: select votes . * from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where area_code_state . state = 1
easy gold: SELECT * FROM votes WHERE state  =  'CA'

eval_err_num:1033
easy pred: select votes . created from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where area_code_state . state = 1
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

eval_err_num:1034
easy pred: select contestants . * from CONTESTANTS
easy gold: SELECT * FROM contestants

eval_err_num:1035
easy pred: select contestants . contestant_name from CONTESTANTS
easy gold: SELECT contestant_name FROM contestants

eval_err_num:1036
easy pred: select contestants . contestant_name from CONTESTANTS where contestants . contestant_name like 1
easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'

eval_err_num:1037
easy pred: select votes . * from VOTES
easy gold: SELECT * FROM votes

eval_err_num:1038
easy pred: select votes . state from VOTES group by votes . state
easy gold: SELECT state FROM votes

eval_err_num:1039
medium pred: select area_code_state . state , votes . created from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state
medium gold: SELECT DISTINCT state ,  created FROM votes

eval_err_num:1040
easy pred: select contestants . * from CONTESTANTS
easy gold: SELECT * FROM contestants

eval_err_num:1041
easy pred: select votes . * from VOTES
easy gold: SELECT * FROM votes

eval_err_num:1042
medium pred: select votes . phone_number from VOTES group by votes . contestant_number having votes_ > votes_ ( votes . * ) > = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

eval_err_num:1043
medium pred: select contestants . contestant_name , votes . phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number group by votes . contestant_number having votes_ > votes_ ( * ) > = 1
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

eval_err_num:1044
easy pred: select contestants . * from CONTESTANTS
easy gold: SELECT * FROM contestants

eval_err_num:1045
easy pred: select votes . * from VOTES
easy gold: SELECT * FROM votes

eval_err_num:1046
extra pred: select votes . contestant_number from VOTES order by votes_ asc limit 1
extra gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

eval_err_num:1047
extra pred: select votes . contestant_number , contestants . contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number order by votes_ limit 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

eval_err_num:1048
easy pred: select votes . * from VOTES
easy gold: SELECT * FROM votes

eval_err_num:1049
medium pred: select votes . * from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where area_code_state . state = 1 or area_code_state . state = 1
medium gold: SELECT * FROM votes WHERE state  =  'NY' OR state  =  'CA'

eval_err_num:1050
medium pred: select count ( votes . * ) from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state where area_code_state . area_code = 1 or area_code_state . state = 1
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

eval_err_num:1051
easy pred: select contestants . * from CONTESTANTS
easy gold: SELECT * FROM contestants

eval_err_num:1052
hard pred: select contestants . contestant_name from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where votes . vote_id not in ( select votes . contestant_number from VOTES )
hard gold: SELECT * FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

eval_err_num:1053
extra pred: select count ( contestants . contestant_name ) from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number where votes . vote_id not in ( select votes . contestant_number from VOTES )
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

eval_err_num:1054
easy pred: select area_code_state . area_code , area_code_state . state from AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

eval_err_num:1055
easy pred: select votes . state , votes . state from VOTES
easy gold: SELECT * FROM votes

eval_err_num:1056
medium pred: select votes_ , votes_ , votes_ from AREA_CODE_STATE group by area_code_state . area_code
medium gold: SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code

eval_err_num:1057
extra pred: select area_code_state . area_code from AREA_CODE_STATE as T1 join VOTES as T2 on T1.state = T2.state group by area_code_state . area_code order by count ( votes . * ) desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:1058
easy pred: select votes . * from VOTES
easy gold: SELECT * FROM votes

eval_err_num:1059
medium pred: select * from CONTESTANTS where contestants . contestant_name = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:1060
medium pred: select area_code_state . state , votes . state , votes . phone_number from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number join AREA_CODE_STATE as T3 on T2.state = T3.state where contestants . contestant_name = 1
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:1061
easy pred: select area_code_state . area_code from AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

eval_err_num:1062
hard pred: select area_code_state . area_code from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number join AREA_CODE_STATE as T3 on T2.state = T3.state where contestants . contestant_name = 1
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:1063
extra pred: select area_code_state . area_code from CONTESTANTS as T1 join VOTES as T2 on T1.contestant_number = T2.contestant_number join AREA_CODE_STATE as T3 on T2.state = T3.state where contestants . contestant_name = 1 or contestants . contestant_name = 1
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

eval_err_num:1064
extra pred: select courses . course_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Degree_Programs as T4 on T3.degree_program_id = T4.degree_program_id group by courses . course_name order by sum ( degree_programs . degree_summary_description ) desc limit 1
extra gold: SELECT T2.department_description ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1065
extra pred: select departments . department_name , departments . department_id from Departments as T1 join Degree_Programs as T2 on T1.department_id = T2.department_id group by departments . department_name order by sum ( degree_programs . degree_summary_description ) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1066
medium pred: select * from Departments where departments . department_name = 1
medium gold: SELECT * FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:1067
medium pred: select count ( sections . * ) from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment_Courses as T3 on T2.course_id = T3.course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Degree_Programs as T5 on T4.degree_program_id = T5.degree_program_id join Departments as T6 on T5.department_id = T6.department_id where departments . department_name = 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:1068
medium pred: select sections . * from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id group by courses . course_id having count ( sections . * ) = 1
medium gold: SELECT * FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  =  2

eval_err_num:1069
medium pred: select courses . course_name , sections . course_id from Sections as T1 join Courses as T2 on T1.course_id = T2.course_id group by courses . course_id having count ( * ) < = 1
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

eval_err_num:1070
extra pred: select students . first_name , students . last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by student_enrolment . student_id order by count ( * ) asc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:1071
extra pred: select students . first_name , departments . department_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Degree_Programs as T3 on T1.degree_program_id = T3.degree_program_id join Departments as T4 on T3.department_id = T4.department_id group by student_enrolment . student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1072
medium pred: select departments . department_name from Departments where departments . department_name like 1
medium gold: SELECT * FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:1073
medium pred: select courses . course_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Degree_Programs as T4 on T3.degree_program_id = T4.degree_program_id join Departments as T5 on T4.department_id = T5.department_id where departments . department_name like 1
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:1074
medium pred: select count ( * ) from Courses where courses . course_description = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:1075
medium pred: select courses . course_name , students . last_name , courses . course_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id where courses . course_description = 1
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:1076
hard pred: select count ( * ) from Courses where courses . course_name = 1
hard gold: SELECT DISTINCT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:1077
hard pred: select courses . course_name , students . first_name , students . last_name from Courses as T1 join Student_Enrolment_Courses as T2 on T1.course_id = T2.course_id join Student_Enrolment as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Students as T4 on T3.student_id = T4.student_id where courses . course_name = 1 and courses . course_name = 1
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:1078
extra pred: select courses . course_name from Courses group by courses . course_description order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 3

eval_err_num:1079
extra pred: select courses . course_name from Courses group by courses . course_name order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:1080
extra pred: select courses . course_name from Courses group by courses . course_name order by count ( * ) asc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:1081
extra pred: select courses . course_name from Courses group by courses . course_name order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1082
extra pred: select courses . course_id , courses . course_description from Courses group by courses . course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1083
extra pred: select student_enrolment . semester_id , students . first_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by student_enrolment . student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 3

eval_err_num:1084
extra pred: select transcript_contents . student_course_id , students . first_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Student_Enrolment_Courses as T3 on T1.student_enrolment_id = T3.student_enrolment_id join Transcript_Contents as T4 on T3.student_course_id = T4.student_course_id group by student_enrolment . student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1085
hard pred: select courses . course_name from Courses where courses . course_name = 1
hard gold: SELECT semester_description FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:1086
hard pred: select courses . course_name from Courses where courses . course_name = 1
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:1087
extra pred: select courses . course_name from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id order by student_enrolment . semester_id limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) ASC LIMIT 1

eval_err_num:1088
extra pred: select courses . course_name , count ( * ) from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id group by student_enrolment . semester_id order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:1089
extra pred: select courses . course_name from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Courses as T3 on T2.course_id = T3.course_id order by student_enrolment . semester_id limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:1090
medium pred: select count ( * ) from Addresses where addresses . state_province_county = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina'

eval_err_num:1091
extra pred: select count ( * ) from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where addresses . state_province_county = 1 or students . student_id in ( select student_enrolment . student_id from Student_Enrolment as T5 join Students as T4 on T5.student_id = T4.student_id join Addresses as T5 on T4.permanent_address_id = T5.address_id where addresses . state_province_county = 1 )
extra gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:1092
extra pred: select students . first_name from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id where addresses . city = 1 or students . student_id in ( select student_enrolment . student_id from Student_Enrolment as T5 join Students as T4 on T5.student_id = T4.student_id join Addresses as T5 on T4.permanent_address_id = T5.address_id where addresses . state_province_county = 1 )
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:1093
medium pred: select transcripts . transcript_date , transcript_contents . transcript_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Courses as T4 on T3.course_id = T4.course_id group by courses . course_id
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  = 2

eval_err_num:1094
medium pred: select transcript_contents . transcript_id , transcript_contents . transcript_id from Transcript_Contents group by transcript_contents . student_course_id having count ( * ) > = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

eval_err_num:1095
medium pred: select students . email_address from Students where students . first_name = 1 and students . last_name = 1
medium gold: SELECT current_address_id FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

eval_err_num:1096
medium pred: select students . cell_mobile_number from Students where students . first_name = 1 and students . last_name = 1
medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

eval_err_num:1097
medium pred: select students . first_name , students . last_name , students . last_name from Students
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered DESC LIMIT 1

eval_err_num:1098
medium pred: select students . first_name , students . last_name from Students where students . student_id in ( select student_enrolment . student_id from Student_Enrolment )
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

eval_err_num:1099
medium pred: select students . first_name , students . last_name , students . last_name from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id group by student_enrolment . semester_id order by count ( * ) desc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left DESC LIMIT 1

eval_err_num:1100
medium pred: select students . first_name , students . last_name , students . date_first_registered from Students order by students . date_first_registered asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

eval_err_num:1101
extra pred: select addresses . address_id from Student_Enrolment as T1 join Students as T2 on T1.student_id = T2.student_id join Addresses as T3 on T2.permanent_address_id = T3.address_id join Student_Enrolment_Courses as T4 on T1.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id group by transcript_contents . transcript_id order by count ( student_enrolment . * ) desc limit 1
extra gold: SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1102
extra pred: select count ( student_enrolment . * ) from Student_Enrolment as T1 join Student_Enrolment_Courses as T2 on T1.student_enrolment_id = T2.student_enrolment_id join Transcript_Contents as T3 on T2.student_course_id = T3.student_course_id group by transcript_contents . transcript_id order by count ( student_enrolment . * ) desc limit 1
extra gold: SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1103
extra pred: select addresses . address_id , students . email_address from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id group by transcript_contents . transcript_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1104
medium pred: select sections . * from Sections where sections . section_name = 1
medium gold: SELECT other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:1105
medium pred: select sections . section_name , sections . other_details from Sections where sections . section_description = 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:1106
medium pred: select transcripts . transcript_date from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id order by students . date_left asc limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:1107
medium pred: select transcripts . transcript_date from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id join Student_Enrolment_Courses as T3 on T2.student_course_id = T3.student_course_id join Student_Enrolment as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Students as T5 on T4.student_id = T5.student_id order by students . date_left desc limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:1108
hard pred: select count ( * ) , transcript_contents . student_course_id from Transcript_Contents group by transcript_contents . student_course_id
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:1109
hard pred: select count ( semesters . * ) from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Student_Enrolment_Courses as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Transcript_Contents as T4 on T3.student_course_id = T4.student_course_id group by transcript_contents . student_course_id order by count ( * ) desc limit 1
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1110
extra pred: select addresses . * from Addresses as T1 join Students as T2 on T1.address_id = T2.permanent_address_id join Student_Enrolment as T3 on T2.student_id = T3.student_id join Student_Enrolment_Courses as T4 on T3.student_enrolment_id = T4.student_enrolment_id join Transcript_Contents as T5 on T4.student_course_id = T5.student_course_id group by transcript_contents . transcript_id order by count ( * ) asc limit 1
extra gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:1111
extra pred: select transcripts . transcript_date , transcript_contents . student_course_id from Transcripts as T1 join Transcript_Contents as T2 on T1.transcript_id = T2.transcript_id group by transcript_contents . transcript_id
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:1112
medium pred: select semesters . semester_description from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Students as T3 on T2.student_id = T3.student_id where students . first_name = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'

eval_err_num:1113
medium pred: select semesters . * from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Student_Enrolment_Courses as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Courses as T4 on T3.course_id = T4.course_id where courses . course_name = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:1114
extra pred: select courses . course_name from Semesters as T1 join Student_Enrolment as T2 on T1.semester_id = T2.semester_id join Student_Enrolment_Courses as T3 on T2.student_enrolment_id = T3.student_enrolment_id join Courses as T4 on T3.course_id = T4.course_id where semesters . semester_name = 1 intersect select courses . course_name from Courses where courses . course_name = 1
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:1115
easy pred: select professionals . * from Professionals
easy gold: SELECT * FROM Owners

eval_err_num:1116
easy pred: select professionals . * from Professionals
easy gold: SELECT * FROM Professionals

eval_err_num:1117
easy pred: select treatment_types . treatment_type_code from Treatment_Types
easy gold: SELECT state FROM Professionals

eval_err_num:1118
hard pred: select owners . state from Owners where owners . street = ( select owners . state from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where professionals . role_code = 1 )
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

eval_err_num:1119
easy pred: select dogs . age from Dogs
easy gold: SELECT age FROM Dogs

eval_err_num:1120
medium pred: select max ( dogs . age ) , min ( dogs . age ) from Dogs
medium gold: SELECT max(age), min(age) FROM Dogs

eval_err_num:1121
hard pred: select dogs . weight from Dogs where dogs . age = ( select max ( dogs . age ) from Dogs )
hard gold: SELECT * FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:1122
hard pred: select avg ( dogs . age ) , min ( dogs . age ) from Dogs
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:1123
easy pred: select professionals . * from Professionals
easy gold: SELECT * FROM Professionals WHERE role_code = 'Employee'

eval_err_num:1124
easy pred: select count ( professionals . * ) from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where owners . city = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Connecticut'

eval_err_num:1125
easy pred: select count ( professionals . * ) from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where owners . city = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Indiana'

eval_err_num:1126
medium pred: select professionals . role_code from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Breeds as T3 on T2.breed_code = T3.breed_code join Treatments as T4 on T2.dog_id = T4.dog_id join Professionals as T5 on T4.professional_id = T5.professional_id where owners . city = 1 group by professionals . professional_id having count ( breeds . * ) > = 1
medium gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1

eval_err_num:1127
extra pred: select owners . owner_id , owners . last_name , owners . cell_number from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by professionals . professional_id having count ( * ) > 1
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

eval_err_num:1128
medium pred: select dogs . name , charges . charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:1129
medium pred: select dogs . name , charges . charge_amount from Dogs as T1 join Charges as T2 where charges . charge_amount > 1
medium gold: SELECT name FROM Treatments  AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 500

eval_err_num:1130
hard pred: select dogs . name , charges . charge_amount from Dogs as T1 join Charges as T2 where charges . charge_amount > 1
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

eval_err_num:1131
hard pred: select dogs . name , dogs . name from Dogs where dogs . name = 1
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

eval_err_num:1132
easy pred: select dogs . name from Dogs where dogs . name = 1
easy gold: SELECT name FROM Dogs

eval_err_num:1133
hard pred: select dogs . name from Dogs where dogs . name not in ( select dogs . name from Dogs )
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:1134
medium pred: select dogs . name , treatment_types . treatment_type_code from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Treatment_Types as T3 on T2.treatment_type_code = T3.treatment_type_code
medium gold: SELECT T1.first_name, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:1135
medium pred: select owners . first_name , owners . last_name , treatment_types . treatment_type_code , treatment_types . treatment_type_code from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Treatment_Types as T4 on T3.treatment_type_code = T4.treatment_type_code
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.email_address, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:1136
extra pred: select owners . owner_id , owners . first_name , owners . last_name , professionals . email_address from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where treatments . treatment_id in ( select treatments . treatment_id from Treatments as T5 join Treatment_Types as T6 on T5.treatment_type_code = T6.treatment_type_code where treatment_types . treatment_type_code = 1 )
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:1137
medium pred: select count ( dogs . dog_id ) , owners . owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by owners . owner_id
medium gold: SELECT T1.owner_id ,count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id

eval_err_num:1138
medium pred: select owners . owner_id from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id group by owners . owner_id having count ( dogs . dog_id ) = 1
medium gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name, count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id Having count(*) = 2

eval_err_num:1139
extra pred: select owners . owner_id from Owners group by owners . owner_id order by count ( * ) desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1140
medium pred: select count ( dogs . * ) from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Professionals as T3 on T2.professional_id = T3.professional_id group by professionals . professional_id
medium gold: SELECT T1.professional_id , count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:1141
medium pred: select owners . first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by professionals . professional_id having count ( * ) = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) = 1

eval_err_num:1142
medium pred: select owners . first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by professionals . professional_id having count ( dogs . owner_id ) > = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) >= 2

eval_err_num:1143
medium pred: select treatments . professional_id , owners . first_name , owners . last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id group by professionals . professional_id having count ( dogs . owner_id ) > = 1
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:1144
medium pred: select count ( dogs . * ) , dogs . breed_code from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Treatment_Types as T3 on T2.treatment_type_code = T3.treatment_type_code group by treatment_types . treatment_type_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

eval_err_num:1145
medium pred: select professionals . zip_code from Treatments as T1 join Professionals as T2 on T1.professional_id = T2.professional_id group by professionals . zip_code order by count ( treatments . * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 2

eval_err_num:1146
medium pred: select professionals . zip_code from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Professionals as T3 on T2.professional_id = T3.professional_id group by professionals . zip_code order by count ( dogs . * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 1

eval_err_num:1147
extra pred: select dogs . name from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code group by dogs . breed_code order by count ( breeds . * ) desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:1148
medium pred: select dogs . name , charges . charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:1149
hard pred: select owners . first_name , dogs_ , dogs . weight from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id
hard gold: SELECT T1.owner_id, T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id

eval_err_num:1150
extra pred: select owners . first_name , dogs_ from Owners group by owners . owner_id order by count ( * ) desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:1151
easy pred: select treatment_types . treatment_type_code , dogs . weight from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Treatment_Types as T3 on T2.treatment_type_code = T3.treatment_type_code
easy gold: SELECT * FROM Treatment_Types

eval_err_num:1152
extra pred: select treatment_types . treatment_type_code , dogs . name , charges . charge_amount from Dogs as T1 join Charges as T2 join Treatments as T3 on T1.dog_id = T3.dog_id join Treatment_Types as T4 on T3.treatment_type_code = T4.treatment_type_code order by charges . charge_amount desc
extra gold: SELECT treatment_type_code, sum(cost_of_treatment) FROM Treatments group by treatment_type_code order by sum(cost_of_treatment) desc

eval_err_num:1153
extra pred: select treatment_types . treatment_type_code , dogs . weight , charges . charge_amount from Dogs as T1 join Charges as T2 join Treatments as T3 on T1.dog_id = T3.dog_id join Treatment_Types as T4 on T3.treatment_type_code = T4.treatment_type_code order by charges . charge_amount desc limit 1
extra gold: SELECT T2.treatment_type_code, T1.treatment_type_description,  sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:1154
extra pred: select treatment_types . treatment_type_description from Charges as T1 join Treatment_Types as T2 group by treatment_types . treatment_type_code order by sum ( charges . charge_amount ) desc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:1155
medium pred: select dogs . name , charges . charge_amount from Dogs as T1 join Charges as T2
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:1156
medium pred: select dogs . name , charges . charge_amount from Dogs as T1 join Charges as T2 where charges . charge_amount = 1
medium gold: SELECT count(name) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 700

eval_err_num:1157
hard pred: select owners . owner_id , professionals . zip_code from Owners as T1 join Charges as T2 join Dogs as T3 on T1.owner_id = T3.owner_id join Treatments as T4 on T3.dog_id = T4.dog_id join Professionals as T5 on T4.professional_id = T5.professional_id where charges . charge_amount > 1 group by owners . owner_id order by count ( * ) desc limit 1
hard gold: SELECT T1.owner_id ,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id Having sum(T3.cost_of_treatment) > 400

eval_err_num:1158
extra pred: select owners . owner_id , professionals . zip_code from Owners as T1 join Charges as T2 join Dogs as T3 on T1.owner_id = T3.owner_id join Treatments as T4 on T3.dog_id = T4.dog_id join Professionals as T5 on T4.professional_id = T5.professional_id where charges . charge_amount > 1 order by charges . charge_amount desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

eval_err_num:1159
medium pred: select dogs . name , dogs . weight from Dogs
medium gold: SELECT T1.first_name, T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:1160
medium pred: select dogs . name , dogs . weight , count ( * ) from Dogs group by dogs . name
medium gold: SELECT T1.first_name, T2.treatment_type_code, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:1161
medium pred: select professionals . professional_id , dogs . weight from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Professionals as T3 on T2.professional_id = T3.professional_id group by professionals . professional_id having count ( * ) = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  = 1

eval_err_num:1162
medium pred: select owners . first_name , dogs_ , owners . cell_number from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id group by treatments . professional_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:1163
medium pred: select min ( charges . charge_amount ) , avg ( charges . charge_amount ) from Charges
medium gold: SELECT min(cost_of_treatment), max(cost_of_treatment), avg(cost_of_treatment) FROM Treatments

eval_err_num:1164
extra pred: select min ( charges . charge_amount ) , owners . first_name , owners . last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Charges as T4 group by treatments . dog_id having avg ( charges . charge_amount ) < 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT min(cost_of_treatment) FROM Treatments )

eval_err_num:1165
extra pred: select max ( charges . charge_amount ) , min ( charges . charge_amount ) from Charges
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT max(cost_of_treatment) FROM Treatments )

eval_err_num:1166
extra pred: select avg ( charges . charge_amount ) , min ( charges . charge_amount ) from Charges
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

eval_err_num:1167
medium pred: select count ( dogs . * ) , dogs . breed_code from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Treatment_Types as T3 on T2.treatment_type_code = T3.treatment_type_code group by treatment_types . treatment_type_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

eval_err_num:1168
hard pred: select treatment_types . treatment_type_code from Dogs as T1 join Treatments as T2 on T1.dog_id = T2.dog_id join Treatment_Types as T3 on T2.treatment_type_code = T3.treatment_type_code group by treatment_types . treatment_type_code order by count ( dogs . * ) desc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) DESC LIMIT 1

eval_err_num:1169
hard pred: select dogs . breed_code from Dogs group by dogs . breed_code order by count ( dogs . * ) asc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) ASC LIMIT 1

eval_err_num:1170
extra pred: select treatments . treatment_type_code from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id group by dogs . breed_code order by count ( breeds . * ) limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:1171
medium pred: select dogs . name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where owners . city = 1
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

eval_err_num:1172
medium pred: select dogs . name , dogs . name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where owners . city = 1
medium gold: SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

eval_err_num:1173
medium pred: select dogs_ from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where owners . city = 1 and dogs . gender = 1
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

eval_err_num:1174
medium pred: select dogs . * from Dogs order by dogs . age desc limit 1
medium gold: SELECT * FROM Dogs order by age asc limit 1

eval_err_num:1175
extra pred: select dogs . name from Dogs order by dogs . age desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

eval_err_num:1176
extra pred: select owners . first_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id order by dogs . age asc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT min(age) FROM Dogs )

eval_err_num:1177
medium pred: select owners . city , professionals . role_code from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id
medium gold: SELECT city, state FROM professionals

eval_err_num:1178
easy pred: select count ( breeds . * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where dogs . gender = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Hawaii'

eval_err_num:1179
medium pred: select breeds . * from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where dogs . gender = 1 or dogs . gender = 1
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

eval_err_num:1180
easy pred: select professionals . role_code from Professionals
easy gold: SELECT state FROM professionals

eval_err_num:1181
easy pred: select count ( breeds . * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where dogs . gender = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Wisconsin'

eval_err_num:1182
medium pred: select professionals . role_code , count ( breeds . * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where dogs . gender = 1 group by professionals . zip_code
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE state = 'Wisconsin'

eval_err_num:1183
medium pred: select professionals . role_code from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Professionals as T4 on T3.professional_id = T4.professional_id where owners . city like 1 union select professionals . role_code from Owners as T5 join Dogs as T6 on T5.owner_id = T6.owner_id join Treatments as T7 on T6.dog_id = T7.dog_id join Professionals as T8 on T7.professional_id = T8.professional_id where owners . city like 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

eval_err_num:1184
easy pred: select owners . state from Owners
easy gold: SELECT state FROM Owners

eval_err_num:1185
easy pred: select count ( breeds . * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code where dogs . gender = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Vermont'

eval_err_num:1186
medium pred: select owners . first_name , owners . last_name from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id where dogs . gender like 1
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

eval_err_num:1187
easy pred: select dogs . * from Dogs order by dogs . age desc
easy gold: SELECT age FROM Dogs ORDER BY age

eval_err_num:1188
easy pred: select count ( dogs . * ) from Dogs where dogs . age < 1
easy gold: SELECT count(*) FROM Dogs WHERE age  < 4

eval_err_num:1189
hard pred: select count ( dogs . * ) from Dogs where dogs . age < ( select avg ( dogs . age ) from Dogs )
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

eval_err_num:1190
easy pred: select dogs . * from Dogs
easy gold: SELECT * FROM Treatments

eval_err_num:1191
easy pred: select dogs . * from Dogs order by dogs_ asc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment ASC

eval_err_num:1192
easy pred: select dogs . * from Dogs as T1 join Charges as T2 order by charges . charge_amount desc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment DESC

eval_err_num:1193
medium pred: select dogs . * from Dogs as T1 join Charges as T2 order by charges . charge_amount desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

eval_err_num:1194
easy pred: select professionals . * from Professionals
easy gold: SELECT * FROM Owners

eval_err_num:1195
easy pred: select dogs . * from Dogs
easy gold: SELECT count(*) FROM Dogs

eval_err_num:1196
hard pred: select count ( * ) from Owners where owners . owner_id not in ( select treatments . treatment_id from Treatments )
hard gold: SELECT count(*) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:1197
extra pred: select owners . owner_id from Owners except select owners . email_address from Owners as T1 join Dogs as T2 on T1.owner_id = T2.owner_id join Treatments as T3 on T2.dog_id = T3.dog_id join Treatment_Types as T4 on T3.treatment_type_code = T4.treatment_type_code where treatment_types . treatment_type_code = 1
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

eval_err_num:1198
easy pred: select professionals . * from Professionals
easy gold: SELECT * FROM Owners

eval_err_num:1199
easy pred: select count ( breeds . * ) from Breeds as T1 join Dogs as T2 on T1.breed_code = T2.breed_code join Owners as T3 on T2.owner_id = T3.owner_id where owners . state = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Arizona'

eval_err_num:1200
extra pred: select count ( owners . * ) from Owners where owners . state != 1
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

                     easy                 medium               hard                 extra                all                  joint_all           
count                481                  441                  145                  133                  1200                 421                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.000                0.000                0.000                0.000                0.000                0.000               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.000                0.000                0.000                0.000                0.000                0.000               
select(no AGG)       0.000                0.000                0.000                0.000                0.000                0.000               
where                0.000                0.000                0.000                0.000                0.000                0.000               
where(no OP)         0.000                0.000                0.000                0.000                0.000                0.000               
group(no Having)     0.000                0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.000                0.000                0.000                0.000                0.000               
and/or               1.000                0.912                0.910                0.880                0.943                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.000                0.000                0.000                0.000                0.000                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.000                0.000                0.000                0.000                0.000                0.000               
select(no AGG)       0.000                0.000                0.000                0.000                0.000                0.000               
where                0.000                0.000                0.000                0.000                0.000                0.000               
where(no OP)         0.000                0.000                0.000                0.000                0.000                0.000               
group(no Having)     0.000                0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.000                0.000                0.000                0.000                0.000               
and/or               1.000                1.000                1.000                1.000                1.000                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.000                0.000                0.000                0.000                0.000                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               1.000                1.000                1.000                1.000                1.000                1.000               
select(no AGG)       1.000                1.000                1.000                1.000                1.000                1.000               
where                1.000                1.000                1.000                1.000                1.000                1.000               
where(no OP)         1.000                1.000                1.000                1.000                1.000                1.000               
group(no Having)     1.000                1.000                1.000                1.000                1.000                1.000               
group                1.000                1.000                1.000                1.000                1.000                1.000               
order                1.000                1.000                1.000                1.000                1.000                1.000               
and/or               1.000                0.954                0.953                0.936                0.971                1.000               
IUEN                 1.000                1.000                1.000                1.000                1.000                1.000               
keywords             1.000                1.000                1.000                1.000                1.000                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                421                  421                  269                  88                   1                   

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.000                0.000                0.000                0.000                0.000               
