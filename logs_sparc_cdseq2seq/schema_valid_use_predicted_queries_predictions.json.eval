eval_err_num:1
easy pred: select distinct airlines from airlines
easy gold: SELECT * FROM AIRLINES

easy pred: select distinct abbreviation from airlines where abbreviation = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

easy pred: select country from airlines where abbreviation = 1
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:2
easy pred: select abbreviation from flights
easy gold: SELECT Abbreviation FROM AIRLINES

eval_err_num:3
easy pred: select abbreviation from flights where abbreviation = 1
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

medium pred: select distinct abbreviation , abbreviation from airlines
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES

eval_err_num:4
medium pred: select t1 . airportcode , t1 . airportname from airports as t1 join airports as t2 on t1 . airportcode = t2 . airportcode where t2 . city = 1
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

eval_err_num:5
easy pred: select distinct airlines from airlines
easy gold: SELECT * FROM AIRLINES

easy pred: select distinct airline from airlines where abbreviation like 1
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

medium pred: select city , countryabbrev from airports
medium gold: SELECT City ,  Country FROM AIRPORTS

medium pred: select city , countryabbrev from airports where countryabbrev = 1
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

eval_err_num:6
easy pred: select airportname from airports where abbreviation = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

eval_err_num:7
easy pred: select abbreviation from airports where abbreviation = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

eval_err_num:8
easy pred: select * from flights where country = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "APG"

easy pred: select count ( * ) from flights where flightno like 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:9
easy pred: select destairport from flights where abbreviation = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:10
easy pred: select count ( * ) from flights where abbreviation = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:11
medium pred: select * from flights where abbreviation = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:12
medium pred: select count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t1 . abbreviation = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:13
medium pred: select * from flights where city = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:14
medium pred: select count ( * ) from flights as t1 join flights as t2 on t1 . destairport = t2 . airportcode where t1 . abbreviation = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:15
medium pred: select * from flights where city = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:16
hard pred: select * from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1 and t2 . abbreviation = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:17
hard pred: select count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1 and t2 . abbreviation = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:18
medium pred: select * from flights where uid in ( select uid from flights )
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:19
medium pred: select count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . uid
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:20
easy pred: select distinct destairport from flights where abbreviation = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:21
easy pred: select count ( * ) from airlines where uid in ( select uid from flights where abbreviation = 1 )
easy gold: SELECT count(*) FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:22
medium pred: select count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t1 . abbreviation = 1 where t1 . abbreviation = 1 group by t1 . uid where t1 . abbreviation = 1 where t1 . abbreviation = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

eval_err_num:23
easy pred: select distinct destairport from flights where abbreviation = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:24
medium pred: select abbreviation from flights where uid in ( select uid from flights where abbreviation = 1 )
medium gold: SELECT * FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

eval_err_num:25
medium pred: select count ( * ) from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

eval_err_num:26
hard pred: select * from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

eval_err_num:27
hard pred: select count ( * ) from airlines as t1 join flights as t2 on t1 . uid = t2 . uid join flights as t3 on t2 . airlines = t3 . airlines where t3 . abbreviation = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

easy pred: select city from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:28
hard pred: select t1 . city from airports as t1 join flights as t2 on t1 . destairport = t2 . destairport group by t1 . city order by count ( * )
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select city from airports group by city order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

eval_err_num:29
easy pred: select city from airports where abbreviation = 1
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport

eval_err_num:30
hard pred: select t1 . city from airports as t1 join flights as t2 on t1 . uid = t2 . sourceairport group by t1 . city order by count ( * )
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC

eval_err_num:31
extra pred: select t1 . city from airports as t1 join flights as t2 on t1 . uid = t2 . sourceairport group by t1 . city order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

easy pred: select distinct airportcode from airports
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:32
easy pred: select t1 . airportcode , t1 . airportcode from airports as t1 join flights as t2 on t1 . uid = t2 . airportcode group by t1 . uid
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

eval_err_num:33
extra pred: select t1 . airportcode , count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . airportcode group by t1 . uid order by count ( * ) desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

easy pred: select distinct airportcode from airports
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:34
easy pred: select t1 . airportcode , t1 . airportcode from airports as t1 join flights as t2 on t1 . uid = t2 . airportcode group by t1 . uid
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

eval_err_num:35
extra pred: select t1 . airportcode from airports as t1 join flights as t2 on t1 . uid = t2 . airportcode group by t1 . uid order by count ( * ) asc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

eval_err_num:36
medium pred: select count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . uid group by t1 . uid
medium gold: SELECT count(*) ,  T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline

eval_err_num:37
extra pred: select * from airlines as t1 join flights as t2 on t1 . uid = t2 . uid group by t1 . uid order by count ( * ) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

eval_err_num:38
hard pred: select distinct abbreviation , country from airlines order by flightno
hard gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*)

extra pred: select abbreviation , country from airlines group by abbreviation order by count ( * ) asc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

easy pred: select * from flights where flightno = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "AHD"

eval_err_num:39
medium pred: select distinct t1 . airline from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

easy pred: select distinct destairport from flights
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "AHD"

eval_err_num:40
medium pred: select distinct t1 . flightno from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

eval_err_num:41
medium pred: select distinct distinct distinct distinct distinct distinct distinct distinct distinct distinct distinct distinct distinct t1 . uid from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

eval_err_num:42
extra pred: select distinct t1 . airline from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1 and t2 . flightno = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:43
medium pred: select distinct distinct distinct distinct distinct distinct distinct distinct distinct distinct t1 . airline from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . countryabbrev = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:44
extra pred: select distinct distinct t1 . airline from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1 except select distinct t1 . airline from airlines as t1 join flights as t2 on t1 . uid = t2 . uid where t2 . abbreviation = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

eval_err_num:45
easy pred: select distinct airlines from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

eval_err_num:46
medium pred: select distinct t1 . airline from airlines as t1 join flights as t2 on t1 . uid = t2 . uid group by t1 . uid having count ( * ) > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

eval_err_num:47
easy pred: select distinct airlines from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

eval_err_num:48
medium pred: select distinct abbreviation from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t1 . abbreviation in ( select distinct abbreviation from flights as t1 join flights as t2 on t1 . uid = t2 . uid group by t1 . uid having count ( * ) < 1 )
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

eval_err_num:49
medium pred: select flightno from flights where abbreviation = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

eval_err_num:50
easy pred: select flightno from flights where airportcode = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:51
easy pred: select flightno , flightno from flights where abbreviation = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

easy pred: select flightno from flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode

medium pred: select flightno from flights where flightno = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

easy pred: select flightno from flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode

eval_err_num:52
medium pred: select flightno from flights where abbreviation = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:53
medium pred: select destairport from flights where city = 1
medium gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen"

eval_err_num:54
hard pred: select abbreviation from flights where city = 1 or city = 1
hard gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

eval_err_num:55
hard pred: select count ( * ) from flights as t1 join flights as t2 on t1 . airportcode = t2 . airportcode where t2 . abbreviation = 1 or t2 . abbreviation = 1
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

easy pred: select * from airports
easy gold: SELECT SourceAirport FROM Flights

eval_err_num:56
hard pred: select abbreviation , destairport from airports
hard gold: SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights

eval_err_num:57
hard pred: select abbreviation from airports where abbreviation not in ( select sourceairport from airports )
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

eval_err_num:58
easy pred: select * from pets order by age
easy gold: SELECT * FROM pets ORDER BY pet_age

eval_err_num:59
easy pred: select weight from pets order by age
easy gold: SELECT weight FROM pets ORDER BY pet_age

eval_err_num:60
medium pred: select weight from pets order by age desc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

medium pred: select pettype from pets group by pettype
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

eval_err_num:61
medium pred: select * from pets where age > 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:62
medium pred: select count ( * ) from pets where age > 1
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:63
medium pred: select * from student where sex = 1 and stuid in ( select stuid from pets where sex = 1 )
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'

eval_err_num:64
hard pred: select count ( * ) from student where sex = 1 and age = ( select min ( pets ) from student where sex = 1 )
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

eval_err_num:65
hard pred: select t1 . fname from student as t1 join pets as t2 on t1 . stuid = t2 . stuid where t2 . pets = 1
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:66
extra pred: select fname , lname from student where stuid in ( select stuid from pets where pets = 1 )
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

hard pred: select * from pets where pettype = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: select * from pets where pettype = 1
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:67
extra pred: select fname from student where pettype = 1
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:68
hard pred: select * from pets where petid in ( select stuid from pets )
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:69
hard pred: select * from pets where major = 1
hard gold: SELECT major FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

extra pred: select age , city_code from student where sex = 1
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:70
easy pred: select stuid from pets group by stuid
easy gold: SELECT stuid FROM student

eval_err_num:71
hard pred: select stuid from pets group by stuid having count ( * ) = 1
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:72
hard pred: select stuid from pets where stuid in ( select petid from pets )
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:73
hard pred: select * from student where petid in ( select stuid from pets )
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:74
extra pred: select * from student where stuid not in ( select stuid from pets )
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:75
extra pred: select fname , age from student where stuid not in ( select stuid from pets )
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:76
medium pred: select * from pets order by age asc limit 1
medium gold: SELECT * FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:77
medium pred: select * from pets order by age asc limit 1
medium gold: SELECT pettype FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:78
medium pred: select t2 . weight , t1 . pets from pets as t1 join pets as t2 on t1 . stuid = t2 . stuid order by t2 . age limit 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

easy pred: select petid from pets group by petid
easy gold: SELECT petid FROM pets

eval_err_num:79
easy pred: select stuid from pets group by petid having min ( pets ) > 1
easy gold: SELECT petid FROM pets WHERE pet_age  >  1

eval_err_num:80
medium pred: select petid , weight from pets where age > 1
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

medium pred: select pettype from pets group by pettype
medium gold: SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype

eval_err_num:81
medium pred: select avg ( age ) from pets group by pettype
medium gold: SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: select pettype from pets group by pettype
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

eval_err_num:82
easy pred: select * from pets where pets = 1
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: select distinct fname from student
easy gold: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: select fname , lname , age from student
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:83
easy pred: select * from pets where pets = 1
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:84
medium pred: select * from student where lname = 1 and pets = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:85
medium pred: select petid from student where stuid in ( select stuid from pets where pets = 1 )
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:86
easy pred: select * from pets where pets = 1
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:87
medium pred: select count ( * ) from pets as t1 join pets as t2 on t1 . stuid = t2 . stuid
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

eval_err_num:88
medium pred: select t1 . fname , t1 . sex from student as t1 join pets as t2 on t1 . stuid = t2 . stuid group by t1 . stuid having count ( * ) > 1
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

eval_err_num:89
medium pred: select stuid from pets where age = 1
medium gold: SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'

eval_err_num:90
hard pred: select * from pets where age = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:91
hard pred: select lname from pets where age = 1
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:92
hard pred: select * from student where stuid not in ( select stuid from pets )
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

eval_err_num:93
extra pred: select avg ( age ) from student where stuid not in ( select stuid from pets )
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

eval_err_num:94
easy pred: select name from continent where gnp > 1
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

eval_err_num:95
easy pred: select country , count ( * ) from continent group by code
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:96
easy pred: select country from region where region = 1
easy gold: SELECT * FROM country WHERE Region  =  "Caribbean"

eval_err_num:97
easy pred: select country from region where region = 1
easy gold: SELECT SurfaceArea FROM country WHERE Region  =  "Caribbean"

eval_err_num:98
easy pred: select sum ( t1 . surfacearea ) , t1 . country from continent as t1 join region as t2 on t1 . id = t2 . region where t1 . region = 1 group by t1 . region
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

eval_err_num:99
easy pred: select country from continent
easy gold: SELECT Continent FROM country

eval_err_num:100
easy pred: select distinct country from continent where id in ( select id from continent )
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

eval_err_num:101
easy pred: select region from region
easy gold: SELECT Region FROM country

eval_err_num:102
medium pred: select name from region where city = 1
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

eval_err_num:103
easy pred: select language from language
easy gold: SELECT LANGUAGE FROM countrylanguage

eval_err_num:104
medium pred: select language from language where language = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:105
extra pred: select language from language where language = 1 group by language order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

eval_err_num:106
medium pred: select population from lifeexpectancy
medium gold: SELECT Population ,  LifeExpectancy FROM country

eval_err_num:107
medium pred: select population from continent where country = 1
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

eval_err_num:108
easy pred: select city from region where country = 1
easy gold: SELECT Region FROM country WHERE Name  =  "Angola"

eval_err_num:109
easy pred: select population from region code2 1
easy gold: SELECT Population FROM country WHERE Name  =  "Angola"

eval_err_num:110
easy pred: select population from lifeexpectancy
easy gold: SELECT LifeExpectancy FROM country

eval_err_num:111
easy pred: select population from continent where country = 1
easy gold: SELECT LifeExpectancy FROM country WHERE Region  =  "Central Africa"

eval_err_num:112
easy pred: select avg ( population ) from continent where country = 1
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

eval_err_num:113
easy pred: select name from continent where country = 1
easy gold: SELECT Name FROM country WHERE Continent  =  "Asia"

eval_err_num:114
hard pred: select name from country where country = 1 order by population limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

eval_err_num:115
easy pred: select count ( * ) from continent as t1 join continent as t2 on t1 . id = t2 . population where t1 . country = 1
easy gold: SELECT sum(Population) FROM country WHERE Continent  =  "Asia"

eval_err_num:116
easy pred: select percentage from continent order by percentage desc limit 1
easy gold: SELECT max(GNP) FROM country WHERE Continent  =  "Asia"

eval_err_num:117
easy pred: select country from country where country = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Africa"

eval_err_num:118
medium pred: select country , country from country where country = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:119
medium pred: select avg ( population ) from country where country = 1
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:120
medium pred: select country from continent where country = 1 or country = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:121
medium pred: select country from continent where country = 1 or country = 1
medium gold: SELECT SurfaceArea FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:122
medium pred: select sum ( t2 . surfacearea ) , t1 . country from country as t1 join continent as t2 on t1 . id = t2 . country where t1 . country = 1 or t2 . country = 1
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:123
easy pred: select population from district code2 1
easy gold: SELECT Population FROM city WHERE District  =  "Gelderland"

eval_err_num:124
easy pred: select sum ( population ) from district
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

eval_err_num:125
easy pred: select country from continent
easy gold: SELECT * FROM country

eval_err_num:126
easy pred: select country from district where country = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:127
medium pred: select population , population from district where country = 1
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:128
easy pred: select distinct language from continent
easy gold: SELECT DISTINCT LANGUAGE FROM countrylanguage

eval_err_num:129
easy pred: select count ( distinct language ) from continent
easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage

eval_err_num:130
easy pred: select distinct t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population where t1 . country = 1
easy gold: SELECT DISTINCT GovernmentForm FROM country WHERE Continent  =  "Africa"

eval_err_num:131
easy pred: select count ( distinct t1 . language ) from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . population code2 code2 select t1 . language from continent as
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

eval_err_num:132
easy pred: select * from country where country = 1
easy gold: SELECT * FROM country WHERE Name  =  "Aruba"

eval_err_num:133
medium pred: select language from country where country = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:134
medium pred: select count ( * ) from continent as t1 join country as t2 on t1 . id = t2 . country where t2 . code = 1
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:135
medium pred: select language from continent where country = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan"

eval_err_num:136
medium pred: select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . language where t2 . country = 1
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

eval_err_num:137
medium pred: select count ( * ) , country from continent group by country
medium gold: SELECT count(*) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name

eval_err_num:138
extra pred: select country from continent group by country order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:139
medium pred: select count ( * ) from continent as t1 join language as t2 on t1 . id = t2 . population group by language
medium gold: SELECT COUNT(*) ,  T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent

eval_err_num:140
extra pred: select language from continent group by language order by count ( * ) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:141
medium pred: select country from lifeexpectancy where language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:142
extra pred: select country from continent where language = 1 intersect select country from continent where language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch"

eval_err_num:143
easy pred: select count ( * ) from continent where language = 1 or language = 1
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

eval_err_num:144
medium pred: select name from continent where language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:145
extra pred: select country from continent where language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

eval_err_num:146
medium pred: select country from country
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

eval_err_num:147
medium pred: select t1 . language from country as t1 join continent as t2 on t1 . id = t2 . country where t2 . language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T"

eval_err_num:148
extra pred: select t1 . country from country as t1 join continent as t2 on t1 . id = t2 . country where t2 . language = 1 code2 select t1 . country , t1 . language from country as t1 join continent as t2 on t1 . id = t2 . country where t2 . language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

eval_err_num:149
medium pred: select name from language where country = 1
medium gold: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:150
medium pred: select distinct country from language where country = 1
medium gold: SELECT DISTINCT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:151
medium pred: select count ( distinct country ) from language where country = 1
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:152
easy pred: select distinct region from region
easy gold: SELECT DISTINCT Region FROM country

eval_err_num:153
hard pred: select id from region where language = 1 or language = 1
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

eval_err_num:154
medium pred: select country from country
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE IsOfficial  =  "T"

eval_err_num:155
extra pred: select country from country where language = 1 or language = 1
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

eval_err_num:156
medium pred: select distinct language from continent where country = 1
medium gold: SELECT DISTINCT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia"

eval_err_num:157
extra pred: select language from continent where country = 1 group by language order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

eval_err_num:158
easy pred: select country from continent where population = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:159
hard pred: select language from continent group by language having count ( * ) = 1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

eval_err_num:160
medium pred: select name from city where language = 1
medium gold: SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:161
extra pred: select name from city where language = 1 order by population desc limit 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

eval_err_num:162
medium pred: select name , population from continent where country = 1
medium gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia"

eval_err_num:163
hard pred: select name from continent where country = 1 code2 code2 select name , population from continent order by surfacearea desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:164
medium pred: select country from country
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

eval_err_num:165
hard pred: select country from country where language ! = 1
hard gold: SELECT * FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:166
extra pred: select country , avg ( population ) from country where language ! = 1
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:167
hard pred: select name from country where language ! = 1
hard gold: SELECT Name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

extra pred: select count ( * ) from country where population ! = 1
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

eval_err_num:168
medium pred: select country from continent where name = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

eval_err_num:169
medium pred: select t1 . language from country as t1 join continent as t2 on t1 . id = t2 . country where t2 . seq = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

eval_err_num:170
medium pred: select t1 . language from continent as t1 join continent as t2 on t1 . id = t2 . country where t2 . seq = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

eval_err_num:171
easy pred: select country from continent where gnpold > 1
easy gold: SELECT T1.Name FROM country AS t1 WHERE  IndepYear  <  1930

eval_err_num:172
medium pred: select count ( distinct isofficial ) from continent where gnp > 1
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

easy pred: select * from country
easy gold: SELECT * FROM country WHERE Continent  =  "Europe"

eval_err_num:173
easy pred: select * from country where country = 1
easy gold: SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe"

eval_err_num:174
hard pred: select country from country where surfacearea > ( select min ( surfacearea ) from country code2 code2 code2 code2 code2 ) code2
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

eval_err_num:175
easy pred: select population from country where country = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Asia"

eval_err_num:176
extra pred: select country from country where population < 1 intersect select country from continent where country = 1
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

eval_err_num:177
easy pred: select population from country where country = 1 order by population asc limit 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Africa"

eval_err_num:178
extra pred: select country from country where population > 1 order by population asc limit 1
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

eval_err_num:179
easy pred: select country from country
easy gold: SELECT CountryCode FROM countrylanguage

eval_err_num:180
hard pred: select code from country where language ! = 1
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:181
easy pred: select country from country
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage

eval_err_num:182
easy pred: select code from country where language ! = 1
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE ! =  "English"

eval_err_num:183
easy pred: select country from country except select country from country
easy gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic"

eval_err_num:184
hard pred: select country from country where language = 1 except select country from continent where language = 1
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:185
medium pred: select name from continent where language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English'

eval_err_num:186
extra pred: select name from continent where population ! = 1
extra gold: SELECT Name FROM country WHERE Continent  =  'Europe' AND Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English')

eval_err_num:187
extra pred: select name from city where id not in ( select id from continent )
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

eval_err_num:188
medium pred: select name from continent where country = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:189
medium pred: select country from continent where country = 1 code2 code2 select name from continent where country = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:190
hard pred: select distinct city from continent where country = 1 code2 1
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:191
medium pred: select country from country order by population asc limit 1
medium gold: SELECT * FROM country ORDER BY Population LIMIT 1

medium pred: select name , gnp , surfacearea from country order by population asc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

eval_err_num:192
medium pred: select country from continent order by surfacearea desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:193
medium pred: select population , gnp from district order by surfacearea desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

medium pred: select name from country where population > 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:194
medium pred: select t1 . name , count ( * ) from country as t1 join continent as t2 on t1 . id = t2 . country group by t1 . country having count ( * ) > = 1
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

extra pred: select count ( * ) , district from city where population > ( select avg ( population ) from city )
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

eval_err_num:195
easy pred: select country from continent where population > 1
easy gold: SELECT * FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:196
medium pred: select sum ( population ) , code2 from continent where population > 1
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:197
easy pred: select distinct population from lifeexpectancy where population < 1
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:198
medium pred: select avg ( population ) , avg ( population ) from lifeexpectancy code2
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:199
medium pred: select country from continent order by surfacearea desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:200
medium pred: select t1 . name , t1 . surfacearea , t1 . country from region as t1 join continent as t2 on t1 . id = t2 . id join region as t3 on t2 . id = t3 . id where t3 . surfacearea = ( select max ( surfacearea ) from continent )
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:201
easy pred: select country from continent order by population desc
easy gold: SELECT * FROM country ORDER BY Population DESC

eval_err_num:202
medium pred: select country from continent order by population desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

eval_err_num:203
easy pred: select population from district order by population
easy gold: SELECT * FROM country ORDER BY Population

medium pred: select name from country order by population asc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

eval_err_num:204
easy pred: select country from continent where country = 1
easy gold: SELECT * FROM country WHERE continent  =  "Asia"

eval_err_num:205
easy pred: select count ( population ) from continent where country = 1
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

eval_err_num:206
easy pred: select country from country where country = 1
easy gold: SELECT * FROM country WHERE continent  =  "Europe"

eval_err_num:207
medium pred: select name from continent where population > 1 code2 code2 1
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

eval_err_num:208
easy pred: select country from continent where country = 1
easy gold: SELECT * FROM country WHERE Continent  =  "North America"

eval_err_num:209
medium pred: select country from continent where surfacearea > 1 code2 code2 1
medium gold: SELECT * FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

eval_err_num:210
hard pred: select sum ( population ) , avg ( surfacearea ) from continent where surfacearea > 1
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

eval_err_num:211
easy pred: select name from city where population between 1 code2 1
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000

eval_err_num:212
easy pred: select distinct language from continent
easy gold: SELECT LANGUAGE FROM countrylanguage

eval_err_num:213
hard pred: select language from continent group by language order by count ( * ) desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

eval_err_num:214
easy pred: select directed_by from tv_channel where title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "Day of the Dark Knight!"

eval_err_num:215
medium pred: select t1 . title from cartoon as t1 join package_option as t2 on t1 . id = t2 . directed_by where t2 . directed_by = 1 or t2 . directed_by = 1
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"

easy pred: select * from tv_channel where language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Italy"

easy pred: select * from tv_channel where language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Poland"

eval_err_num:216
hard pred: select country , count ( * ) from cartoon group by country order by count ( * ) desc limit 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1

eval_err_num:217
easy pred: select t1 . title from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id join tv_channel as t3 on t1 . id = t3 . id where t2 . title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!"

eval_err_num:218
hard pred: select t2 . series_name from tv_series as t1 join channel as t2 on t1 . id = t2 . id join channel as t3 on t1 . id = t3 . id where t2 . title = 1
hard gold: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!")

eval_err_num:219
medium pred: select count ( distinct t1 . series_name ) , t1 . id from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel

eval_err_num:220
easy pred: select * from package_option as t1 join package_option as t2 on t1 . id = t2 . series_name where t2 . title = 1
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Rock TV"

eval_err_num:221
easy pred: select t1 . title from package_option as t1 join cartoon as t2 on t1 . id = t2 . series_name where t2 . title = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Rock TV"

eval_err_num:222
hard pred: select t1 . language , count ( * ) from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id group by t1 . language order by count ( * ) asc limit 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1

eval_err_num:223
medium pred: select t2 . directed_by from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id where t1 . title = 1 and t1 . title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"

eval_err_num:224
easy pred: select t2 . country from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id where t1 . title = 1
easy gold: SELECT Country FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:225
easy pred: select t1 . title from tv_channel as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:226
medium pred: select t3 . title from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id join cartoon as t3 on t1 . id = t3 . id where t2 . title = 1
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

eval_err_num:227
easy pred: select rating from tv_series where title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Double Down"

eval_err_num:228
easy pred: select rating from tv_series where title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Keepers"

eval_err_num:229
medium pred: select t2 . title , t2 . rating from tv_series as t1 join cartoon as t2 on t1 . id = t2 . episode group by t1 . id order by t2 . rating desc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3

eval_err_num:230
easy pred: select weekly_rank from tv_series where title = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "Emily"

eval_err_num:231
easy pred: select share from tv_series where title = 1
easy gold: SELECT Share FROM TV_series WHERE Episode = "Emily"

eval_err_num:232
easy pred: select rating from tv_series where title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "A Love of a Lifetime"

eval_err_num:233
easy pred: select weekly_rank from tv_series where title = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

eval_err_num:234
medium pred: select t2 . country from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id where t1 . title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"

eval_err_num:235
easy pred: select t2 . content from tv_series as t1 join tv_channel as t2 on t1 . id = t2 . id where t1 . title = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:236
easy pred: select language from tv_channel where title = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:237
medium pred: select t3 . written_by from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id join cartoon as t3 on t1 . id = t3 . id where t2 . series_name = 1
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

eval_err_num:238
easy pred: select t3 . air_date from cartoon as t1 join cartoon as t2 on t1 . cartoon = t2 . id join cartoon as t3 on t1 . id = t3 . id where t2 . title = 1
easy gold: SELECT Original_air_date FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

eval_err_num:239
easy pred: select t1 . production_code from tv_series as t1 join cartoon as t2 on t1 . id = t2 . production_code where t2 . title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

eval_err_num:240
medium pred: select t1 . production_code , t2 . id from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1 order by t2 . directed_by desc limit 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

easy pred: select title from cartoon where written_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"

eval_err_num:241
easy pred: select distinct cartoon from tv_series where written_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"

eval_err_num:242
medium pred: select language from tv_channel where written_by = 1 intersect select country from cartoon where written_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Todd Casey'

eval_err_num:243
medium pred: select country from channel where written_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Steven Melching'

eval_err_num:244
hard pred: select channel from channel where written_by = 1 except select country from channel where written_by = 1
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

easy pred: select directed_by from cartoon where title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Deep Cover for Batman!"

eval_err_num:245
extra pred: select t2 . series_name , t2 . country from tv_series as t1 join channel as t2 on t1 . id = t2 . id join tv_channel as t3 on t1 . id = t3 . id where t3 . directed_by = 1 and t3 . directed_by = 1
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

eval_err_num:246
easy pred: select country from channel where title = 1
easy gold: SELECT Country FROM TV_Channel WHERE series_name = "MTV Music"

eval_err_num:247
easy pred: select count ( * ) from channel as t1 join channel as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT COUNT(*) FROM TV_Channel WHERE Country = "Italy"

eval_err_num:248
easy pred: select id from channel as t1 join channel as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > 1
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

eval_err_num:249
hard pred: select id from channel where id not in ( select id from tv_series where written_by = 1 )
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:250
easy pred: select distinct poker_player from poker_player
easy gold: SELECT Final_Table_Made FROM poker_player

eval_err_num:251
medium pred: select t1 . poker_player , t2 . best_finish from poker_player as t1 join poker_player as t2 on t1 . poker_player_id = t2 . poker_player_id
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

easy pred: select earnings from poker_player order by earnings
easy gold: SELECT avg(Earnings) FROM poker_player

easy pred: select money_rank from poker_player order by money_rank desc
easy gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC

eval_err_num:252
easy pred: select name from poker_player where earnings < 1
easy gold: SELECT * FROM poker_player WHERE Earnings  <  200000

eval_err_num:253
easy pred: select count ( * ) from poker_player where earnings < 1 and poker_player = 1
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

eval_err_num:254
easy pred: select name from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:255
easy pred: select name from poker_player where earnings > 1
easy gold: SELECT * FROM poker_player WHERE Earnings  >  300000

eval_err_num:256
medium pred: select name from poker_player where earnings > 1
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:257
easy pred: select name from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:258
medium pred: select name from poker_player order by final_table_made asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

eval_err_num:259
easy pred: select birth_date from poker_player
easy gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:260
medium pred: select birth_date from poker_player order by earnings
medium gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings

eval_err_num:261
hard pred: select birth_date from poker_player order by earnings limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:262
easy pred: select max ( height ) from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:263
hard pred: select name from poker_player order by height desc limit 1
hard gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:264
hard pred: select money_rank from poker_player order by height desc limit 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:265
easy pred: select max ( height ) from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:266
medium pred: select name from poker_player where height > 1
medium gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:267
medium pred: select avg ( earnings ) from poker_player where height > 1
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:268
medium pred: select name from poker_player order by earnings desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

easy pred: select nationality from people group by nationality
easy gold: SELECT * FROM people GROUP BY Nationality

medium pred: select name , birth_date from people order by nationality asc
medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC

eval_err_num:269
hard pred: select * from poker_player where poker_player_id not in ( select poker_player from poker_player )
hard gold: SELECT * FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:270
hard pred: select name from poker_player where people_id not in ( select poker_player_id from poker_player )
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:271
easy pred: select killed from injured
easy gold: SELECT killed FROM death

eval_err_num:272
easy pred: select max ( killed ) from injured
easy gold: SELECT max(killed) FROM death

eval_err_num:273
easy pred: select min ( killed ) from injured
easy gold: SELECT min(killed) FROM death

eval_err_num:274
medium pred: select max ( killed ) , min ( killed ) from injured
medium gold: SELECT max(killed) ,  min(killed) FROM death

eval_err_num:275
easy pred: select * from injured order by ship
easy gold: SELECT * FROM death as T1 JOIN ship as T2 ON T1.caused_by_ship_id  =  T2.id

medium pred: select * from ship where tonnage = 1
medium gold: SELECT * FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:276
medium pred: select killed , * from ship where tonnage = 1
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:277
medium pred: select id , name from injured
medium gold: SELECT id, name FROM battle

eval_err_num:278
easy pred: select id , name from ship where id in ( select id from injured )
easy gold: SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle

eval_err_num:279
medium pred: select id , name from ship where id in ( select id from injured where name = 1 )
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

eval_err_num:280
hard pred: select injured from injured
hard gold: SELECT T1.id ,  T1.name, sum(T3.killed), sum(T3.injured) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id

eval_err_num:281
hard pred: select killed from injured where killed > = 1
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

eval_err_num:282
medium pred: select injured , injured from ship
medium gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id

eval_err_num:283
hard pred: select t1 . id , t1 . name from injured as t1 join injured as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) desc
hard gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured)

eval_err_num:284
extra pred: select id , t1 . name from ship as t1 join injured as t2 on t1 . id = t2 . id group by t1 . id order by sum ( injured ) desc limit 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured) DESC LIMIT 1

eval_err_num:285
easy pred: select distinct battle from ship where name = 1
easy gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan'

eval_err_num:286
easy pred: select distinct name from injured where name like 1
easy gold: SELECT name FROM battle WHERE latin_commander  =  'Baldwin I'

eval_err_num:287
medium pred: select battle from ship where name like 1
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

easy pred: select distinct id from ship where tonnage like 1
easy gold: SELECT lost_in_battle FROM ship WHERE tonnage  =  '225'

eval_err_num:288
medium pred: select name from injured where id not in ( select id from ship where tonnage like 1 )
medium gold: SELECT T2.id, T2.name from ship AS T1 join battle AS T2 ON T1.lost_in_battle = T2.id WHERE tonnage  =  '225'

eval_err_num:289
extra pred: select t1 . battle from battle as t1 join ship as t2 on t1 . id = t2 . id where t2 . tonnage = 1 except select t1 . battle , t1 . name from battle as t1 join ship as t2 on t1 . id = t2 . id where t2 . tonnage = 1
extra gold: SELECT id, name FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select count ( * ) from battle where id not in ( select id from ship where tonnage like 1 )
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

eval_err_num:290
medium pred: select name , date from ship where name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice'

eval_err_num:291
medium pred: select name , date from ship where name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atlanta'

eval_err_num:292
extra pred: select name , date from ship where name = 1 or name = 1
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

eval_err_num:293
medium pred: select t1 . id , t1 . name from battle as t1 join injured as t2 on t1 . id = t2 . id where t2 . name = 1
medium gold: SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:294
extra pred: select id , name from injured where id not in ( select id from injured )
extra gold: SELECT T1.id, T1.name FROM battle EXCEPT SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:295
extra pred: select t1 . battle , t1 . name , t1 . bulgarian_commander from battle as t1 join injured as t2 on t1 . id = t2 . id where t2 . name = 1
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:296
medium pred: select id , fullname from make
medium gold: SELECT ContId ,  Continent FROM CONTINENTS;

eval_err_num:297
medium pred: select id , countryname , country from make
medium gold: SELECT T1.ContId ,  T1.Continent , * FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent;

eval_err_num:298
medium pred: select t1 . countryname , t2 . id , count ( * ) from continents as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

eval_err_num:299
medium pred: select id , model from car_makers
medium gold: Select FullName, ID From CAR_MAKERS;

eval_err_num:300
medium pred: select t1 . countryname , t1 . id , t1 . id from maker as t1 join make as t2 on t1 . id = t2 . id
medium gold: Select Country, FullName, ID From CAR_MAKERS;

eval_err_num:301
medium pred: select t1 . id , t1 . countryname , count ( * ) from model as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT count(*), T1.Country, T1.FullName, T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:302
medium pred: select t1 . id , t1 . countryname , count ( * ) from countries as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:303
easy pred: select avg ( horsepower ) from horsepower
easy gold: Select avg(horsepower) FROM CARS_DATA;

eval_err_num:304
hard pred: select max ( horsepower ) from horsepower
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:305
hard pred: select min ( horsepower ) from horsepower
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:306
hard pred: select model from horsepower order by horsepower asc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:307
easy pred: select avg ( weight ) from horsepower
easy gold: SELECT avg(Weight) FROM CARS_DATA

eval_err_num:308
extra pred: select * from car_makers where weight > ( select avg ( weight ) from horsepower )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  >  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:309
extra pred: select * from car_makers where weight > ( select avg ( weight ) from horsepower )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:310
extra pred: select model from car_makers where id in ( select id from make )
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:311
medium pred: select id , model , model from cylinders where year = 1
medium gold: Select T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

eval_err_num:312
medium pred: select horsepower , horsepower , mpg from horsepower where year = 1
medium gold: Select T1.horsepower, T1.mpg, T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

eval_err_num:313
extra pred: select t1 . id , t1 . fullname , t1 . model from car_makers as t1 join make as t2 on t1 . id = t2 . id where t2 . year = 1
extra gold: SELECT T1.Maker, T4.horsepower, T4.mpg, T4.id, T2.model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:314
extra pred: select distinct t1 . model from maker as t1 join make as t2 on t1 . id = t2 . id where t2 . year = 1
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:315
medium pred: select * , model from car_makers
medium gold: SELECT Make , Model from Car_Names;

eval_err_num:316
medium pred: select year , model , model from car_makers
medium gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId;

eval_err_num:317
extra pred: select t1 . fullname , t1 . year from car_makers as t1 join make as t2 on t1 . id = t2 . year order by t1 . year limit 1
extra gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:318
extra pred: select year , year from car_makers order by year asc limit 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:319
easy pred: select distinct model from car_makers
easy gold: SELECT DISTINCT model FROM MODEL_LIST;

eval_err_num:320
medium pred: select * from model as t1 join make as t2 on t1 . id = t2 . model
medium gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id;

eval_err_num:321
hard pred: select model from car_makers where year > 1
hard gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:322
hard pred: select distinct model from car_makers where year > 1
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:323
medium pred: select countryname , country from maker
medium gold: Select T1.Maker, T2.CountryName from Car_Makers as T1 JOIN Countries as T2 on T1.Country = T2.CountryId;

eval_err_num:324
medium pred: select t1 . countryname , t2 . countryname , t1 . countryname from maker as t1 join make as t2 on t1 . id = t2 . id
medium gold: SELECT T1.Continent,  T3.Maker, T2.CountryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country;

eval_err_num:325
hard pred: select count ( * ) , t1 . countryname from maker as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

eval_err_num:326
medium pred: select id , count ( * ) from continent group by id
medium gold: SELECT *, count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country;

extra pred: select country from car_makers group by country order by count ( * ) asc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) ASC LIMIT 1;

extra pred: select country from car_makers group by country order by count ( * ) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

eval_err_num:327
easy pred: select count ( * ) from maker
easy gold: Select Count(*) FROM CAR_MAKERS;

eval_err_num:328
medium pred: select id , fullname , id from maker
medium gold: SELECT FullName, id FROM CAR_MAKERS;

eval_err_num:329
medium pred: select t1 . model , t2 . fullname , t1 . id , count ( * ) from model as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT T1.Model ,  T2.FullName, T2.id  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id;

eval_err_num:330
medium pred: select count ( * ) , t1 . id , t1 . id from maker as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

eval_err_num:331
medium pred: select id from make
medium gold: SELECT T1.ID FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:332
medium pred: select horsepower from car_makers where id in ( select id from make )
medium gold: SELECT T1.Horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:333
medium pred: select mpg from car_makers where id in ( select id from make )
medium gold: SELECT T1.MPG FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:334
medium pred: select accelerate from car_makers where id in ( select id from make )
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:335
easy pred: select distinct model from car_makers
easy gold: SELECT distinct Maker FROM CAR_MAKERS;

medium pred: select distinct country from car_makers
medium gold: SELECT T1.Maker, T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId;

eval_err_num:336
medium pred: select distinct t1 . model from maker as t1 join make as t2 on t1 . id = t2 . id where t2 . countryname = 1
medium gold: SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:337
medium pred: select count ( * ) from car_makers where countryname = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:338
easy pred: select count ( * ) from model
easy gold: SELECT count(*) FROM MODEL_LIST;

eval_err_num:339
hard pred: select count ( * ) from model where country = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Germany';

eval_err_num:340
hard pred: select count ( * ) from model where country = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'japan';

hard pred: select count ( * ) from car_makers where country = 1 and country = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:341
medium pred: select weight , weight from car_makers where year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE YEAR  =  1974;

eval_err_num:342
medium pred: select * from cars_data where year = 1 and id in ( select id from continent where year = 1 )
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974;

eval_err_num:343
hard pred: select weight , weight from car_makers where year = 1 order by weight asc limit 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

eval_err_num:344
easy pred: select distinct country from country
easy gold: Select CountryName FROM COUNTRIES;

eval_err_num:345
hard pred: select distinct country from countries where id not in ( select country from maker )
hard gold: Select CountryName FROM COUNTRIES where CountryID not in (Select Country from CAR_MAKERS);

eval_err_num:346
medium pred: select countryname from country where id not in ( select id from maker )
medium gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:347
medium pred: select country , id from car_makers except select country from maker
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:348
medium pred: select t1 . id , t1 . countryname , t2 . countryname from maker as t1 join make as t2 on t1 . id = t2 . id
medium gold: SELECT T3.Maker, T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country;

hard pred: select count ( * ) , country from car_makers group by country
hard gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country GROUP BY T1.CountryName;

eval_err_num:349
extra pred: select id , count ( * ) from country where country = 1 group by country
extra gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName;

eval_err_num:350
extra pred: select t1 . countryname from maker as t1 join continent as t2 on t1 . id = t2 . country where t2 . country = 1 group by t1 . id having count ( * ) > = 1
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

eval_err_num:351
medium pred: select id , weight from make
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:352
medium pred: select * from make as t1 join make as t2 on t1 . id = t2 . id where t2 . weight = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  8;

eval_err_num:353
medium pred: select mpg from make where id in ( select id from continents where weight = 1 )
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3;

eval_err_num:354
extra pred: select mpg from car_makers where horsepower = 1 order by horsepower desc limit 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:355
medium pred: select id from make
medium gold: SELECT id FROM CARS_DATA ORDER BY horsepower DESC LIMIT 1;

eval_err_num:356
medium pred: select id from make order by horsepower desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1;

eval_err_num:357
hard pred: select make from car_makers order by horsepower desc limit 1
hard gold: SELECT T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:358
hard pred: select model from car_makers order by mpg desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:359
easy pred: select avg ( weight ) from horsepower
easy gold: SELECT avg(edispl) FROM CARS_DATA;

eval_err_num:360
medium pred: select avg ( mpg ) from car_makers
medium gold: SELECT T1.Make, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Make;

eval_err_num:361
medium pred: select avg ( mpg ) from car_makers
medium gold: SELECT T1.Model, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Model;

eval_err_num:362
medium pred: select avg ( mpg ) from car_makers
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

eval_err_num:363
easy pred: select distinct model from car_makers
easy gold: SELECT distinct Model from CAR_NAMES;

eval_err_num:364
medium pred: select model from car_makers
medium gold: SELECT Model, Make FROM CAR_NAMES;

eval_err_num:365
medium pred: select count ( * ) , t1 . model from car_makers as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model;

eval_err_num:366
hard pred: select t2 . model from make as t1 join car_makers as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) desc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

eval_err_num:367
easy pred: select fullname from maker
easy gold: SELECT FullName FROM CAR_MAKERS;

eval_err_num:368
medium pred: select t2 . fullname , t1 . fullname , t2 . model from make as t1 join car_makers as t2 on t1 . id = t2 . id
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:369
medium pred: select t1 . fullname from maker as t1 join make as t2 on t1 . id = t2 . id join car_makers as t3 on t1 . id = t3 . id where t3 . fullname = 1
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:370
medium pred: select count ( * ) from car_makers as t1 join make as t2 on t1 . id = t2 . id join car_makers as t3 on t1 . id = t3 . id where t3 . fullname = 1 or t3 . fullname = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

easy pred: select * from car_makers group by id having count ( * ) > = 1
easy gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:371
medium pred: select * from car_makers where model = 1 and weight > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  1;

eval_err_num:372
medium pred: select * from car_makers where model > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:373
medium pred: select t1 . fullname , t1 . id from maker as t1 join make as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > 1
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:374
hard pred: select count ( distinct id ) from maker where fullname = 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id WHERE T3.FullName  =  'General Motors';

eval_err_num:375
hard pred: select count ( distinct id ) from maker where horsepower horsepower 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T1.MakeId  =  T3.Id WHERE T3.weight > 3500;

eval_err_num:376
extra pred: select count ( * ) from model where id not in ( select id from continents where horsepower > 1 )
extra gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:377
extra pred: select distinct model from maker where weight > 1 or weight > 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:378
medium pred: select year , weight from horsepower
medium gold: SELECT Year, weight FROM CARS_DATA;

eval_err_num:379
easy pred: select distinct year from car_makers where weight > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  >  3000;

eval_err_num:380
easy pred: select year from car_makers where weight < 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  <  4000;

eval_err_num:381
medium pred: select distinct year from car_makers where weight < 1 intersect select year from horsepower where weight < 1
medium gold: SELECT DISTINCT Year FROM CARS_DATA WHERE Weight  >  3000 AND Weight  <  4000;

eval_err_num:382
medium pred: select model from car_makers order by accelerate limit 1
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate ASC LIMIT 1;

eval_err_num:383
medium pred: select accelerate from car_makers order by accelerate desc limit 1
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

eval_err_num:384
hard pred: select id , accelerate , model from car_makers order by accelerate desc limit 1
hard gold: SELECT T1.ID, T2.Make, T2.Model FROM CARS_DATA as T1 JOIN CAR_NAMES as T2 ON T1.ID = T2.MakeID ORDER BY T1.accelerate DESC LIMIT 1;

eval_err_num:385
medium pred: select horsepower , horsepower from car_makers order by accelerate desc limit 1
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

medium pred: select * from car_makers
medium gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo';

eval_err_num:386
extra pred: select * from cars_data as t1 join make as t2 on t1 . id = t2 . id group by mpg order by count ( * ) asc limit 1
extra gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:387
extra pred: select horsepower from car_makers order by accelerate asc limit 1
extra gold: SELECT T1.horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:388
extra pred: select count ( * ) from car_makers as t1 join make as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) asc limit 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:389
medium pred: select max ( horsepower ) from horsepower
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:390
medium pred: select mpg from horsepower where id in ( select id from horsepower )
medium gold: SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:391
hard pred: select id from horsepower where mpg > ( select max ( accelerate ) from horsepower )
hard gold: SELECT id FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:392
hard pred: select count ( * ) from horsepower where mpg > ( select max ( accelerate ) from horsepower )
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:393
hard pred: select countryname from car_makers where id not in ( select id from car_makers )
hard gold: SELECT CountryName FROM COUNTRIES where CountryId not in (SELECT T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country);

eval_err_num:394
easy pred: select country from car_makers where id not in ( select id from continents )
easy gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country;

eval_err_num:395
easy pred: select count ( distinct country ) from maker group by country having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  1 );

eval_err_num:396
easy pred: select country from maker group by country having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

eval_err_num:397
medium pred: select model , horsepower from horsepower
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:398
medium pred: select * from cars_data where id in ( select id from continents where model = 1 )
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4;

eval_err_num:399
extra pred: select model from car_makers order by horsepower limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:400
extra pred: select model from car_makers order by horsepower limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:401
easy pred: select model from horsepower order by horsepower limit 1
easy gold: SELECT min(Horsepower) FROM CARS_DATA;

eval_err_num:402
extra pred: select id , horsepower from horsepower where horsepower > ( select min ( horsepower ) from horsepower )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA);

eval_err_num:403
extra pred: select id , horsepower from car_makers where horsepower < = ( select min ( horsepower ) from horsepower )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 5;

eval_err_num:404
extra pred: select id , horsepower from car_makers where horsepower > ( select min ( horsepower ) from horsepower )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 3;

eval_err_num:405
medium pred: select horsepower , accelerate from horsepower where year < 1
medium gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE YEAR  <  1980;

eval_err_num:406
extra pred: select mpg , horsepower from cylinders where year < 1
extra gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980;

eval_err_num:407
extra pred: select horsepower from horsepower where year < 1 or year < 1
extra gold: SELECT accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY accelerate DESC LIMIT 1;

eval_err_num:408
extra pred: select mpg from car_makers where year < 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

eval_err_num:409
medium pred: select * from continents as t1 join make as t2 on t1 . id = t2 . id join car_makers as t3 on t2 . id = t3 . id where t1 . horsepower = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName = 'Ford Motor Company';

eval_err_num:410
medium pred: select model from car_makers except select model from continents
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName != 'Ford Motor Company';

eval_err_num:411
extra pred: select model , weight from car_makers where horsepower = 1 or horsepower = 1
extra gold: SELECT T1.model, T2.Make, T3.weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'

eval_err_num:412
extra pred: select distinct model from car_makers where horsepower < 1
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

eval_err_num:413
easy pred: select countryname from car_makers group by country having count ( * ) > = 1
easy gold: SELECT distinct T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:414
hard pred: select t1 . countryname from car_makers as t1 join make as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > = 1
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:415
medium pred: select id , fullname , make from car_makers
medium gold: SELECT T1.Id ,  T1.Maker, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:416
medium pred: select count ( * ) , t1 . id from maker as t1 join make as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:417
medium pred: select id , model from maker group by id having count ( * ) > = 1
medium gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2;

eval_err_num:418
extra pred: select t1 . id , t1 . fullname from maker as t1 join make as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > 1
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

easy pred: select * from matches order by year desc limit 1
easy gold: SELECT avg(minutes) FROM matches

eval_err_num:419
medium pred: select t1 . birth_date , t2 . loser_age from matches as t1 join matches as t2 on t1 . loser_id = t2 . winner_id where t1 . matches = 1 intersect select t1 . first_name , t1 . year from tours as t1 join matches as t2 on t1 . loser_id = t2 . winner_id where t2 . matches = 1
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

easy pred: select round from matches group by tourney_name having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  20

easy pred: select round from matches group by tourney_name having count ( * ) > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

easy pred: select count ( distinct winner_entry ) from matches where winner_entry = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE year = 2013

eval_err_num:420
easy pred: select count ( distinct t1 . loser_id ) from matches as t1 join matches as t2 on t1 . winner_id = t2 . winner_id where t2 . winner_entry = 1 and t2 . winner_entry = 1
easy gold: SELECT count(*) FROM (SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016)

eval_err_num:421
hard pred: select distinct t1 . first_name , t1 . last_name from tours as t1 join matches as t2 on t1 . loser_id = t2 . winner_id where t2 . winner_entry = 1 and t2 . winner_entry = 1
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

easy pred: select count ( * ) from matches where winner_name like 1
easy gold: SELECT count(*) FROM matches WHERE loser_hand = "L"

easy pred: select count ( * ) from matches
easy gold: SELECT count(*) FROM players

eval_err_num:422
medium pred: select last_name , birth_date from matches order by round
medium gold: SELECT T1.last_name, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships'

eval_err_num:423
medium pred: select first_name , country_code from players where rankings = 1 order by round
medium gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships'

eval_err_num:424
extra pred: select t1 . first_name , t1 . country_code from tours as t1 join matches as t2 on t1 . winner_id = t2 . winner_entry where t2 . round = 1 and t2 . round = 1
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

medium pred: select birth_date from players order by birth_date limit 1
medium gold: SELECT birth_date FROM players ORDER BY birth_date DESC LIMIT 1

eval_err_num:425
medium pred: select t1 . first_name , t1 . country_code from tours as t1 join matches as t2 on t1 . loser_id = t2 . loser_id order by t2 . birth_date limit 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

eval_err_num:426
easy pred: select * from matches where hand = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'L'

eval_err_num:427
medium pred: select t1 . country_code , t2 . birth_date from tours as t1 join matches as t2 on t1 . loser_id = t2 . country_code where t2 . matches = 1
medium gold: SELECT country_code ,  birth_date FROM players WHERE hand  =  'L'

eval_err_num:428
medium pred: select t1 . country_code , t2 . birth_date from tours as t1 join matches as t2 on t1 . loser_id = t2 . loser_id order by t2 . birth_date
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

easy pred: select count ( * ) from matches
easy gold: SELECT count(*) FROM players

eval_err_num:429
hard pred: select count ( * ) from tours as t1 join matches as t2 on t1 . player_id = t2 . loser_id group by t1 . player_id order by count ( * ) asc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours ASC LIMIT 1

eval_err_num:430
hard pred: select count ( * ) from tours as t1 join tours as t2 on t1 . player_id = t2 . loser_id group by t1 . player_id order by count ( * ) desc limit 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:431
hard pred: select t2 . first_name , t2 . country_code from tours as t1 join matches as t2 on t1 . player_id = t2 . loser_id group by t2 . loser_id order by count ( * ) desc limit 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:432
hard pred: select t1 . round from matches as t1 join matches as t2 on t1 . surface = t2 . surface group by t1 . surface order by count ( * ) desc limit 1
hard gold: SELECT surface FROM matches GROUP BY surface ORDER  BY count(*) DESC LIMIT 1

eval_err_num:433
hard pred: select first_name from players order by minutes desc limit 1
hard gold: SELECT loser_name FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:434
hard pred: select winner_rank , sum ( score ) from matches group by ranking order by count ( * ) desc limit 1
hard gold: SELECT loser_name, loser_rank_points FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: select winner_rank from matches group by winner_rank order by count ( * ) desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:435
medium pred: select t1 . first_name , t1 . last_name from tours as t1 join matches as t2 on t1 . loser_id = t2 . loser_id order by t2 . score desc limit 1
medium gold: SELECT loser_name FROM matches ORDER BY loser_rank_points DESC LIMIT 1

eval_err_num:436
hard pred: select first_name , last_name from players where round = 1
hard gold: SELECT loser_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY loser_rank_points DESC LIMIT 1

eval_err_num:437
hard pred: select t1 . first_name , t1 . last_name from tours as t1 join matches as t2 on t1 . winner_id = t2 . winner_id where t1 . round = 1 and ranking = 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: select round from matches order by round asc limit 1
medium gold: SELECT minutes FROM matches ORDER BY minutes ASC LIMIT 1

medium pred: select round from matches order by round asc limit 1
medium gold: SELECT minutes FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:438
medium pred: select t2 . first_name , t2 . last_name from players as t1 join matches as t2 on t1 . winner_id = t2 . winner_id order by t2 . minutes limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:439
medium pred: select t1 . round , t1 . birth_date from tours as t1 join matches as t2 on t1 . player_id = t2 . loser_id
medium gold: SELECT T2.tours, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:440
medium pred: select avg ( t2 . ranking ) , t2 . round from matches as t1 join tours as t2 on t1 . player_id = t2 . loser_id group by t1 . player_id
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:441
medium pred: select count ( * ) from tours group by player_id
medium gold: SELECT tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:442
medium pred: select t2 . first_name , t2 . last_name , avg ( t1 . minutes ) from tours as t1 join matches as t2 on t1 . player_id = t2 . loser_id group by t2 . player_id
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:443
medium pred: select sum ( t1 . ranking_points ) , t1 . first_name from players as t1 join matches as t2 on t1 . player_id = t2 . player_id group by t2 . player_id
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:444
easy pred: select count ( * ) from tours group by country_code
easy gold: SELECT count(*) FROM players GROUP BY country_code

eval_err_num:445
hard pred: select country_code from tours group by country_code order by count ( * ) asc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) ASC LIMIT 1

eval_err_num:446
hard pred: select country_code from tours group by country_code order by count ( * ) asc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

medium pred: select loser_entry , count ( * ) from matches group by loser_hand
medium gold: SELECT count(*), hand FROM players GROUP BY hand

eval_err_num:447
medium pred: select t2 . loser_name , count ( * ) from matches as t1 join tours as t2 on t1 . loser_id = t2 . loser_id group by t2 . loser_name
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code

eval_err_num:448
medium pred: select country_code from matches group by country_code having count ( * ) > 1
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code HAVING count(*) > 50

eval_err_num:449
easy pred: select t1 . country_code from tours as t1 join matches as t2 on t1 . loser_id = t2 . loser_id group by t1 . country_code having count ( * ) = 1
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

eval_err_num:450
medium pred: select first_name , last_name from tours order by birth_date asc limit 1
medium gold: SELECT DISTINCT loser_name FROM matches ORDER BY loser_age DESC LIMIT 3

eval_err_num:451
medium pred: select first_name , last_name from tours order by birth_date desc limit 1
medium gold: SELECT DISTINCT winner_name FROM matches ORDER BY winner_age DESC LIMIT 3

eval_err_num:452
medium pred: select winner_rank , winner_entry from matches order by birth_date desc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:453
easy pred: select count ( distinct t1 . loser_id ) from matches as t1 join tours as t2 on t1 . winner_id = t2 . winner_id where t1 . round = 1
easy gold: SELECT count(DISTINCT loser_name) FROM matches WHERE tourney_name  =  'Australian Open'

eval_err_num:454
easy pred: select distinct t1 . first_name , t1 . last_name from tours as t1 join tours as t2 on t1 . winner_id = t2 . winner_id where t1 . round = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Australian Open'

eval_err_num:455
medium pred: select t2 . round , t1 . first_name , t1 . last_name from tours as t1 join tours as t2 on t1 . winner_id = t2 . winner_id where t1 . round = 1 and t2 . round = 1
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

eval_err_num:456
easy pred: select t1 . age from conductor as t1 join conductor as t2 on t1 . conductor_id = t2 . conductor_id
easy gold: SELECT Age FROM conductor

eval_err_num:457
easy pred: select name from conductor where conductor_id not in ( select conductor_id from nationality where nationality ! = 1 )
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

eval_err_num:458
easy pred: select * from record_company
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:459
medium pred: select date from record_company
medium gold: SELECT Record_Company, Year_of_Founded FROM orchestra

eval_err_num:460
easy pred: select date from record_company order by year_of_founded desc
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

eval_err_num:461
easy pred: select attendance from performance
easy gold: SELECT Attendance FROM SHOW

eval_err_num:462
easy pred: select avg ( attendance ) from performance
easy gold: SELECT avg(Attendance) FROM SHOW

eval_err_num:463
easy pred: select t2 . share from performance as t1 join conductor as t2 on t1 . performance_id = t2 . show_id
easy gold: SELECT SHARE FROM performance

eval_err_num:464
easy pred: select t2 . share from performance as t1 join share as t2 on t1 . performance_id = t2 . show_id where t1 . type = 1
easy gold: SELECT SHARE FROM performance WHERE TYPE != "Live final"

eval_err_num:465
medium pred: select max ( attendance ) , min ( attendance ) from performance
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

eval_err_num:466
easy pred: select t1 . name from conductor as t1 join conductor as t2 on t1 . conductor_id = t2 . conductor_id where t2 . conductor_id = t2 . conductor_id
easy gold: SELECT Year_of_Work FROM conductor

eval_err_num:467
easy pred: select t1 . name from conductor as t1 join conductor as t2 on t1 . conductor_id = t2 . conductor_id where t2 . conductor_id = t2 . show_id
easy gold: SELECT Year_of_Work FROM conductor

eval_err_num:468
medium pred: select distinct name from conductor where conductor_id in ( select conductor_id from attendance )
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

eval_err_num:469
medium pred: select t2 . name from orchestra as t1 join conductor as t2 on t1 . conductor_id = t2 . conductor_id group by t1 . conductor_id having count ( * ) > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

eval_err_num:470
extra pred: select t1 . name from conductor as t1 join conductor as t2 on t1 . conductor_id = t2 . conductor_id group by t2 . conductor_id order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:471
medium pred: select t1 . name from conductor as t1 join attendance as t2 on t1 . conductor_id = t2 . conductor_id where t2 . attendance > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

eval_err_num:472
easy pred: select date from record_company where show_id not in ( select record_company from orchestra )
easy gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company

eval_err_num:473
medium pred: select count ( * ) , t1 . name from record_company as t1 join orchestra as t2 on t1 . performance_id = t2 . orchestra_id group by t1 . name
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

eval_err_num:474
easy pred: select date from orchestra
easy gold: SELECT Major_Record_Format FROM orchestra

eval_err_num:475
medium pred: select t1 . type from orchestra as t1 join orchestra as t2 on t1 . performance_id = t2 . orchestra_id group by t2 . performance_id order by count ( * ) asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

eval_err_num:476
easy pred: select * from record_company
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:477
hard pred: select * from record_company group by show_id order by count ( * ) desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:478
easy pred: select name from orchestra
easy gold: SELECT Orchestra FROM orchestra

eval_err_num:479
hard pred: select name from orchestra where show_id not in ( select orchestra_id from performance )
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

eval_err_num:480
easy pred: select date from record_company
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:481
easy pred: select attendance from record_company where year_of_founded < 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003

eval_err_num:482
easy pred: select distinct t1 . name from record_company as t1 join attendance as t2 on t1 . show_id = t2 . share where t2 . year_of_founded > 1 and t2 . year_of_founded > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:483
hard pred: select distinct name from record_company where year_of_founded > 1 and show > 1
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:484
medium pred: select distinct t1 . name from orchestra as t1 join conductor as t2 on t1 . orchestra_id = t2 . orchestra_id where t2 . result = 1
medium gold: SELECT * FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:485
medium pred: select count ( * ) from orchestra where conductor_id not in ( select orchestra_id from conductor where result = 1 )
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:486
medium pred: select t1 . document_name , t2 . template_id from documents as t1 join documents as t2 on t1 . template_id = t2 . template_id where t2 . paragraph_text like 1
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

eval_err_num:487
medium pred: select t1 . template_id , t1 . paragraph_text , t1 . document_id from templates as t1 join documents as t2 on t1 . template_id = t2 . template_id where t2 . document_name = 1
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

eval_err_num:488
medium pred: select document_id , template_type_code , template_type_code from documents
medium gold: SELECT T1.document_id, T2.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID

eval_err_num:489
medium pred: select document_id , template_type_code from documents where template_type_code = 1
medium gold: SELECT T1.document_id FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID where T2.Template_Type_Code  =  'PPT'

eval_err_num:490
medium pred: select count ( * ) from documents where template_type_code = 1
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

eval_err_num:491
medium pred: select template_id , template_type_code from documents
medium gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id

medium pred: select template_id , count ( * ) from documents group by template_id
medium gold: SELECT count(*), T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id

eval_err_num:492
extra pred: select t1 . template_id from templates as t1 join documents as t2 on t1 . template_id = t2 . template_id group by t1 . template_id order by count ( * ) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

easy pred: select template_id from documents
easy gold: SELECT template_id FROM Templates

hard pred: select template_id from templates where template_id not in ( select template_id from documents )
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

medium pred: select template_id from templates where template_type_code = 1
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

eval_err_num:493
easy pred: select template_type_code from documents group by template_type_code
easy gold: SELECT version_number FROM Templates

eval_err_num:494
easy pred: select * from documents as t1 join ref_template_types as t2 on t1 . template_id = t2 . template_id where t2 . version_number > 1
easy gold: SELECT version_number FROM Templates WHERE version_number  >  5

eval_err_num:495
medium pred: select t1 . template_type_code , t2 . template_type_code from templates as t1 join templates as t2 on t1 . template_type_code = t2 . template_id where t1 . version_number > 1 or t2 . version_number > 1
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

eval_err_num:496
medium pred: select template_type_code , count ( * ) from documents group by template_type_code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

easy pred: select template_type_code from ref_template_types
easy gold: SELECT template_type_code FROM Templates

medium pred: select template_type_code , count ( * ) from ref_template_types group by template_type_code
medium gold: SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code

eval_err_num:497
easy pred: select min ( version_number ) from documents
easy gold: SELECT min(Version_Number) FROM Templates

eval_err_num:498
medium pred: select template_type_code , min ( version_number ) from documents group by template_type_code
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

eval_err_num:499
medium pred: select t1 . template_type_code , t2 . paragraph_text from templates as t1 join documents as t2 on t1 . template_id = t2 . template_id
medium gold: SELECT T1.template_type_code, T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:500
medium pred: select t1 . template_type_code from templates as t1 join documents as t2 on t1 . template_id = t2 . template_id where t2 . document_name = 1
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

eval_err_num:501
medium pred: select t1 . document_name , t2 . template_type_code from templates as t1 join templates as t2 on t1 . template_id = t2 . template_id
medium gold: SELECT T2.document_name, T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:502
medium pred: select document_name from documents where template_type_code = 1
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

easy pred: select template_type_code from ref_template_types
easy gold: SELECT template_type_code FROM Templates

eval_err_num:503
medium pred: select template_type_code , template_id from ref_template_types
medium gold: SELECT T1.template_type_code , T2.document_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: select template_type_code , count ( * ) from ref_template_types group by template_type_code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

eval_err_num:504
medium pred: select template_type_code , count ( * ) from documents group by template_type_code
medium gold: SELECT T1.template_type_code, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

eval_err_num:505
hard pred: select template_type_code from documents group by template_type_code order by count ( * ) desc
hard gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC

eval_err_num:506
extra pred: select template_type_code from documents group by template_type_code order by count ( * ) desc limit 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

easy pred: select template_type_code from ref_template_types
easy gold: SELECT template_type_code FROM Templates

easy pred: select template_type_code from ref_template_types
easy gold: SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:507
hard pred: select template_type_code from ref_template_types except select template_type_code from documents
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

easy pred: select template_type_code , template_type_description from ref_template_types
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

easy pred: select template_type_code from ref_template_types where template_type_code = 1
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

medium pred: select template_id , template_type_code from templates
medium gold: select T2.Template_ID, T1.template_type_code from Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.template_ID

medium pred: select template_type_code from templates
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: select distinct template_type_code from templates
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

easy pred: select template_id from documents
easy gold: SELECT template_id from Templates

eval_err_num:508
medium pred: select template_id , template_type_description from templates
medium gold: SELECT T2.template_id, T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code

eval_err_num:509
medium pred: select template_id from templates where template_type_description = 1
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

easy pred: select * from documents
easy gold: SELECT * FROM Paragraphs

easy pred: select count ( * ) from ref_template_types
easy gold: SELECT count(*) FROM Paragraphs

eval_err_num:510
easy pred: select paragraph_id from documents
easy gold: SELECT paragraph_id FROM Paragraphs

eval_err_num:511
medium pred: select t1 . paragraph_id , t1 . document_name from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id
medium gold: SELECT T1.paragraph_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID

eval_err_num:512
medium pred: select t1 . paragraph_id , t1 . document_id from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id where t1 . document_name = 1
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:513
medium pred: select count ( * ) from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id where t1 . document_name = 1
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:514
medium pred: select paragraph_text , paragraphs from paragraphs
medium gold: SELECT Other_Details, paragraph_text FROM Paragraphs

eval_err_num:515
easy pred: select paragraph_text , paragraphs from paragraphs where paragraph_text like 1
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

eval_err_num:516
medium pred: select paragraph_text , paragraph_text from ref_template_types
medium gold: SELECT paragraph_id ,  paragraph_text FROM Paragraphs

eval_err_num:517
medium pred: select t1 . paragraph_text , t1 . paragraph_text , t1 . document_id from paragraphs as t1 join documents as t2 on t1 . paragraph_id = t2 . document_id
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text, T2.Document_Name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:518
medium pred: select t1 . paragraph_id , t1 . paragraph_text from paragraphs as t1 join documents as t2 on t1 . document_id = t2 . document_id where t2 . document_name = 1
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

eval_err_num:519
medium pred: select t1 . paragraph_text , t1 . document_name from paragraphs as t1 join documents as t2 on t1 . paragraph_id = t2 . document_id
medium gold: SELECT T1.paragraph_text, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:520
medium pred: select t1 . paragraph_text from paragraphs as t1 join documents as t2 on t1 . document_id = t2 . document_id where t2 . document_name = 1
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id

medium pred: select document_id from documents group by document_id order by count ( * )
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: select document_id , document_name , count ( * ) from documents group by document_id
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select document_id from documents group by document_id having count ( * ) > = 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

eval_err_num:521
medium pred: select template_id , document_name , paragraph_id from documents
medium gold: SELECT T1.document_id ,  T2.document_name , T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:522
medium pred: select t1 . paragraph_id , t1 . paragraph_text , count ( * ) from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id group by t1 . paragraph_id
medium gold: SELECT T1.document_id ,  T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

eval_err_num:523
extra pred: select t1 . document_id , t1 . document_name from documents as t1 join documents as t2 on t1 . template_id = t2 . document_id where t2 . document_id = ( select document_id from documents order by documents desc limit 1 )
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*)

hard pred: select document_id from documents group by document_id order by count ( * ) asc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

easy pred: select document_id from documents where document_id = 1 intersect select document_id from paragraphs where paragraph_text like 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

medium pred: select country , age , age from singer
medium gold: SELECT name ,  country ,  age FROM singer

medium pred: select name , age , age from singer order by age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

easy pred: select age from singer where name = 1
easy gold: select age from singer WHERE country  =  'France'

medium pred: select avg ( age ) , min ( age ) , max ( age ) from singer where name = 1
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

eval_err_num:524
easy pred: select name from song_name
easy gold: select song_name from singer

eval_err_num:525
medium pred: select name , year from stadium
medium gold: SELECT song_name ,  song_release_year FROM singer

eval_err_num:526
medium pred: select name , year from concert order by age
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age

eval_err_num:527
medium pred: select name from song_name order by age limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

eval_err_num:528
easy pred: select country from singer where average > 1
easy gold: SELECT country FROM singer WHERE age  >  20

eval_err_num:529
easy pred: select distinct country from singer where average > 1
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

hard pred: select name from singer where age > ( select avg ( age ) from singer )
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

eval_err_num:530
medium pred: select t1 . name , count ( * ) from stadium as t1 join concert as t2 on t1 . stadium_id = t2 . stadium_id group by t1 . name
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

eval_err_num:531
extra pred: select name , capacity from stadium order by year desc
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC

eval_err_num:532
extra pred: select name , capacity from stadium order by year desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

medium pred: select year from concert order by year desc
medium gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC

eval_err_num:533
hard pred: select name from stadium where stadium_id not in ( select stadium from concert )
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

hard pred: select country from singer where age < 1 intersect select country from singer where age < 1
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

eval_err_num:534
medium pred: select t1 . name from stadium as t1 join concert as t2 on t1 . stadium_id = t2 . stadium_id where t2 . year = 1
medium gold: SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:535
hard pred: select name from stadium except select t1 . name from stadium as t1 join concert as t2 on t1 . stadium_id = t2 . stadium_id where t2 . year = 1
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:536
medium pred: select name , theme from concert
medium gold: SELECT concert_name ,  theme from concert

eval_err_num:537
medium pred: select t2 . name , t1 . theme , count ( * ) from concert as t1 join concert as t2 on t1 . singer_id = t2 . singer_id group by t1 . theme
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

eval_err_num:538
medium pred: select t2 . name , count ( * ) from concert as t1 join song_name as t2 on t1 . singer_id = t2 . singer_id group by t1 . name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

eval_err_num:539
hard pred: select t1 . name from singer as t1 join concert as t2 on t1 . singer_id = t2 . singer_id where t2 . year = 1
hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

medium pred: select name from singer where name like 1
medium gold: SELECT name FROM singer WHERE song_name LIKE '%Hey%'

medium pred: select name , country from singer where name like 1
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:540
medium pred: select name , location from stadium where year = 1
medium gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014

eval_err_num:541
extra pred: select t1 . name , t1 . location from stadium as t1 join concert as t2 on t1 . stadium_id = t2 . stadium_id where t2 . year = 1 and t2 . year = 1
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

easy pred: select name from singer order by birth_year desc
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC

medium pred: select distinct citizenship , citizenship from singer
medium gold: SELECT Name, Citizenship FROM singer

medium pred: select citizenship , count ( * ) from singer group by citizenship order by count ( * ) desc limit 1
medium gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC

hard pred: select citizenship , count ( * ) from singer group by citizenship order by count ( * ) desc limit 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:542
medium pred: select title from singer
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID

eval_err_num:543
medium pred: select name from singer where sales > 1
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID WHERE t2.Sales > 300000

eval_err_num:544
medium pred: select distinct name from singer where sales > 1
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

medium pred: select name , count ( * ) from singer group by name
medium gold: SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:545
medium pred: select t1 . name , count ( * ) from singer as t1 join song as t2 on t1 . singer_id = t2 . singer_id group by t2 . name having count ( * ) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

eval_err_num:546
medium pred: select name , net_worth_millions from song
medium gold: SELECT title, Sales from song

eval_err_num:547
medium pred: select t1 . name , t3 . sales from singer as t1 join song as t2 on t1 . song_id = t2 . song_id join song as t3 on t3 . song = t1 . song
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

easy pred: select distinct singer_id from song group by singer_id having count ( * ) > = 1
easy gold: SELECT DISTINCT Singer_ID from song

eval_err_num:548
hard pred: select name from singer except select distinct name from song
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

easy pred: select count ( * ) from shop
easy gold: SELECT sum(number_products) FROM shop

medium pred: select name , district from shop order by number_products desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:549
hard pred: select name from shop where shop_id not in ( select shop_id from evaluation )
hard gold: SELECT name FROM shop WHERE number_products  <  (SELECT avg(number_products) FROM shop)

eval_err_num:550
hard pred: select count ( * ) from shop where shop_id in ( select shop_id from evaluation )
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

easy pred: select count ( * ) from evaluation
easy gold: SELECT Year_awarded FROM evaluation

eval_err_num:551
extra pred: select name from employee order by year_awarded desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:552
easy pred: select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id where t2 . evaluation = 1
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

eval_err_num:553
extra pred: select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee group by t1 . employee order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:554
hard pred: select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id group by t1 . name order by count ( * ) desc limit 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

eval_err_num:555
easy pred: select count ( * ) from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee group by t1 . employee_id order by count ( * ) desc limit 1
easy gold: SELECT count(distinct Employee_ID) FROM evaluation

eval_err_num:556
easy pred: select name from employee where year_awarded = 1
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

eval_err_num:557
hard pred: select name from employee except select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

easy pred: select count ( * ) from shop
easy gold: SELECT count(distinct Shop_ID) FROM hiring

easy pred: select name from shop
easy gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id

eval_err_num:558
extra pred: select name from shop order by age desc limit 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:559
easy pred: select count ( * ) from employee as t1 join employee as t2 on t1 . shop_id = t2 . shop_id
easy gold: SELECT count(*) FROM hiring

eval_err_num:560
medium pred: select count ( * ) , t2 . name from employee as t1 join shop as t2 on t1 . shop_id = t2 . shop_id group by t2 . shop_id
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

easy pred: select name from visitor where level_of_membership = 1 order by name
easy gold: SELECT name FROM visitor ORDER BY Level_of_membership DESC

medium pred: select name from visitor where level_of_membership < = 1 or level_of_membership < 1
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

eval_err_num:561
easy pred: select count ( * ) from ( select num_of_ticket from visitor where level_of_membership > 1 )
easy gold: SELECT count(*) FROM visitor WHERE Level_of_membership  >  4

medium pred: select name , level_of_membership from visitor where age > 1 order by age
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

eval_err_num:562
medium pred: select museum_id from visit group by name order by avg ( num_of_staff ) desc limit 1
medium gold: SELECT museum_id FROM museum ORDER BY num_of_staff DESC LIMIT 1

hard pred: select name from museum where num_of_staff > ( select min ( num_of_staff ) from museum where open_year < 1 )
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

eval_err_num:563
easy pred: select name from visitor where id in ( select id from visit )
easy gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id

eval_err_num:564
medium pred: select t1 . name from visitor as t1 join visit as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > 1
medium gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

eval_err_num:565
medium pred: select name , id from visitor where total_spent > ( select count ( * ) from visitor where visit = 1 )
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

eval_err_num:566
extra pred: select name from visitor order by total_spent desc limit 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

eval_err_num:567
extra pred: select t1 . museum_id , t2 . level_of_membership from visitor as t1 join visitor as t2 on t1 . id = t2 . museum_id group by t1 . id order by count ( * ) desc limit 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

medium pred: select museum_id , name , count ( * ) from museum group by museum_id
medium gold: SELECT t2.Museum_ID ,  t1.name, count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID

eval_err_num:568
extra pred: select t1 . museum_id , t1 . name from museum as t1 join visitor as t2 on t1 . museum_id = t2 . museum_id group by t1 . museum_id order by count ( * ) desc limit 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:569
extra pred: select count ( * ) from ( select * from visitor where id not in ( select museum_id from visitor ) )
extra gold: SELECT count(*) FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:570
hard pred: select name from museum where museum_id not in ( select museum_id from visitor )
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

easy pred: select count ( * ) from museum
easy gold: SELECT sum(num_of_ticket) FROM visit

eval_err_num:571
medium pred: select count ( * ) from ( select id from num_of_ticket group by museum_id order by count ( * ) desc limit 1 )
medium gold: SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1

eval_err_num:572
hard pred: select name , age from visitor order by num_of_ticket desc limit 1
hard gold: SELECT t1.name,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

eval_err_num:573
easy pred: select sum ( total_spent ) from visit group by id order by sum ( num_of_ticket ) desc limit 1
easy gold: SELECT max(Total_spent) FROM visit

eval_err_num:574
medium pred: select num_of_ticket from visitor where level_of_membership = 1
medium gold: SELECT t2.Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

eval_err_num:575
medium pred: select sum ( total_spent ) from visit where level_of_membership = 1
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

eval_err_num:576
extra pred: select name from visitor where open_year > 1 or open_year > 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

medium pred: select count ( * ) from museum where open_year > 1
medium gold: SELECT count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010

eval_err_num:577
extra pred: select count ( * ) from ( select count ( * ) from ( select count ( * ) from ( select count ( * ) from ( select count ( * ) from visit where open_year > 1 except select t1 . name from visitor as t1 join visit as t2 on t1 . museum_id = t2 . museum_id where t1 . open_year > 1 except select t1 . name from visitor as t1 join visit as t2 on t1 . museum_id = t2 . museum_id where t2 . open_year > ) ) ) ) 1
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

medium pred: select count ( * ) , grade from highschooler where grade = 1 group by grade
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  11 OR grade  =  12

medium pred: select count ( * ) , grade from highschooler group by grade having count ( * ) = 1
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

eval_err_num:578
easy pred: select count ( distinct grade ) from grade
easy gold: SELECT count(distinct grade) FROM Highschooler

eval_err_num:579
easy pred: select distinct grade from grade
easy gold: SELECT distinct grade FROM Highschooler

eval_err_num:580
hard pred: select grade from grade group by grade order by count ( * ) asc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) ASC LIMIT 1

eval_err_num:581
hard pred: select grade from grade group by grade order by count ( * ) desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

easy pred: select count ( * ) from likes
easy gold: SELECT count(*) FROM Highschooler

medium pred: select count ( * ) from highschooler group by grade
medium gold: SELECT grade, count(*) FROM Highschooler GROUP BY grade

eval_err_num:582
easy pred: select grade from grade group by grade having count ( * ) > = 1
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  10

eval_err_num:583
easy pred: select name from student_id
easy gold: SELECT name FROM highschooler

eval_err_num:584
medium pred: select name from friend
medium gold: SELECT T2.name, T3.name FROM friend as T1 join highschooler as T2  on friend_id = T2.ID join highschooler as T3 on student_id = T3.ID

eval_err_num:585
medium pred: select name , count ( * ) from friend as t1 join friend as t2 on t1 . id = t2 . id join friend as t3 on t1 . id = t3 . id group by t3 . name
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:586
easy pred: select name from friend
easy gold: SELECT name FROM highschooler

eval_err_num:587
medium pred: select name , count ( * ) from friend group by name
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:588
extra pred: select t1 . name from friend as t1 join friend as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) asc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:589
extra pred: select name from friend order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:590
easy pred: select count ( * ) from ( select count ( * ) from ( select t1 . name from highschooler as t1 join grade as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > 1 ) )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  > 5)

eval_err_num:591
easy pred: select count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * from count ( * ) from ( select * from ( select count ( * ) from ( select * ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) from
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 3)

eval_err_num:592
medium pred: select name from friend where id in ( select id from count ( * ) > = 1 )
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:593
hard pred: select count ( * ) from friend as t1 join friend as t2 on t1 . id = t2 . friend where t2 . name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:594
hard pred: select t1 . name from friend as t1 join friend as t2 on t1 . id = t2 . name where t2 . name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:595
easy pred: select * from friend where name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:596
hard pred: select t1 . name from friend as t1 join grade as t2 on t1 . id = t2 . id where grade = 1
hard gold: SELECT T3.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.liked_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:597
hard pred: select t2 . name from friend as t1 join friend as t2 on t1 . id = t2 . id where t1 . name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:598
hard pred: select count ( distinct name ) from friend where name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:599
easy pred: select id from student_id
easy gold: SELECT ID FROM highschooler

eval_err_num:600
medium pred: select count ( * ) , t1 . id from student_id as t1 join likes as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT student_id, count(*) FROM friend group by student_id

eval_err_num:601
easy pred: select id from student_id group by id having count ( * ) > = 1
easy gold: SELECT student_id FROM Friend

eval_err_num:602
hard pred: select id from student_id except select id , count ( * ) from likes group by id having count ( * ) > = 1
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

eval_err_num:603
easy pred: select name from friend where name = 1
easy gold: SELECT name FROM highschooler

eval_err_num:604
easy pred: select name from friend where id in ( select id from friend )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 5)

eval_err_num:605
easy pred: select name from friend where id in ( select id from friend group by name having count ( * ) > = 1 )
easy gold: SELECT distinct T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:606
hard pred: select t2 . name from friend as t1 join student_id as t2 on t1 . id = t2 . id where t1 . friend in ( select name from friend where friend in ( select id from friend group by name having count ( * ) > = 1 ) )
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:607
easy pred: select id from friend
easy gold: SELECT student_id FROM Friend

eval_err_num:608
medium pred: select id , id , friend from friend
medium gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id

eval_err_num:609
extra pred: select id , friend , friend from friend
extra gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id where T1.student_id in (SELECT liked_id FROM Likes)

eval_err_num:610
hard pred: select id from friend where id not in ( select id from friend )
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

eval_err_num:611
easy pred: select count ( * ) from friend as t1 join friend as t2 on t1 . id = t2 . id
easy gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:612
easy pred: select name from friend
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:613
easy pred: select count ( distinct name ) from friend
easy gold: SELECT count (*) FROM (SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id)

eval_err_num:614
hard pred: select distinct name from friend
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:615
hard pred: select name from friend where id not in ( select id from friend )
hard gold: SELECT name FROM Highschooler where ID not in (SELECT student_id FROM Likes)

eval_err_num:616
easy pred: select name from friend where id not in ( select id from friend )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:617
medium pred: select name , count ( * ) from friend where id not in ( select id from friend )
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:618
easy pred: select count ( name ) from friend where id in ( select id from friend )
easy gold: SELECT count(distinct student_id) FROM likes

eval_err_num:619
easy pred: select name from friend where id in ( select id from friend )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:620
extra pred: select count ( * ) from friend as t1 join friend as t2 on t1 . id = t2 . id group by t1 . name order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:621
extra pred: select count ( * ) from friend as t1 join friend as t2 on t1 . id = t2 . id group by t1 . name order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:622
easy pred: select name from student_id
easy gold: SELECT name FROM highschooler

eval_err_num:623
medium pred: select name from student_id group by name having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  1

eval_err_num:624
medium pred: select name from friend group by name having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:625
medium pred: select name from friend
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:626
medium pred: select name from friend group by name having count ( * ) > = 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:627
medium pred: select t1 . name , t1 . grade from student_id as t1 join friend as t2 on t1 . id = t2 . id join friend as t3 on t1 . id = t3 . id group by t1 . id having count ( * ) > = 1
medium gold: SELECT T2.name, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:628
hard pred: select t1 . name from friend as t1 join friend as t2 on t1 . id = t2 . id where grade > 1 intersect select name from friend where grade > 1
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:629
easy pred: select grade from friend where name = 1
easy gold: SELECT grade FROM highschooler where name = "Kyle"

eval_err_num:630
medium pred: select count ( * ) from friend where name = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:631
hard pred: select t1 . name from student_id as t1 join grade as t2 on t1 . id = t2 . name where t2 . name = 1
hard gold: SELECT T3.name  FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id JOIN Highschooler as T3 on T3.ID = T1.student_id WHERE T2.name  =  "Kyle"

eval_err_num:632
medium pred: select count ( * ) from friend where name = 1
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:633
medium pred: select distinct id , grade from student_id
medium gold: SELECT id, grade FROM highschooler

eval_err_num:634
easy pred: select avg ( grade ) from student_id
easy gold: SELECT avg(grade) FROM highschooler

eval_err_num:635
extra pred: select student_id from student_id except select t1 . name , t1 . grade from student_id as t1 join friend as t2 on t1 . id = t2 . id
extra gold: SELECT avg(grade) FROM Highschooler WHERE id not IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:636
hard pred: select name from student_id except select t1 . name from friend as t1 join friend as t2 on t1 . id = t2 . id
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

easy pred: select age from teacher
easy gold: SELECT Hometown FROM teacher

eval_err_num:637
medium pred: select t2 . hometown , t1 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id
medium gold: SELECT Age ,  Hometown FROM teacher

eval_err_num:638
easy pred: select t2 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id where t2 . hometown ! = 1
easy gold: SELECT * FROM teacher WHERE Hometown != "Little Lever Urban Distric"

eval_err_num:639
medium pred: select teacher from teacher order by age asc limit 1
medium gold: SELECT * FROM teacher ORDER BY Age ASC LIMIT 1

eval_err_num:640
easy pred: select teacher from teacher order by hometown
easy gold: SELECT * FROM teacher order BY Hometown

eval_err_num:641
medium pred: select count ( * ) , t2 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . hometown
medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown

easy pred: select hometown , count ( * ) from teacher group by hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

hard pred: select hometown , count ( * ) from teacher group by hometown order by count ( * ) desc limit 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:642
easy pred: select t2 . hometown , count ( * ) from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:643
easy pred: select t2 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . hometown having count ( * ) > = 1
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

easy pred: select * from course
easy gold: SELECT * FROM course_arrange

eval_err_num:644
medium pred: select t2 . course from course as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id where t1 . name = 1
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

easy pred: select * from course
easy gold: SELECT * FROM course_arrange

eval_err_num:645
medium pred: select t1 . name from course as t1 join course_arrange as t2 on t1 . teacher_id = t2 . teacher_id where t2 . name = 1
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:646
hard pred: select t1 . name , t2 . name from course as t1 join course_arrange as t2 on t1 . teacher_id = t2 . teacher_id where t2 . name = 1
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

easy pred: select * from course
easy gold: SELECT * FROM course_arrange

eval_err_num:647
medium pred: select t1 . name from course as t1 join course_arrange as t2 on t1 . teacher_id = t2 . teacher_id where t2 . name = 1
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:648
hard pred: select t2 . name from course as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id where t1 . name = 1
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

eval_err_num:649
medium pred: select t1 . name , count ( * ) from teacher as t1 join course as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:650
medium pred: select t1 . name , count ( * ) from teacher as t1 join course as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:651
medium pred: select t2 . name from course as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . teacher_id having count ( * ) > = 1
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

eval_err_num:652
easy pred: select * from other_available_features as t1 join other_available_features as t2 on t1 . feature_id = t2 . feature_id where t2 . feature_name = 1
easy gold: SELECT * FROM Other_Available_Features WHERE feature_name  =  "AirCon"

eval_err_num:653
medium pred: select feature_type_name from ref_feature_types where feature_name = 1
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"

easy pred: select property_type_description from ref_property_types
easy gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code

medium pred: select property_type_description , property_type_description from ref_property_types
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

eval_err_num:654
easy pred: select area_code , state from contestants
easy gold: SELECT * FROM area_code_state

eval_err_num:655
easy pred: select count ( * ) from state
easy gold: SELECT count(*) FROM area_code_state

eval_err_num:656
medium pred: select t1 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id order by t2 . contestant_name desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

easy pred: select * from votes
easy gold: SELECT state FROM votes

medium pred: select vote_id , vote_id from votes
medium gold: SELECT vote_id,  state FROM votes

eval_err_num:657
medium pred: select vote_id , phone_number , phone_number from contestants
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

eval_err_num:658
easy pred: select area_code from state
easy gold: SELECT area_code FROM area_code_state

eval_err_num:659
easy pred: select max ( area_code ) from state
easy gold: SELECT max(area_code) FROM area_code_state

eval_err_num:660
easy pred: select area_code from state order by area_code asc limit 1
easy gold: SELECT min(area_code) FROM area_code_state

eval_err_num:661
medium pred: select * from contestants order by area_code asc limit 1
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

eval_err_num:662
easy pred: select votes from contestants
easy gold: SELECT * FROM votes

eval_err_num:663
easy pred: select votes from contestants where state = 1
easy gold: SELECT * FROM votes WHERE state  =  'CA'

eval_err_num:664
easy pred: select created from contestants where state = 1 and state = 1
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

eval_err_num:665
easy pred: select votes from contestants
easy gold: SELECT * FROM votes

eval_err_num:666
easy pred: select state from contestants group by state
easy gold: SELECT state FROM votes

eval_err_num:667
medium pred: select distinct state , count ( * ) from contestants group by state
medium gold: SELECT DISTINCT state ,  created FROM votes

eval_err_num:668
easy pred: select votes from contestants
easy gold: SELECT * FROM votes

eval_err_num:669
medium pred: select t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . votes group by t1 . vote_id having count ( * ) > = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

eval_err_num:670
medium pred: select t2 . contestant_number , t1 . contestant_name from contestants as t1 join votes as t2 on t1 . vote_id = t2 . vote_id group by t1 . vote_id having count ( * ) > = 1
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

eval_err_num:671
easy pred: select votes from contestants
easy gold: SELECT * FROM votes

eval_err_num:672
extra pred: select t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id group by t1 . vote_id order by votes asc limit 1
extra gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

eval_err_num:673
extra pred: select t2 . contestant_number , t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id group by t1 . vote_id order by votes asc limit 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

eval_err_num:674
easy pred: select votes from contestants
easy gold: SELECT * FROM votes

eval_err_num:675
medium pred: select votes from contestants where state = 1 or state = 1
medium gold: SELECT * FROM votes WHERE state  =  'NY' OR state  =  'CA'

eval_err_num:676
medium pred: select count ( votes ) from votes where votes = 1 or state = 1
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

eval_err_num:677
hard pred: select * from contestants where vote_id not in ( select vote_id from votes )
hard gold: SELECT * FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

eval_err_num:678
extra pred: select count ( * ) from contestants where vote_id not in ( select vote_id from votes )
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

eval_err_num:679
easy pred: select area_code , state from contestants
easy gold: SELECT * FROM area_code_state

eval_err_num:680
easy pred: select votes from contestants
easy gold: SELECT * FROM votes

eval_err_num:681
medium pred: select count ( * ) , area_code from contestants group by area_code
medium gold: SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code

eval_err_num:682
extra pred: select t1 . area_code from area_code as t1 join votes as t2 on t1 . area_code = t2 . vote_id group by t1 . area_code order by votes desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:683
easy pred: select votes from contestants
easy gold: SELECT * FROM votes

eval_err_num:684
medium pred: select votes from contestants where contestant_name = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:685
medium pred: select t1 . created , t1 . state , t1 . phone_number from contestants as t1 join votes as t2 on t1 . vote_id = t2 . vote_id join contestants as t3 on t2 . vote_id = t3 . vote_id where t1 . contestant_name = 1
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:686
easy pred: select area_code from state
easy gold: SELECT * FROM area_code_state

eval_err_num:687
hard pred: select distinct area_code from contestants where contestant_name = 1
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:688
extra pred: select area_code from contestants where contestant_name = 1 and contestant_number = 1
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

eval_err_num:689
extra pred: select course_description from transcripts order by degree_programs desc limit 1
extra gold: SELECT T2.department_description ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:690
extra pred: select t1 . department_name , t1 . student_id from transcripts as t1 join departments as t2 on t1 . department_id = t2 . department_id group by t1 . department_name order by count ( * ) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:691
medium pred: select * from courses as t1 join courses as t2 on t1 . department_id = t2 . department_id where t1 . department_name = 1
medium gold: SELECT * FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:692
medium pred: select count ( * ) from courses as t1 join courses as t2 on t1 . department_id = t2 . department_id join departments as t3 on t2 . department_id = t3 . department_id where t3 . department_name = 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:693
medium pred: select * from sections as t1 join sections as t2 on t1 . course_id = t2 . course_id group by t1 . course_id having count ( * ) = 1
medium gold: SELECT * FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  =  2

eval_err_num:694
medium pred: select t1 . course_name , t1 . course_id from courses as t1 join sections as t2 on t1 . course_id = t2 . course_id group by t1 . course_id having count ( * ) < = 1
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

eval_err_num:695
extra pred: select first_name , last_name from students group by semester_id order by count ( * ) asc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:696
extra pred: select semesters , last_name , count ( * ) from student_enrolment group by semesters , last_name order by count ( * ) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

medium pred: select department_name from departments where department_name like 1
medium gold: SELECT * FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:697
medium pred: select course_description from departments where department_name like 1
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:698
medium pred: select count ( * ) from semesters where semesters = 1 and last_name = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:699
medium pred: select first_name , last_name , last_name from courses where semesters = 1 and last_name = 1
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:700
hard pred: select count ( * ) from degree_programs where degree_programs = 1
hard gold: SELECT DISTINCT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:701
hard pred: select first_name , last_name , last_name from students where degree_programs = 1
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:702
extra pred: select * from degree_programs as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_description order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 3

eval_err_num:703
extra pred: select t1 . first_name , t1 . last_name from courses as t1 join student_enrolment as t2 on t1 . degree_program_id = t2 . degree_program_id group by t1 . course_name order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:704
extra pred: select t1 . course_description from degree_programs as t1 join student_enrolment as t2 on t1 . degree_program_id = t2 . degree_program_id group by t1 . course_name order by count ( * ) asc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:705
extra pred: select t1 . course_name from degree_programs as t1 join student_enrolment as t2 on t1 . degree_program_id = t2 . degree_program_id group by t1 . course_name order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:706
extra pred: select t1 . course_id , t1 . course_description from degree_programs as t1 join student_enrolment as t2 on t1 . degree_program_id = t2 . degree_program_id group by t1 . degree_program_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:707
extra pred: select t1 . student_id , t1 . first_name , t1 . last_name from students as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 3

eval_err_num:708
extra pred: select student_id , first_name , last_name from students order by semesters desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:709
hard pred: select section_description from students where semesters = 1 and last_name = 1
hard gold: SELECT semester_description FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:710
hard pred: select first_name from students where semesters = 1 and last_name = 1
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:711
extra pred: select t1 . course_name from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_id order by count ( * ) asc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) ASC LIMIT 1

eval_err_num:712
extra pred: select count ( * ) from courses as t1 join courses as t2 on t1 . course_id = t2 . course_id group by t1 . course_id order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:713
extra pred: select t1 . course_name from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

medium pred: select count ( * ) from addresses where city = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina'

eval_err_num:714
extra pred: select count ( * ) from students where address_id not in ( select student_id from transcripts where state_province_county = 1 )
extra gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:715
extra pred: select last_name from students where address_id not in ( select student_id from transcripts where state_province_county = 1 )
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:716
medium pred: select t1 . date_first_registered , t1 . date_left from transcripts as t1 join transcripts as t2 on t1 . course_id = t2 . course_id group by t1 . student_id having count ( * ) = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  = 2

eval_err_num:717
medium pred: select t1 . date_first_registered , t1 . semester_id from transcripts as t1 join transcripts as t2 on t1 . course_id = t2 . course_id group by t1 . student_id having count ( * ) > = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

medium pred: select email_address from students where first_name = 1 and last_name = 1
medium gold: SELECT current_address_id FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

medium pred: select first_name , last_name , last_name from students order by date_left limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered DESC LIMIT 1

eval_err_num:718
medium pred: select t1 . first_name , t1 . last_name , t1 . date_left from transcripts as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

eval_err_num:719
medium pred: select first_name , last_name , last_name from transcripts order by date_first_registered asc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left DESC LIMIT 1

eval_err_num:720
medium pred: select t1 . first_name , t1 . last_name , t1 . date_first_registered from transcripts as t1 join transcripts as t2 on t1 . student_id = t2 . student_id join students as t3 on t2 . student_id = t3 . student_id where t3 . date_first_registered = 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

eval_err_num:721
extra pred: select address_id from transcripts group by address_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:722
extra pred: select count ( * ) from addresses as t1 join students as t2 on t1 . address_id = t2 . address_id group by t1 . address_id order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:723
extra pred: select t1 . first_name , t1 . last_name from transcripts as t1 join students as t2 on t1 . address_id = t2 . address_id group by t1 . address_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:724
medium pred: select date_first_registered from transcripts order by date_first_registered asc limit 1
medium gold: SELECT other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:725
medium pred: select first_name , last_name , other_details from transcripts where date_first_registered like 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:726
medium pred: select date_first_registered from transcripts order by date_first_registered limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:727
medium pred: select date_first_registered from transcripts order by date_first_registered limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:728
hard pred: select t1 . course_id , t1 . semester_id from student_enrolment as t1 join students as t2 on t1 . course_id = t2 . course_id
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:729
hard pred: select count ( * ) from transcripts as t1 join students as t2 on t1 . course_id = t2 . course_id group by t1 . course_id having count ( * ) < = 1
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:730
extra pred: select t1 . transcript_contents from transcripts as t1 join transcripts as t2 on t1 . transcript_id = t2 . transcript_contents
extra gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:731
extra pred: select t1 . date_first_registered , t1 . transcript_id from transcripts as t1 join transcripts as t2 on t1 . ssn = t2 . transcript_id group by t1 . transcript_id
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:732
medium pred: select semesters from student_enrolment where semesters = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'

eval_err_num:733
medium pred: select semesters from student_enrolment where semesters = 1 and last_name = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:734
extra pred: select semesters , last_name from student_enrolment where semesters = 1 intersect select semesters from student_enrolment where semesters = 1 and last_name = 1
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:735
hard pred: select state from professionals group by state having count ( * ) = 1 intersect select state from professionals where name = 1
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

easy pred: select * from dogs
easy gold: SELECT age FROM Dogs

eval_err_num:736
medium pred: select max ( age ) , min ( charge_amount ) from treatment_types
medium gold: SELECT max(age), min(age) FROM Dogs

hard pred: select * from dogs where dog_id in ( select dog_id from dogs )
hard gold: SELECT * FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:737
hard pred: select avg ( age ) from professionals
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

easy pred: select * from professionals
easy gold: SELECT * FROM Professionals WHERE role_code = 'Employee'

easy pred: select count ( * ) from professionals where state = 1 and state = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Indiana'

eval_err_num:738
medium pred: select * from professionals as t1 join professionals as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . owner_id having count ( * ) = 1 union select * from professionals as t1 join professionals as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . owner_id having count ( * ) = 1
medium gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1

eval_err_num:739
extra pred: select t1 . owner_id , t1 . last_name , t1 . home_phone from professionals as t1 join breeds as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . treatment_id having count ( * ) > = 1 union select t1 . owner_id , t1 . last_name , t1 . home_phone from professionals as t1 join breeds as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . treatment_id having count ( * ) > = 1
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

eval_err_num:740
medium pred: select name , charges from dogs
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:741
medium pred: select name from dogs where charges > 1
medium gold: SELECT name FROM Treatments  AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 500

eval_err_num:742
hard pred: select name from dogs where charge_amount > 1
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

eval_err_num:743
hard pred: select name from professionals where role_code = 1
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

eval_err_num:744
easy pred: select name from professionals where professional_id in ( select dog_id from professionals )
easy gold: SELECT name FROM Dogs

eval_err_num:745
hard pred: select name from professionals except select t1 . name from professionals as t1 join breeds as t2 on t1 . treatment_id = t2 . treatment_id
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:746
medium pred: select first_name , breeds from treatment_types
medium gold: SELECT T1.first_name, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:747
medium pred: select name , zip_code from professionals
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.email_address, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:748
extra pred: select t1 . professional_id , t1 . email_address , t1 . email_address from professionals as t1 join treatment_types as t2 on t1 . treatment_id = t2 . treatment_id
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: select owner_id , count ( * ) from dogs group by owner_id
medium gold: SELECT T1.owner_id ,count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id

medium pred: select owner_id from owners group by owner_id having count ( * ) = 1
medium gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name, count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id Having count(*) = 2

eval_err_num:749
extra pred: select owner_id from owners order by dogs desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:750
medium pred: select count ( * ) from professionals as t1 join breeds as t2 on t1 . role_code = t2 . treatment_id group by t2 . role_code
medium gold: SELECT T1.professional_id , count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:751
medium pred: select first_name from professionals as t1 join breeds as t2 on t1 . treatment_id = t2 . treatment_id group by t2 . first_name having count ( * ) = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) = 1

eval_err_num:752
medium pred: select t2 . first_name from treatments as t1 join professionals as t2 on t1 . role_code = t2 . treatment_id group by t2 . first_name having count ( * ) > = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) >= 2

eval_err_num:753
medium pred: select t1 . treatment_id , t1 . first_name , t1 . role_code from professionals as t1 join breeds as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . owner_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:754
medium pred: select zip_code , count ( * ) from dogs group by zip_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

eval_err_num:755
medium pred: select zip_code from breeds group by zip_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 2

eval_err_num:756
medium pred: select zip_code from breeds group by zip_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 1

eval_err_num:757
extra pred: select name from breeds order by breeds desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:758
medium pred: select name , charges from dogs
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:759
hard pred: select name , charges from professionals
hard gold: SELECT T1.owner_id, T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id

eval_err_num:760
extra pred: select t1 . name , t1 . last_name from owners as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id group by t1 . owner_id order by count ( * ) desc limit 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

easy pred: select treatment_type_code , treatment_type_description from treatment_types
easy gold: SELECT * FROM Treatment_Types

eval_err_num:761
extra pred: select sum ( charges ) , sum ( charges ) from treatments group by treatment_type_code order by sum ( charges ) desc
extra gold: SELECT treatment_type_code, sum(cost_of_treatment) FROM Treatments group by treatment_type_code order by sum(cost_of_treatment) desc

eval_err_num:762
extra pred: select t1 . treatment_type_description , t2 . treatment_type_description , t2 . size_description from treatments as t1 join treatment_types as t2 on t1 . treatment_type_code = t2 . treatment_type_code order by t1 . charge_amount desc
extra gold: SELECT T2.treatment_type_code, T1.treatment_type_description,  sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:763
extra pred: select t2 . treatment_type_description , t2 . treatment_type_description from treatments as t1 join treatment_types as t2 on t1 . treatment_type_code = t2 . treatment_type_code group by t1 . treatment_type_description order by sum ( t1 . charges ) asc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:764
medium pred: select name , charges from dogs
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:765
medium pred: select count ( * ) from dogs where charge_amount > 1
medium gold: SELECT count(name) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 700

eval_err_num:766
hard pred: select name , zip_code from professionals where charges > 1 and charge_amount > 1
hard gold: SELECT T1.owner_id ,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id Having sum(T3.cost_of_treatment) > 400

eval_err_num:767
extra pred: select t1 . owner_id , t1 . zip_code from owners as t1 join charges as t2 on t1 . owner_id = t2 . owner_id where t2 . charge_amount > 1 order by t2 . charges desc limit 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

eval_err_num:768
medium pred: select first_name , breeds from professionals
medium gold: SELECT T1.first_name, T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:769
medium pred: select first_name , breeds , count ( * ) from treatments group by name
medium gold: SELECT T1.first_name, T2.treatment_type_code, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:770
medium pred: select t1 . treatment_id , t1 . home_phone from professionals as t1 join breeds as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . dog_id having count ( * ) = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  = 1

eval_err_num:771
medium pred: select t1 . treatment_id , t1 . home_phone from professionals as t1 join breeds as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . dog_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:772
medium pred: select min ( charges ) , max ( charges ) , avg ( charges ) from treatment_types
medium gold: SELECT min(cost_of_treatment), max(cost_of_treatment), avg(cost_of_treatment) FROM Treatments

eval_err_num:773
extra pred: select first_name , last_name , avg ( charges ) from professionals group by first_name
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT min(cost_of_treatment) FROM Treatments )

eval_err_num:774
extra pred: select first_name , last_name , avg ( charges ) from professionals where treatment_type_code = ( select min ( charges ) from treatment_types )
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT max(cost_of_treatment) FROM Treatments )

eval_err_num:775
extra pred: select avg ( charges ) from professionals where charge_id not in ( select min ( charges ) from professionals )
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

eval_err_num:776
medium pred: select zip_code , count ( * ) from dogs group by zip_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

eval_err_num:777
hard pred: select zip_code from dogs group by zip_code order by count ( * ) desc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) DESC LIMIT 1

hard pred: select zip_code from professionals group by zip_code order by count ( * ) asc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) ASC LIMIT 1

eval_err_num:778
extra pred: select t3 . date_adopted from breeds as t1 join dogs as t2 on t1 . dog_id = t2 . dog_id join sizes as t3 on t2 . dog_id = t3 . dog_id group by t1 . name order by count ( * ) asc limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:779
medium pred: select name from owners where city = 1
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

eval_err_num:780
medium pred: select t1 . name from owners as t1 join breeds as t2 on t1 . treatment_id = t2 . owner_id join professionals as t3 on t2 . treatment_id = t3 . treatment_id where t3 . city = 1
medium gold: SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

eval_err_num:781
medium pred: select t1 . name from owners as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id join professionals as t3 on t2 . treatment_id = t3 . treatment_id where t3 . city = 1
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

medium pred: select * from dogs order by age desc limit 1
medium gold: SELECT * FROM Dogs order by age asc limit 1

eval_err_num:782
extra pred: select last_name from dogs order by age desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

eval_err_num:783
extra pred: select last_name from owners order by age desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT min(age) FROM Dogs )

eval_err_num:784
medium pred: select distinct t1 . email_address from professionals as t1 join professionals as t2 on t1 . treatment_id = t2 . treatment_id where t2 . state = 1 or t2 . state = 1
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

medium pred: select zip_code , count ( * ) from professionals where city = 1 group by role_code
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE state = 'Wisconsin'

medium pred: select role_code from professionals where city like 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

eval_err_num:785
easy pred: select count ( * ) from owners where name like 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Vermont'

easy pred: select * from dogs order by age desc
easy gold: SELECT age FROM Dogs ORDER BY age

easy pred: select count ( * ) from dogs where size_code < 1
easy gold: SELECT count(*) FROM Dogs WHERE age  < 4

hard pred: select count ( * ) from dogs where size_code < 1
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

eval_err_num:786
easy pred: select * from treatments order by charges asc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment ASC

eval_err_num:787
easy pred: select * from treatments order by charges desc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment DESC

eval_err_num:788
medium pred: select * from treatments order by charges desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

easy pred: select * from owners
easy gold: SELECT count(*) FROM Dogs

eval_err_num:789
hard pred: select count ( * ) from owners as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id where t2 . first_name = 1 and t2 . last_name = 1
hard gold: SELECT count(*) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

extra pred: select * from owners where owner_id not in ( select owner_id from owners )
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

extra pred: select * from owners where state ! = 1
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

                     easy                 medium               hard                 extra                all                  joint_all           
count                481                  441                  145                  133                  1200                 421                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.407                0.120                0.034                0.000                0.212                0.088               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.914                0.711                0.684                0.455                0.835                0.000               
select(no AGG)       0.921                0.711                0.684                0.636                0.844                0.000               
where                0.696                0.613                0.333                0.286                0.612                0.000               
where(no OP)         0.732                0.613                0.667                0.429                0.670                0.000               
group(no Having)     0.786                0.867                0.700                0.750                0.810                0.000               
group                0.786                0.867                0.700                0.750                0.810                0.000               
order                0.538                0.522                1.000                1.000                0.653                0.000               
and/or               1.000                0.930                0.910                0.880                0.950                0.000               
IUEN                 0.000                0.000                1.000                0.000                0.500                0.000               
keywords             0.854                0.808                0.947                0.545                0.826                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.507                0.184                0.090                0.038                0.286                0.000               
select(no AGG)       0.511                0.184                0.090                0.053                0.289                0.000               
where                0.265                0.111                0.038                0.027                0.133                0.000               
where(no OP)         0.279                0.111                0.076                0.040                0.146                0.000               
group(no Having)     0.524                0.218                0.189                0.049                0.197                0.000               
group                0.524                0.218                0.189                0.049                0.197                0.000               
order                0.368                0.174                0.184                0.060                0.157                0.000               
and/or               0.998                0.998                0.992                1.000                0.997                0.000               
IUEN                 0.000                0.000                0.050                0.000                0.023                0.000               
keywords             0.374                0.180                0.124                0.045                0.193                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.652                0.292                0.159                0.069                0.426                1.000               
select(no AGG)       0.658                0.292                0.159                0.097                0.431                1.000               
where                0.384                0.188                0.068                0.049                0.219                1.000               
where(no OP)         0.404                0.188                0.136                0.073                0.240                1.000               
group(no Having)     0.629                0.349                0.298                0.092                0.318                1.000               
group                0.629                0.349                0.298                0.092                0.318                1.000               
order                0.438                0.261                0.310                0.113                0.253                1.000               
and/or               0.999                0.962                0.949                0.936                0.973                1.000               
IUEN                 1.000                1.000                0.095                1.000                0.043                1.000               
keywords             0.520                0.294                0.220                0.083                0.312                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                421                  421                  269                  88                   1                   

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.366                0.147                0.134                0.023                0.000               
