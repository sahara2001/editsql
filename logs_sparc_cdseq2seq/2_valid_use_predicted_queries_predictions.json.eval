eval_err_num:1
easy pred: select distinct uid from airlines where airlines = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:2
easy pred: select country from airlines where country = 1 order by airlines
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:3
easy pred: select abbreviation from airports
easy gold: SELECT Abbreviation FROM AIRLINES

easy pred: select abbreviation from airlines where airline like 1
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:4
medium pred: select t1 . abbreviation , t1 . destairport from airports as t1 join airports as t2 on t1 . uid = t2 . uid where t1 . city = 1 and t2 . city = 1
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

easy pred: select airline from airlines where abbreviation like 1
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

medium pred: select city , country from airports where country = 1
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

eval_err_num:5
easy pred: select airline from airports where abbreviation like 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

eval_err_num:6
easy pred: select * from airports where abbreviation = 1
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

easy pred: select * from flights where flightno = 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:7
easy pred: select count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . flights where t1 . airline = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:8
easy pred: select * from flights where countryabbrev = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:9
easy pred: select count ( * ) from flights where abbreviation = 1
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:10
medium pred: select * from flights where abbreviation = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:11
medium pred: select count ( * ) from flights where abbreviation = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select * from flights where destairport = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

medium pred: select count ( * ) from flights where destairport = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:12
medium pred: select * from flights where airportname like 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:13
hard pred: select * from flights as t1 join airports as t2 on t1 . uid = t2 . uid where t1 . countryabbrev = 1 and t1 . abbreviation = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:14
hard pred: select count ( * ) from flights as t1 join airports as t2 on t1 . uid = t2 . uid join flights as t3 on t2 . uid = t3 . uid where t3 . abbreviation = 1 and t3 . abbreviation = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:15
medium pred: select * from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t1 . airline = 1
medium gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:16
medium pred: select count ( * ) from flights where airlines = 1
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:17
easy pred: select * from airlines as t1 join airlines as t2 on t1 . uid = t2 . airlines where t1 . airline = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:18
easy pred: select count ( * ) from airlines where airlines = 1
easy gold: SELECT count(*) FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:19
medium pred: select count ( * ) from airlines as t1 join flights as t2 on t1 . uid = t2 . uid join flights as t3 on t2 . uid = t3 . uid where t3 . abbreviation = 1 and t3 . abbreviation = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

eval_err_num:20
easy pred: select * from airlines as t1 join airlines as t2 on t1 . uid = t2 . airlines where t1 . airline = 1
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

eval_err_num:21
medium pred: select * from airlines where airlines = 1 and country = 1
medium gold: SELECT * FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

eval_err_num:22
medium pred: select count ( * ) from airlines where airlines like 1 and destairport = 1
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

hard pred: select * from flights where airline = 1 and destairport = 1
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

hard pred: select count ( * ) from flights where airline = 1 and destairport = 1
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

easy pred: select distinct city from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:23
hard pred: select distinct city from airports order by flightno
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select city from airports group by city order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

easy pred: select distinct city from airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport

eval_err_num:24
hard pred: select t1 . city from airports as t1 join flights as t2 on t1 . uid = t2 . uid group by t1 . uid order by count ( * ) desc
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC

extra pred: select city from airports group by city order by count ( * ) desc limit 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

eval_err_num:25
easy pred: select uid from flights where flights = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:26
easy pred: select distinct t2 . airportname , t2 . flights from flights as t1 join flights as t2 on t1 . uid = t2 . uid join flights as t3 on t2 . uid = t3 . uid where t3 . flights = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

eval_err_num:27
extra pred: select t1 . uid , t1 . flightno from airports as t1 join flights as t2 on t1 . uid = t2 . uid group by t1 . uid order by count ( * ) desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

eval_err_num:28
easy pred: select uid from flights where flights = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

eval_err_num:29
easy pred: select distinct t2 . airportname , t2 . flights from flights as t1 join flights as t2 on t1 . uid = t2 . uid join flights as t3 on t2 . uid = t3 . uid where t3 . flights = 1
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

eval_err_num:30
extra pred: select t1 . uid , t1 . flightno from airports as t1 join flights as t2 on t1 . uid = t2 . uid group by t1 . uid order by count ( * ) desc limit 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

eval_err_num:31
medium pred: select count ( * ) from flights as t1 join flights as t2 on t1 . uid = t2 . uid join flights as t3 on t2 . flights = t3 . flights group by t1 . uid order by count ( * ) desc limit 1
medium gold: SELECT count(*) ,  T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline

eval_err_num:32
extra pred: select t1 . airline from airlines as t1 join flights as t2 on t1 . uid = t2 . airlines group by t1 . uid order by count ( * ) desc limit 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

medium pred: select country , country from airlines
medium gold: SELECT Abbreviation ,  Country FROM AIRLINES

eval_err_num:33
hard pred: select country , country from flights group by country order by count ( * ) desc
hard gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*)

extra pred: select country from airlines group by country order by count ( * ) desc limit 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

eval_err_num:34
easy pred: select * from flights where airportname like 1
easy gold: SELECT * FROM FLIGHTS WHERE SourceAirport  =  "AHD"

eval_err_num:35
medium pred: select distinct t2 . airline from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t1 . countryabbrev = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

eval_err_num:36
easy pred: select uid from flights where abbreviation = 1
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "AHD"

eval_err_num:37
medium pred: select distinct t2 . airline from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t1 . countryabbrev = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

eval_err_num:38
medium pred: select t1 . uid from airlines as t1 join airports as t2 on t1 . uid = t2 . uid where t1 . airline = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

eval_err_num:39
extra pred: select t1 . airline from airlines as t1 join airports as t2 on t1 . uid = t2 . uid where t1 . t1 . t1 . t1 . t1 . airline = 1 and t2 . destairport = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:40
medium pred: select distinct t2 . airline from flights as t1 join flights as t2 on t1 . uid = t2 . airlines where t1 . airline = 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:41
extra pred: select airline from flights where airlines = 1 and destairport = 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

easy pred: select * from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

eval_err_num:42
medium pred: select * from airlines where flightno > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

easy pred: select * from airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

eval_err_num:43
medium pred: select distinct uid from flights where flightno > 1
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

eval_err_num:44
medium pred: select * from flights where country = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

easy pred: select * from flights where flightno = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:45
easy pred: select count ( * ) , t1 . flightno from flights as t1 join flights as t2 on t1 . uid = t2 . uid where t1 . countryabbrev = 1
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

easy pred: select flightno from flights order by flightno
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode

eval_err_num:46
medium pred: select flightno from flights where flights like 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

easy pred: select flightno from flights order by flightno
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode

eval_err_num:47
medium pred: select flightno from flights where flights = 1
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:48
medium pred: select * from flights where abbreviation = 1
medium gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen"

eval_err_num:49
hard pred: select * from flights as t1 join airports as t2 on t1 . uid = t2 . destairport where t1 . countryabbrev = 1 or t1 . city = 1
hard gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

eval_err_num:50
hard pred: select count ( * ) from flights as t1 join airports as t2 on t1 . uid = t2 . destairport where t1 . countryabbrev = 1 and t1 . abbreviation = 1
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

easy pred: select * from airports
easy gold: SELECT SourceAirport FROM Flights

eval_err_num:51
hard pred: select * from airports as t1 join airports as t2 on t1 . uid = t2 . uid
hard gold: SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights

eval_err_num:52
hard pred: select * from airports where destairport not in ( select destairport from airports )
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

eval_err_num:53
easy pred: select * from pets where pets > 1
easy gold: SELECT * FROM pets WHERE weight  >  10

eval_err_num:54
easy pred: select count ( * ) from pets where pets > 1
easy gold: SELECT count(*) FROM pets WHERE weight  >  10

eval_err_num:55
easy pred: select * from pets order by age
easy gold: SELECT * FROM pets ORDER BY pet_age

eval_err_num:56
easy pred: select pets from pets
easy gold: SELECT weight FROM pets ORDER BY pet_age

eval_err_num:57
medium pred: select fname from pets order by age desc limit 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:58
medium pred: select * from pets where age > 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:59
medium pred: select count ( * ) from pets where age > 1
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:60
medium pred: select * from student where sex = 1 and pets = 1
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.sex  =  'F'

eval_err_num:61
hard pred: select count ( * ) from student where sex = 1 and pets = 1
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

easy pred: select fname from student group by stuid order by count ( * ) desc limit 1
easy gold: SELECT DISTINCT T1.Fname FROM student AS T1

eval_err_num:62
hard pred: select fname from student where petid in ( select stuid from pets )
hard gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:63
extra pred: select fname , lname from student where petid not in ( select t1 . stuid from pets as t1 join pets as t2 on t1 . stuid = t2 . stuid where t2 . weight > 1 )
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

eval_err_num:64
hard pred: select * from student as t1 join pets as t2 on t1 . petid = t2 . petid where t2 . pettype = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:65
extra pred: select t1 . fname , t1 . weight from student as t1 join pets as t2 on t1 . petid = t2 . petid where t2 . weight = 1
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:66
extra pred: select t1 . fname from student as t1 join pets as t2 on t1 . stuid = t2 . petid where t2 . weight = 1
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:67
hard pred: select * from student where petid in ( select t1 . stuid from pets as t1 join pets as t2 on t1 . stuid = t2 . petid where t2 . weight = 1 )
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:68
hard pred: select distinct t1 . weight from student as t1 join pets as t2 on t1 . stuid = t2 . petid where t2 . weight = 1
hard gold: SELECT major FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:69
extra pred: select * , t1 . age from student as t1 join pets as t2 on t1 . stuid = t2 . petid where t2 . weight = 1 and t2 . weight = 1
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

easy pred: select stuid from student group by stuid order by count ( * ) desc limit 1
easy gold: SELECT stuid FROM student

eval_err_num:70
hard pred: select stuid from student except select stuid from pets
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:71
hard pred: select stuid from student where stuid not in ( select stuid from pets )
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:72
hard pred: select * from student where petid in ( select stuid from pets )
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:73
extra pred: select * from student where petid not in ( select stuid from pets where pets = 1 )
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:74
extra pred: select fname , age from student where petid not in ( select stuid from pets where pets = 1 )
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:75
medium pred: select * from student order by weight desc limit 1
medium gold: SELECT * FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:76
medium pred: select pettype from student group by pettype order by count ( * ) desc limit 1
medium gold: SELECT pettype FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:77
medium pred: select fname , pettype from pets where petid in ( select petid from pets )
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:78
easy pred: select petid from pets where age > 1
easy gold: SELECT petid FROM pets WHERE pet_age  >  1

medium pred: select petid from pets except select petid from pets
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

eval_err_num:79
medium pred: select max ( age ) , max ( age ) from pets
medium gold: SELECT max(pet_age) ,  pettype FROM pets GROUP BY pettype

eval_err_num:80
medium pred: select avg ( age ) from pets
medium gold: SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype

eval_err_num:81
medium pred: select avg ( pets ) from pets
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

eval_err_num:82
easy pred: select stuid from student where petid in ( select stuid from pets )
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:83
easy pred: select distinct t1 . fname from student as t1 join pets as t2 on t1 . stuid = t2 . petid
easy gold: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:84
medium pred: select fname , lname , age from student where petid not in ( select t1 . stuid from pets as t1 join pets as t2 on t1 . stuid = t2 . petid group by t2 . stuid order by t1 . age limit ) 1
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:85
easy pred: select stuid from student where petid in ( select stuid from pets )
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:86
medium pred: select fname from student where petid not in ( select stuid from pets )
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:87
medium pred: select petid from student where petid not in ( select stuid from pets )
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:88
easy pred: select distinct t1 . fname , t1 . lname from student as t1 join pets as t2 on t1 . stuid = t2 . petid where t2 . pets = 1
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:89
medium pred: select pets , count ( * ) from pets group by petid
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

eval_err_num:90
medium pred: select t1 . fname , t1 . sex from student as t1 join pets as t2 on t1 . stuid = t2 . stuid group by t1 . stuid having count ( * ) > = 1
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: select stuid from student where fname = 1
medium gold: SELECT petid FROM pets WHERE pet_age  =  3 AND pettype  =  'cat'

eval_err_num:91
hard pred: select petid from student where lname = 1
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:92
hard pred: select t1 . lname from student as t1 join student as t2 on t1 . stuid = t2 . stuid where t1 . fname = 1 and t2 . weight = 1
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:93
hard pred: select * from student where petid not in ( select stuid from pets )
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

eval_err_num:94
extra pred: select avg ( age ) from student where petid in ( select stuid from pets )
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

eval_err_num:95
easy pred: select country from country
easy gold: SELECT Name FROM country

eval_err_num:96
easy pred: select name from region where id in ( select id from region where code2 > 1 )
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

eval_err_num:97
easy pred: select count ( * ) from language
easy gold: SELECT count(*) FROM country

eval_err_num:98
easy pred: select count ( * ) from country as t1 join region as t2 on t1 . id = t2 . id join sqlite_sequence as t3 on t2 . id = t3 . id where t3 . population = 1
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:99
easy pred: select country from region where country = 1
easy gold: SELECT * FROM country WHERE Region  =  "Caribbean"

eval_err_num:100
easy pred: select t1 . population from continent as t1 join region as t2 on t1 . id = t2 . id join region as t3 on t2 . id = t3 . id where t3 . country = 1
easy gold: SELECT SurfaceArea FROM country WHERE Region  =  "Caribbean"

eval_err_num:101
easy pred: select sum ( t1 . percentage ) from continent as t1 join region as t2 on t1 . id = t2 . id join region as t3 on t2 . id = t3 . id where t3 . population > = 1
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

eval_err_num:102
easy pred: select country from country
easy gold: SELECT Continent FROM country

eval_err_num:103
easy pred: select country from region where country = 1
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

eval_err_num:104
easy pred: select language from region
easy gold: SELECT Region FROM country

eval_err_num:105
medium pred: select language from region where city = 1
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

eval_err_num:106
easy pred: select language from language
easy gold: SELECT LANGUAGE FROM countrylanguage

eval_err_num:107
medium pred: select language from language where language = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:108
extra pred: select language from language group by language order by count ( * ) desc limit 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

medium pred: select population , population from country
medium gold: SELECT Population ,  LifeExpectancy FROM country

eval_err_num:109
medium pred: select population from country where country = 1
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

eval_err_num:110
easy pred: select city from city where country = 1
easy gold: SELECT Region FROM country WHERE Name  =  "Angola"

eval_err_num:111
easy pred: select population from city where country = 1 and population = 1
easy gold: SELECT Population FROM country WHERE Name  =  "Angola"

eval_err_num:112
easy pred: select population from continent
easy gold: SELECT LifeExpectancy FROM country

eval_err_num:113
easy pred: select population from region where language = 1
easy gold: SELECT LifeExpectancy FROM country WHERE Region  =  "Central Africa"

eval_err_num:114
easy pred: select avg ( population ) from continent where language = 1
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

eval_err_num:115
easy pred: select name from country where country = 1
easy gold: SELECT Name FROM country WHERE Continent  =  "Asia"

eval_err_num:116
hard pred: select name from country where country = 1 order by population desc limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

eval_err_num:117
easy pred: select count ( * ) from continent where country = 1
easy gold: SELECT sum(Population) FROM country WHERE Continent  =  "Asia"

eval_err_num:118
easy pred: select sum ( percentage ) from continent where country = 1
easy gold: SELECT max(GNP) FROM country WHERE Continent  =  "Asia"

eval_err_num:119
easy pred: select country from country where country = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Africa"

eval_err_num:120
medium pred: select country from country where country = 1 intersect select country from country where country = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:121
medium pred: select avg ( population ) from country where country = 1
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:122
medium pred: select population from country where country = 1 or country = 1
medium gold: SELECT * FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:123
medium pred: select country , count ( * ) from continent where country = 1 group by country
medium gold: SELECT SurfaceArea FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:124
medium pred: select sum ( t1 . capital ) , t1 . country from continent as t1 join region as t2 on t1 . id = t2 . id join region as t3 on t2 . id = t3 . id where t3 . country = 1 group by t3 . id
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:125
easy pred: select sum ( population ) from district where id in ( select id from city where district = 1 )
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

easy pred: select population from country
easy gold: SELECT * FROM country

eval_err_num:126
easy pred: select country from governmentform where capital = 1
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:127
medium pred: select sum ( population ) , population from country where country = 1 and population < 1
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:128
easy pred: select distinct language from language
easy gold: SELECT DISTINCT LANGUAGE FROM countrylanguage

eval_err_num:129
easy pred: select count ( distinct language ) from language
easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage

eval_err_num:130
easy pred: select distinct country from region where language = 1
easy gold: SELECT DISTINCT GovernmentForm FROM country WHERE Continent  =  "Africa"

eval_err_num:131
easy pred: select count ( distinct id ) from region where language = 1
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

eval_err_num:132
easy pred: select * from country where country = 1
easy gold: SELECT * FROM country WHERE Name  =  "Aruba"

eval_err_num:133
medium pred: select language from language where country = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:134
medium pred: select count ( * ) from language where country = 1
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:135
medium pred: select language from language where country = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan"

eval_err_num:136
medium pred: select count ( * ) from language as t1 join language as t2 on t1 . id = t2 . id join language as t3 on t2 . id = t3 . id where t3 . country = 1
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

eval_err_num:137
medium pred: select language , count ( * ) from language group by country
medium gold: SELECT count(*) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name

eval_err_num:138
extra pred: select country from language group by country order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:139
medium pred: select language , count ( * ) from region group by language
medium gold: SELECT COUNT(*) ,  T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent

eval_err_num:140
extra pred: select language from language group by language order by count ( * ) desc limit 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:141
medium pred: select population from language where language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:142
extra pred: select population from language where language = 1 or language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch"

eval_err_num:143
easy pred: select count ( * ) from language where language = 1 or language = 1
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

eval_err_num:144
medium pred: select language from language where language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English"

eval_err_num:145
extra pred: select t1 . population from language as t1 join language as t2 on t1 . id = t2 . id join language as t3 on t2 . id = t3 . id where t3 . language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

eval_err_num:146
medium pred: select country from country
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

eval_err_num:147
medium pred: select language from region where language = 1 or language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T"

eval_err_num:148
extra pred: select language from language where language = 1 intersect select language from language where language = 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

eval_err_num:149
medium pred: select population from country where language = 1
medium gold: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:150
medium pred: select distinct country from continent where country = 1
medium gold: SELECT DISTINCT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:151
medium pred: select count ( distinct country ) from continent where country = 1
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:152
easy pred: select distinct city from region
easy gold: SELECT DISTINCT Region FROM country

eval_err_num:153
hard pred: select distinct language from region where language = 1
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

eval_err_num:154
medium pred: select language from country
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE IsOfficial  =  "T"

eval_err_num:155
extra pred: select population from country where language = 1 or language = 1
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

eval_err_num:156
medium pred: select distinct language from language where country = 1
medium gold: SELECT DISTINCT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia"

eval_err_num:157
extra pred: select language from language where country = 1 intersect select language from language where country = 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

eval_err_num:158
easy pred: select country from country where id not in ( select id from continent )
easy gold: SELECT * FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:159
hard pred: select country from country group by country having count ( * ) = 1
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

eval_err_num:160
medium pred: select language from city where language = 1
medium gold: SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English"

extra pred: select name from city order by population desc limit 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

eval_err_num:161
medium pred: select name , population from country where country = 1
medium gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia"

eval_err_num:162
hard pred: select name from country where country = 1 order by population desc limit 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:163
medium pred: select country from country
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

eval_err_num:164
hard pred: select language from country where language = 1 or language = 1
hard gold: SELECT * FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:165
extra pred: select population from country where language = 1 order by population desc limit 1
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:166
hard pred: select language from language where language = 1 or language = 1
hard gold: SELECT Name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

eval_err_num:167
extra pred: select count ( * ) from country as t1 join language as t2 on t1 . id = t2 . id join language as t3 on t2 . id = t3 . id where t3 . population > 1
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

eval_err_num:168
medium pred: select country from region where name = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

eval_err_num:169
medium pred: select language from country where country = 1 and name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

eval_err_num:170
medium pred: select language from country where country = 1 intersect select language from region where name = 1
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

eval_err_num:171
easy pred: select country from country
easy gold: SELECT T1.Name FROM country AS t1

eval_err_num:172
easy pred: select name from country where country = 1
easy gold: SELECT T1.Name FROM country AS t1 WHERE  IndepYear  <  1930

eval_err_num:173
medium pred: select count ( distinct country ) from country where country = 1 and region = 1
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

eval_err_num:174
easy pred: select * from country where country = 1
easy gold: SELECT * FROM country WHERE Continent  =  "Europe"

eval_err_num:175
easy pred: select count ( * ) from continent as t1 join language as t2 on t1 . id = t2 . id where t2 . language = 1
easy gold: SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe"

eval_err_num:176
hard pred: select country from continent where country = 1 intersect select country from continent where language = 1
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

eval_err_num:177
easy pred: select population from country where country = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Asia"

eval_err_num:178
extra pred: select population from country where country = 1 and population > 1
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

eval_err_num:179
easy pred: select population from country where country = 1
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Africa"

extra pred: select population from country where population > 1 and population > 1
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

eval_err_num:180
easy pred: select country from country
easy gold: SELECT CountryCode FROM countrylanguage

eval_err_num:181
hard pred: select country from region where language = 1 intersect select country from language where language = 1
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:182
easy pred: select country from country
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage

eval_err_num:183
easy pred: select country from country where language = 1 or language = 1
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE ! =  "English"

eval_err_num:184
easy pred: select country from country where country = 1
easy gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic"

eval_err_num:185
hard pred: select country from region where language = 1 intersect select country from language where language = 1
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:186
medium pred: select language from language where language = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English'

eval_err_num:187
extra pred: select language from country where language = 1 intersect select country from language where language = 1
extra gold: SELECT Name FROM country WHERE Continent  =  'Europe' AND Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English')

eval_err_num:188
extra pred: select t1 . city from city as t1 join city as t2 on t1 . id = t2 . id join city as t3 on t2 . id = t3 . id where t3 . country = 1
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

eval_err_num:189
medium pred: select population from country where country = 1 and language = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:190
medium pred: select t3 . population from country as t1 join language as t2 on t1 . id = t2 . country where t1 . language = 1 or t2 . language = 1
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:191
hard pred: select city from country where country = 1 intersect select city from country where country = 1
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:192
medium pred: select country from country order by population desc limit 1
medium gold: SELECT * FROM country ORDER BY Population LIMIT 1

eval_err_num:193
medium pred: select name , capital , id from country order by population desc limit 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

eval_err_num:194
medium pred: select country from region order by population desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:195
medium pred: select population , name from region order by population desc limit 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:196
easy pred: select country from country
easy gold: SELECT Name FROM country

eval_err_num:197
medium pred: select country from region group by country having count ( * ) > = 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:198
medium pred: select language , count ( * ) from country as t1 join language as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > = 1
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:199
easy pred: select city , avg ( population ) from city group by city
easy gold: SELECT avg(Population) FROM city

eval_err_num:200
extra pred: select city , count ( * ) from city group by city having count ( * ) > = 1
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

eval_err_num:201
easy pred: select population from continent where population > 1
easy gold: SELECT * FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:202
medium pred: select population , count ( * ) from district where population > 1 group by country
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:203
easy pred: select * from continent where population > 1
easy gold: SELECT Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:204
medium pred: select population from continent where population > 1
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:205
medium pred: select country from region order by population desc limit 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:206
medium pred: select t1 . name , t1 . name from continent as t1 join region as t2 on t1 . id = t2 . id join region as t3 on t2 . id = t3 . id group by t1 . id order by count ( * ) desc limit 1
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:207
easy pred: select population from lifeexpectancy order by population desc
easy gold: SELECT * FROM country ORDER BY Population DESC

eval_err_num:208
medium pred: select language from region group by country order by count ( * ) desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

easy pred: select population from country order by population desc
easy gold: SELECT * FROM country ORDER BY Population

eval_err_num:209
medium pred: select language from region order by population desc limit 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

eval_err_num:210
easy pred: select country from country where country = 1
easy gold: SELECT * FROM country WHERE continent  =  "Asia"

eval_err_num:211
easy pred: select count ( * ) from country where country = 1
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

eval_err_num:212
easy pred: select country from country where country = 1
easy gold: SELECT * FROM country WHERE continent  =  "Europe"

eval_err_num:213
medium pred: select country from region where population > 1
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

eval_err_num:214
easy pred: select country from country where country = 1
easy gold: SELECT * FROM country WHERE Continent  =  "North America"

eval_err_num:215
medium pred: select country from region where population > 1 intersect select country from continent where district = 1
medium gold: SELECT * FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

eval_err_num:216
hard pred: select sum ( population ) , avg ( population ) from continent where country = 1 and population > 1
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

eval_err_num:217
easy pred: select city from city
easy gold: SELECT name FROM city

eval_err_num:218
easy pred: select language from city where population > 1
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000

eval_err_num:219
easy pred: select language from language
easy gold: SELECT LANGUAGE FROM countrylanguage

eval_err_num:220
hard pred: select language from language group by language order by count ( * ) desc limit 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

eval_err_num:221
easy pred: select t2 . title from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "Day of the Dark Knight!"

eval_err_num:222
easy pred: select * from tv_series where language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Italy"

eval_err_num:223
easy pred: select t1 . language from content as t1 join content as t2 on t1 . id = t2 . id where t2 . language = 1
easy gold: SELECT * FROM TV_Channel WHERE Country = "Poland"

eval_err_num:224
hard pred: select t1 . country , t2 . country from tv_channel as t1 join content as t2 on t1 . id = t2 . country where t2 . language = 1 intersect select t1 . country from tv_channel as t1 join content as t2 on t1 . id = t2 . id where t2 . language = 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1

eval_err_num:225
easy pred: select cartoon from tv_series where title = 1
easy gold: SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!"

eval_err_num:226
hard pred: select t2 . title from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1
hard gold: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!")

eval_err_num:227
medium pred: select count ( * ) , t1 . title from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t3 . title = 1 group by t1 . id
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel

eval_err_num:228
easy pred: select t2 . title from tv_series as t1 join package_option as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Rock TV"

eval_err_num:229
easy pred: select t1 . language from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Rock TV"

eval_err_num:230
hard pred: select t1 . language , t2 . cartoon from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1

easy pred: select title from cartoon where title = 1
easy gold: SELECT Written_by FROM Cartoon WHERE Title = "The Rise of the Blue Beetle!"

eval_err_num:231
medium pred: select t2 . title from tv_series as t1 join tv_channel as t2 on t1 . id = t2 . id where t2 . title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"

eval_err_num:232
easy pred: select t2 . country from tv_series as t1 join tv_series as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Country FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:233
easy pred: select t1 . title from tv_series as t1 join tv_channel as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t1 . title = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:234
medium pred: select t1 . title from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t1 . title = 1 and t2 . title = 1
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

eval_err_num:235
easy pred: select rating from cartoon where title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Double Down"

eval_err_num:236
easy pred: select rating from cartoon where title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "Keepers"

eval_err_num:237
medium pred: select t1 . title , t2 . cartoon from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id group by t2 . cartoon order by count ( * ) desc limit 1
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3

easy pred: select max ( directed_by ) from cartoon
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "Emily"

eval_err_num:238
easy pred: select t2 . title from tv_channel as t1 join share as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Share FROM TV_series WHERE Episode = "Emily"

eval_err_num:239
medium pred: select max ( t2 . share ) , max ( t2 . share ) from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series

eval_err_num:240
easy pred: select rating from cartoon where title = 1
easy gold: SELECT Rating FROM TV_series WHERE Episode = "A Love of a Lifetime"

eval_err_num:241
easy pred: select t1 . weekly_rank from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

eval_err_num:242
medium pred: select t2 . title from package_option as t1 join tv_channel as t2 on t1 . id = t2 . id where t2 . title = 1
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"

eval_err_num:243
easy pred: select t2 . title from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t1 . title = 1
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:244
easy pred: select language from tv_channel where title = 1
easy gold: SELECT Language FROM TV_Channel WHERE series_name = "Sky Radio"

eval_err_num:245
medium pred: select t1 . title from cartoon as t1 join cartoon as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t1 . title = 1 and t2 . title = 1
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"

eval_err_num:246
easy pred: select t1 . title from cartoon as t1 join cartoon as t2 on t1 . cartoon = t2 . cartoon where t2 . title = 1
easy gold: SELECT Original_air_date FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

eval_err_num:247
easy pred: select t2 . directed_by from tv_series as t1 join cartoon as t2 on t1 . cartoon = t2 . id where t2 . title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Fall of the Blue Beetle!"

eval_err_num:248
medium pred: select t2 . language , t2 . directed_by from tv_series as t1 join tv_series as t2 on t1 . cartoon = t2 . production_code where t2 . title = 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

eval_err_num:249
easy pred: select cartoon from tv_series where directed_by = 1 and directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Written_by = "Todd Casey"

eval_err_num:250
medium pred: select t2 . language from tv_series as t1 join tv_channel as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t1 . directed_by = 1 and t2 . directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Todd Casey'

eval_err_num:251
medium pred: select country from tv_channel where directed_by = 1
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by  =  'Steven Melching'

eval_err_num:252
hard pred: select country from tv_channel where directed_by = 1 and directed_by = 1
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

easy pred: select title from cartoon where title = 1
easy gold: SELECT Production_code FROM Cartoon WHERE Title = "Deep Cover for Batman!"

eval_err_num:253
extra pred: select t2 . series_name from tv_series as t1 join cartoon as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t1 . written_by = 1 and t2 . directed_by = 1
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

eval_err_num:254
easy pred: select t2 . country from tv_series as t1 join tv_channel as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT Country FROM TV_Channel WHERE series_name = "MTV Music"

eval_err_num:255
easy pred: select count ( * ) from tv_channel as t1 join tv_channel as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT COUNT(*) FROM TV_Channel WHERE Country = "Italy"

eval_err_num:256
easy pred: select t1 . series_name from channel as t1 join tv_channel as t2 on t1 . id = t2 . id join tv_channel as t3 on t2 . id = t3 . id where t3 . title = 1 intersect select t1 . series_name from channel as t1 join tv_channel as t2 on t1 . id = t2 . id where t2 . title = 1
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

easy pred: select directed_by from cartoon where directed_by = 1
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"

eval_err_num:257
hard pred: select id from tv_channel where directed_by = 1 intersect select id from tv_series where directed_by = 1
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:258
easy pred: select poker_player from poker_player
easy gold: SELECT * FROM poker_player

easy pred: select * from poker_player
easy gold: SELECT Final_Table_Made FROM poker_player

eval_err_num:259
medium pred: select t2 . best_finish , t2 . best_finish from poker_player as t1 join best_finish as t2 on t1 . people_id = t2 . people_id
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

easy pred: select money_rank , money_rank from poker_player order by money_rank desc
easy gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC

medium pred: select money_rank from poker_player order by money_rank asc limit 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

easy pred: select * from poker_player where earnings > 1
easy gold: SELECT * FROM poker_player WHERE Earnings  <  200000

eval_err_num:260
easy pred: select max ( t1 . height ) from poker_player as t1 join best_finish as t2 on t1 . people_id = t2 . people_id where t2 . final_table_made = 1
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

eval_err_num:261
easy pred: select poker_player from poker_player
easy gold: SELECT * FROM poker_player

eval_err_num:262
easy pred: select name from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:263
easy pred: select t1 . poker_player_id from poker_player as t1 join people as t2 on t1 . people_id = t2 . people_id where earnings > 1
easy gold: SELECT * FROM poker_player WHERE Earnings  >  300000

eval_err_num:264
medium pred: select t2 . name from poker_player as t1 join people as t2 on t1 . people_id = t2 . people_id where earnings > 1
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:265
easy pred: select name from poker_player
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:266
medium pred: select t1 . name from poker_player as t1 join best_finish as t2 on t1 . people_id = t2 . people_id order by t1 . best_finish asc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

eval_err_num:267
easy pred: select birth_date from poker_player
easy gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:268
medium pred: select t1 . birth_date from poker_player as t1 join poker_player as t2 on t1 . people_id = t2 . people_id order by earnings desc
medium gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings

eval_err_num:269
hard pred: select t2 . best_finish from poker_player as t1 join people as t2 on t1 . people_id = t2 . people_id order by earnings asc limit 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:270
easy pred: select height from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:271
hard pred: select name from poker_player order by height desc limit 1
hard gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:272
hard pred: select money_rank from poker_player order by height desc limit 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:273
easy pred: select height from poker_player
easy gold: SELECT Height FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:274
medium pred: select name from poker_player where height > 1
medium gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:275
medium pred: select avg ( height ) from poker_player where people_id in ( select people_id from poker_player )
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:276
medium pred: select t1 . name from poker_player as t1 join best_finish as t2 on t1 . people_id = t2 . people_id order by earnings desc
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

easy pred: select distinct nationality from people group by nationality
easy gold: SELECT * FROM people GROUP BY Nationality

easy pred: select count ( * ) , nationality from people group by nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

easy pred: select nationality , count ( * ) from people group by nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

easy pred: select name from people where nationality = 1
easy gold: SELECT Name FROM people WHERE Nationality != "Russia"

eval_err_num:277
easy pred: select poker_player from poker_player
easy gold: SELECT * FROM poker_player

hard pred: select * from poker_player where poker_player_id not in ( select people_id from poker_player )
hard gold: SELECT * FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:278
hard pred: select name from poker_player where poker_player_id not in ( select people_id from poker_player )
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:279
easy pred: select date from disposition_of_ship
easy gold: SELECT killed FROM death

eval_err_num:280
easy pred: select max ( tonnage ) from disposition_of_ship
easy gold: SELECT max(killed) FROM death

easy pred: select min ( tonnage ) from ship
easy gold: SELECT min(killed) FROM death

eval_err_num:281
medium pred: select max ( tonnage ) , min ( injured ) from ship
medium gold: SELECT max(killed) ,  min(killed) FROM death

easy pred: select * from ship where id in ( select id from ship )
easy gold: SELECT * FROM death as T1 JOIN ship as T2 ON T1.caused_by_ship_id  =  T2.id

medium pred: select * from ship where tonnage > 1
medium gold: SELECT * FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:282
medium pred: select t1 . result , t2 . injured from ship as t1 join injured as t2 on t1 . id = t2 . id where t2 . tonnage > 1
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

medium pred: select id , name from ship
medium gold: SELECT id, name FROM battle

eval_err_num:283
easy pred: select t1 . id , t1 . name from ship as t1 join ship as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) = 1
easy gold: SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle

eval_err_num:284
medium pred: select t1 . id , t1 . name from ship as t1 join injured as t2 on t1 . id = t2 . id where t2 . ship_type = 1
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

eval_err_num:285
hard pred: select injured from injured
hard gold: SELECT T1.id ,  T1.name, sum(T3.killed), sum(T3.injured) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id

eval_err_num:286
hard pred: select injured from injured group by result having count ( * ) > = 1
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

eval_err_num:287
medium pred: select t1 . id , t1 . name from injured as t1 join ship as t2 on t1 . id = t2 . id group by t2 . id
medium gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id

eval_err_num:288
hard pred: select t1 . id , t1 . name from injured as t1 join injured as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) desc
hard gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured)

eval_err_num:289
extra pred: select t1 . id , t1 . name from ship as t1 join injured as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) desc limit 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured) DESC LIMIT 1

eval_err_num:290
easy pred: select t1 . id from ship as t1 join ship as t2 on t1 . id = t2 . id where t2 . name = 1
easy gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan'

eval_err_num:291
easy pred: select t1 . name from ship as t1 join ship as t2 on t1 . id = t2 . id where t2 . ship = 1
easy gold: SELECT name FROM battle WHERE latin_commander  =  'Baldwin I'

eval_err_num:292
medium pred: select t1 . name from ship as t1 join ship as t2 on t1 . id = t2 . id where t2 . ship = 1 intersect select t1 . name from ship as t1 join ship as t2 on t1 . id = t2 . id where t2 . ship = 1
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

easy pred: select distinct id from ship where tonnage < 1
easy gold: SELECT lost_in_battle FROM ship WHERE tonnage  =  '225'

eval_err_num:293
medium pred: select distinct t1 . name from ship as t1 join disposition_of_ship as t2 on t1 . id = t2 . id where t2 . tonnage > 1
medium gold: SELECT T2.id, T2.name from ship AS T1 join battle AS T2 ON T1.lost_in_battle = T2.id WHERE tonnage  =  '225'

eval_err_num:294
extra pred: select t1 . id from ship as t1 join disposition_of_ship as t2 on t1 . id = t2 . id where t2 . tonnage > 1 intersect select t1 . name from ship as t1 join disposition_of_ship as t2 on t1 . id = t2 . id where t2 . tonnage > 1
extra gold: SELECT id, name FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: select count ( * ) from ship where id not in ( select id from ship where tonnage < 1 )
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

medium pred: select name from ship where name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice'

eval_err_num:295
medium pred: select t1 . name from ship as t1 join ship as t2 on t1 . id = t2 . id where t2 . name = 1
medium gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atlanta'

eval_err_num:296
extra pred: select name , date from ship where name = 1
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

eval_err_num:297
medium pred: select t1 . id from ship as t1 join disposition_of_ship as t2 on t1 . id = t2 . id where t2 . name = 1
medium gold: SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:298
extra pred: select id from ship except select t1 . name from ship as t1 join ship as t2 on t1 . id = t2 . id where t2 . name = 1
extra gold: SELECT T1.id, T1.name FROM battle EXCEPT SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:299
extra pred: select t1 . name , t1 . date from ship as t1 join disposition_of_ship as t2 on t1 . id = t2 . id join ship as t3 on t1 . id = t3 . id where t1 . name = 1
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:300
easy pred: select count ( * ) from continent
easy gold: SELECT count(*) FROM CONTINENTS;

eval_err_num:301
medium pred: select id , countryname from maker
medium gold: SELECT ContId ,  Continent FROM CONTINENTS;

eval_err_num:302
medium pred: select countryname , countryname from maker where id not in ( select id from continent )
medium gold: SELECT T1.ContId ,  T1.Continent , * FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent;

eval_err_num:303
medium pred: select countryname , count ( * ) from maker group by country
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

eval_err_num:304
medium pred: select distinct makeid from maker
medium gold: Select FullName, ID From CAR_MAKERS;

eval_err_num:305
medium pred: select countryname , id from maker
medium gold: Select Country, FullName, ID From CAR_MAKERS;

eval_err_num:306
medium pred: select countryname , count ( * ) from maker group by country
medium gold: SELECT count(*), T1.Country, T1.FullName, T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:307
medium pred: select t1 . countryname , t1 . id from maker as t1 join model_list as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) desc limit 1
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:308
easy pred: select avg ( weight ) from maker
easy gold: Select avg(horsepower) FROM CARS_DATA;

eval_err_num:309
hard pred: select max ( weight ) from maker
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:310
hard pred: select min ( weight ) from maker
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:311
hard pred: select mpg from maker order by weight desc limit 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:312
easy pred: select avg ( weight ) from maker
easy gold: SELECT avg(Weight) FROM CARS_DATA

eval_err_num:313
extra pred: select * from maker order by weight asc limit 1
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  >  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:314
extra pred: select * from maker order by weight desc limit 1
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:315
extra pred: select countryname from maker order by weight asc limit 1
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:316
medium pred: select id , car_makers from maker where year = 1
medium gold: Select T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

eval_err_num:317
medium pred: select modelid , car_makers , weight from maker where year = 1
medium gold: Select T1.horsepower, T1.mpg, T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

eval_err_num:318
extra pred: select t1 . id , t1 . countryname from maker as t1 join maker as t2 on t1 . id = t2 . id where t2 . year = 1
extra gold: SELECT T1.Maker, T4.horsepower, T4.mpg, T4.id, T2.model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:319
extra pred: select distinct t1 . countryname from maker as t1 join maker as t2 on t1 . id = t2 . id where t1 . year = 1
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:320
medium pred: select countryname , model from maker
medium gold: SELECT Make , Model from Car_Names;

eval_err_num:321
medium pred: select fullname , year , year from maker
medium gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId;

eval_err_num:322
extra pred: select * , year from maker order by year desc limit 1
extra gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:323
extra pred: select year , year from maker order by year desc limit 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:324
easy pred: select distinct model from maker
easy gold: SELECT DISTINCT model FROM MODEL_LIST;

eval_err_num:325
medium pred: select model , year from maker
medium gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id;

eval_err_num:326
hard pred: select model from maker where year < 1
hard gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:327
hard pred: select distinct model from maker where year < 1
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:328
medium pred: select countryname , country from maker
medium gold: Select T1.Maker, T2.CountryName from Car_Makers as T1 JOIN Countries as T2 on T1.Country = T2.CountryId;

eval_err_num:329
medium pred: select t1 . countryname , t1 . countryname from maker as t1 join maker as t2 on t1 . id = t2 . id
medium gold: SELECT T1.Continent,  T3.Maker, T2.CountryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country;

eval_err_num:330
hard pred: select t2 . countryname , count ( * ) from maker as t1 join maker as t2 on t1 . id = t2 . id group by t1 . id
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

eval_err_num:331
easy pred: select count ( * ) from maker
easy gold: SELECT count(*) from Countries;

eval_err_num:332
medium pred: select countryname , count ( * ) from maker group by country
medium gold: SELECT *, count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country;

eval_err_num:333
extra pred: select country from maker group by country order by count ( * ) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) ASC LIMIT 1;

eval_err_num:334
extra pred: select countryname from maker group by country order by count ( * ) desc limit 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

eval_err_num:335
easy pred: select count ( * ) from maker
easy gold: Select Count(*) FROM CAR_MAKERS;

eval_err_num:336
medium pred: select fullname , id from maker
medium gold: SELECT FullName, id FROM CAR_MAKERS;

eval_err_num:337
medium pred: select t2 . fullname , t1 . id from maker as t1 join maker as t2 on t1 . id = t2 . id
medium gold: SELECT T1.Model ,  T2.FullName, T2.id  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id;

eval_err_num:338
medium pred: select t2 . countryname , count ( * ) from maker as t1 join maker as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

eval_err_num:339
medium pred: select modelid from maker where id in ( select id from continent )
medium gold: SELECT T1.ID FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:340
medium pred: select horsepower from maker where countryname = 1
medium gold: SELECT T1.Horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:341
medium pred: select t2 . fullname from maker as t1 join maker as t2 on t1 . id = t2 . id where t1 . countryname = 1
medium gold: SELECT T1.MPG FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:342
medium pred: select t2 . fullname from maker as t1 join maker as t2 on t1 . id = t2 . id where t2 . countryname = 1
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:343
easy pred: select distinct maker from maker
easy gold: SELECT distinct Maker FROM CAR_MAKERS;

eval_err_num:344
medium pred: select countryname from maker where countryname = 1
medium gold: SELECT T1.Maker, T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId;

eval_err_num:345
medium pred: select t2 . countryname from maker as t1 join maker as t2 on t1 . id = t2 . id where t1 . country = 1
medium gold: SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:346
medium pred: select count ( * ) from maker where country = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:347
easy pred: select count ( * ) from maker
easy gold: SELECT count(*) FROM MODEL_LIST;

eval_err_num:348
hard pred: select count ( * ) from maker where country = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Germany';

eval_err_num:349
hard pred: select count ( * ) from maker where country = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'japan';

eval_err_num:350
hard pred: select count ( * ) from maker where country = 1
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:351
easy pred: select * from maker where year = 1
easy gold: SELECT * FROM CARS_DATA WHERE YEAR  =  1974;

eval_err_num:352
medium pred: select t2 . weight , t2 . weight from car_makers as t1 join model_list as t2 on t1 . id = t2 . id where t2 . year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE YEAR  =  1974;

eval_err_num:353
medium pred: select t2 . weight from car_makers as t1 join model_list as t2 on t1 . id = t2 . id where t2 . year = 1
medium gold: SELECT Weight, Cylinders FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974;

eval_err_num:354
hard pred: select t2 . weight from car_makers as t1 join model_list as t2 on t1 . id = t2 . id where t2 . year = 1 order by t2 . weight desc limit 1
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

eval_err_num:355
easy pred: select distinct country from maker
easy gold: Select CountryName FROM COUNTRIES;

eval_err_num:356
hard pred: select countryname from maker where country ! = 1
hard gold: Select CountryName FROM COUNTRIES where CountryID not in (Select Country from CAR_MAKERS);

eval_err_num:357
medium pred: select countryname from maker where id not in ( select country from maker )
medium gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:358
medium pred: select country , count ( * ) from maker group by country having count ( * ) > = 1
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:359
medium pred: select countryname , country from maker
medium gold: SELECT T3.Maker, T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country;

eval_err_num:360
hard pred: select count ( * ) , country from maker group by country
hard gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country GROUP BY T1.CountryName;

eval_err_num:361
extra pred: select count ( * ) from maker where country = 1 group by country
extra gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName;

eval_err_num:362
extra pred: select country from maker where country = 1 group by country having count ( * ) > = 1
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

eval_err_num:363
medium pred: select fullname , year from maker
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:364
medium pred: select * from maker as t1 join model_list as t2 on t1 . id = t2 . id where t2 . year = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  8;

eval_err_num:365
medium pred: select count ( * ) from car_makers where model = 1
medium gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3;

eval_err_num:366
extra pred: select * from maker as t1 join model_list as t2 on t1 . id = t2 . id where t2 . year = 1 order by t2 . year desc limit 1
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:367
medium pred: select modelid from maker order by model desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY horsepower DESC LIMIT 1;

eval_err_num:368
medium pred: select id from maker order by year desc limit 1
medium gold: SELECT id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1;

eval_err_num:369
hard pred: select countryname from maker order by model desc limit 1
hard gold: SELECT T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:370
hard pred: select t2 . model from maker as t1 join maker as t2 on t1 . id = t2 . id where t2 . model = ( select max ( model ) from maker )
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:371
easy pred: select avg ( cars_data ) from maker
easy gold: SELECT avg(edispl) FROM CARS_DATA;

eval_err_num:372
medium pred: select avg ( mpg ) from maker
medium gold: SELECT T1.Make, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Make;

eval_err_num:373
medium pred: select avg ( mpg ) from maker
medium gold: SELECT T1.Model, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Model;

eval_err_num:374
medium pred: select avg ( mpg ) from maker
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

eval_err_num:375
easy pred: select distinct model from maker
easy gold: SELECT distinct Model from CAR_NAMES;

eval_err_num:376
medium pred: select model from maker
medium gold: SELECT Model, Make FROM CAR_NAMES;

eval_err_num:377
medium pred: select count ( * ) , t1 . fullname from maker as t1 join model_list as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model;

eval_err_num:378
hard pred: select t1 . model from maker as t1 join model_list as t2 on t1 . modelid = t2 . id group by t1 . id order by count ( * ) desc limit 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

eval_err_num:379
easy pred: select distinct countryname from maker
easy gold: SELECT FullName FROM CAR_MAKERS;

eval_err_num:380
medium pred: select distinct t2 . fullname , t1 . model from maker as t1 join maker as t2 on t1 . id = t2 . id
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:381
medium pred: select t2 . fullname , t1 . mpg from maker as t1 join maker as t2 on t1 . id = t2 . id where t2 . countryname = 1
medium gold: SELECT T1.FullName, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:382
medium pred: select count ( * ) from maker where countryname = 1
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:383
easy pred: select * from maker as t1 join maker as t2 on t1 . id = t2 . id where t2 . model = 1
easy gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:384
medium pred: select * from maker as t1 join model_list as t2 on t1 . id = t2 . id where t2 . model_list > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  1;

eval_err_num:385
medium pred: select t2 . fullname from maker as t1 join maker as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > 1
medium gold: SELECT * FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:386
medium pred: select t1 . fullname from maker as t1 join model as t2 on t1 . id = t2 . id where t2 . model > 1 group by t1 . id having count ( * ) > 1
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:387
hard pred: select count ( distinct t2 . model ) from maker as t1 join maker as t2 on t1 . id = t2 . id where t1 . countryname = 1
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id WHERE T3.FullName  =  'General Motors';

eval_err_num:388
hard pred: select count ( * ) from maker where fullname in ( select model from maker where countryname = 1 )
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T1.MakeId  =  T3.Id WHERE T3.weight > 3500;

eval_err_num:389
extra pred: select count ( * ) from maker where model between 1 and 1
extra gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:390
extra pred: select distinct t2 . countryname from maker as t1 join maker as t2 on t1 . id = t2 . id where t2 . fullname < 1
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:391
medium pred: select year , weight from maker
medium gold: SELECT Year, weight FROM CARS_DATA;

eval_err_num:392
easy pred: select distinct year from car_makers where weight > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  >  3000;

eval_err_num:393
easy pred: select year from maker where weight > 1
easy gold: SELECT DISTINCT Year FROM CARS_DATA AS T1 WHERE Weight  <  4000;

eval_err_num:394
medium pred: select distinct t2 . year from car_makers as t1 join maker as t2 on t1 . id = t2 . id where t1 . year > 1
medium gold: SELECT DISTINCT Year FROM CARS_DATA WHERE Weight  >  3000 AND Weight  <  4000;

eval_err_num:395
medium pred: select min ( mpg ) from maker
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate ASC LIMIT 1;

eval_err_num:396
medium pred: select max ( t2 . mpg ) , min ( t2 . mpg ) from car_makers as t1 join maker as t2 on t1 . id = t2 . id
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

eval_err_num:397
hard pred: select modelid , horsepower from maker order by horsepower desc limit 1
hard gold: SELECT T1.ID, T2.Make, T2.Model FROM CARS_DATA as T1 JOIN CAR_NAMES as T2 ON T1.ID = T2.MakeID ORDER BY T1.accelerate DESC LIMIT 1;

eval_err_num:398
medium pred: select modelid , horsepower from maker order by horsepower desc limit 1
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

eval_err_num:399
medium pred: select * from maker where model = 1
medium gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo';

eval_err_num:400
extra pred: select t2 . model_list from car_makers as t1 join model_list as t2 on t1 . id = t2 . id where t2 . model = 1
extra gold: SELECT * FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:401
extra pred: select t2 . fullname from car_makers as t1 join model_list as t2 on t1 . id = t2 . id where t2 . model = 1 order by t2 . cars_data desc limit 1
extra gold: SELECT T1.horsepower FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:402
extra pred: select count ( * ) from car_makers as t1 join model_list as t2 on t1 . id = t2 . id where t2 . model = 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:403
medium pred: select max ( weight ) from maker
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:404
medium pred: select max ( horsepower ) from maker
medium gold: SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

eval_err_num:405
hard pred: select modelid from model_list where model < ( select max ( mpg ) from maker )
hard gold: SELECT id FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:406
hard pred: select count ( * ) from car_makers where modelid in ( select id from model_list )
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:407
hard pred: select countryname from maker where country = 1
hard gold: SELECT CountryName FROM COUNTRIES where CountryId not in (SELECT T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country);

eval_err_num:408
easy pred: select distinct country from maker where country = 1
easy gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country;

eval_err_num:409
easy pred: select count ( * ) from countries as t1 join maker as t2 on t1 . id = t2 . id group by t1 . countryname having count ( * ) > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  1 );

eval_err_num:410
easy pred: select count ( * ) from countries as t1 join maker as t2 on t1 . id = t2 . id join maker as t3 on t2 . id = t3 . id where t3 . model_list > 1
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

eval_err_num:411
medium pred: select model from maker
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id;

eval_err_num:412
medium pred: select model from maker where model = 1
medium gold: SELECT T1.Model, T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4;

eval_err_num:413
extra pred: select model from maker order by model desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:414
extra pred: select model from maker order by model desc limit 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:415
easy pred: select min ( mpg ) from maker
easy gold: SELECT min(Horsepower) FROM CARS_DATA;

eval_err_num:416
extra pred: select id from maker where weight < ( select min ( weight ) from maker )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA);

eval_err_num:417
extra pred: select id from maker where weight > ( select min ( weight ) from maker )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 5;

eval_err_num:418
extra pred: select id from maker where weight > ( select sum ( weight ) from horsepower )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 3;

eval_err_num:419
medium pred: select t2 . fullname , t2 . accelerate from car_makers as t1 join maker as t2 on t1 . id = t2 . id where t2 . year < 1
medium gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE YEAR  <  1980;

eval_err_num:420
extra pred: select t2 . fullname , t2 . horsepower from car_makers as t1 join maker as t2 on t1 . id = t2 . id where t2 . year < 1
extra gold: SELECT mpg, horsepower, accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980;

eval_err_num:421
extra pred: select max ( year ) from maker where model < 1
extra gold: SELECT accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY accelerate DESC LIMIT 1;

eval_err_num:422
extra pred: select max ( t2 . weight ) from car_makers as t1 join maker as t2 on t1 . id = t2 . id where t2 . year < 1
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

eval_err_num:423
medium pred: select * from maker where year = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName = 'Ford Motor Company';

eval_err_num:424
medium pred: select distinct t1 . model from maker as t1 join model_list as t2 on t1 . id = t2 . id where t2 . year = 1
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName != 'Ford Motor Company';

eval_err_num:425
extra pred: select t3 . model , t2 . weight from maker as t1 join model as t2 on t1 . id = t2 . id join maker as t3 on t2 . id = t3 . id where t3 . year = 1
extra gold: SELECT T1.model, T2.Make, T3.weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'

eval_err_num:426
extra pred: select count ( * ) from model as t1 join model_list as t2 on t1 . id = t2 . id where t2 . year < 1
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

eval_err_num:427
easy pred: select countryname from maker
easy gold: SELECT CountryName FROM countries;

eval_err_num:428
easy pred: select countryname from maker group by country having count ( * ) > = 1
easy gold: SELECT distinct T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:429
hard pred: select countryname from maker where id not in ( select countryname from maker )
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:430
medium pred: select modelid , countryname , weight from maker
medium gold: SELECT T1.Id ,  T1.Maker, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

eval_err_num:431
medium pred: select t1 . modelid , t1 . countryname , count ( * ) from maker as t1 join maker as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:432
medium pred: select t1 . modelid , t1 . countryname from maker as t1 join maker as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > = 1
medium gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2;

eval_err_num:433
extra pred: select t1 . modelid , t1 . countryname from maker as t1 join maker as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > 1
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:434
easy pred: select max ( minutes ) from tours
easy gold: SELECT max(minutes) FROM matches

eval_err_num:435
easy pred: select max ( minutes ) from tours
easy gold: SELECT avg(minutes) FROM matches

eval_err_num:436
medium pred: select t2 . first_name , avg ( t2 . minutes ) from tours as t1 join tours as t2 on t1 . loser_id = t2 . winner_id group by t2 . loser_id having count ( * ) = 1
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

eval_err_num:437
easy pred: select count ( distinct first_name ) from matches
easy gold: SELECT count(DISTINCT tourney_name) FROM matches

eval_err_num:438
easy pred: select round from tours where minutes > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  20

easy pred: select count ( distinct tourney_name ) from matches where surface > 1
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

easy pred: select count ( distinct winner_id ) from matches where year = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE year = 2013

eval_err_num:439
easy pred: select count ( * ) from players as t1 join matches as t2 on t1 . loser_id = t2 . loser_id where t2 . year < 1
easy gold: SELECT count(*) FROM (SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016)

eval_err_num:440
hard pred: select distinct t1 . first_name from tours as t1 join matches as t2 on t1 . loser_id = t2 . loser_id where t2 . year = 1
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

eval_err_num:441
easy pred: select count ( * ) from matches where player_id in ( select loser_id from matches where winner_seed = 1 )
easy gold: SELECT count(*) FROM matches WHERE loser_hand = "L"

eval_err_num:442
medium pred: select count ( * ) from matches as t1 join matches as t2 on t1 . loser_id = t2 . loser_id where t2 . year < 1
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

eval_err_num:443
medium pred: select first_name , birth_date from tours where winner_seed = 1
medium gold: SELECT T1.last_name, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships'

eval_err_num:444
medium pred: select first_name , country_code from tours where country_code = 1 or tourney_name = 1
medium gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships'

eval_err_num:445
extra pred: select t1 . first_name , t1 . country_code from tours as t1 join tours as t2 on t1 . loser_id = t2 . winner_id join tours as t3 on t1 . loser_id = t3 . loser_id where t3 . round = 1 intersect select t1 . first_name , t1 . country_code from tours as t1 join tours as t2 on t1 . loser_id = t2 . winner_id where t1 . tourney_name = 1
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

eval_err_num:446
medium pred: select player_id , first_name from players where birth_date = 1 order by ranking_points desc limit 1
medium gold: SELECT player_id ,  last_name FROM players ORDER BY birth_date LIMIT 1

eval_err_num:447
medium pred: select loser_name , country_code from players where country_code = 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

eval_err_num:448
easy pred: select count ( * ) from players where winner_seed = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'R'

eval_err_num:449
easy pred: select count ( * ) from players where winner_seed = 1
easy gold: SELECT count(*) FROM players WHERE hand = 'L'

medium pred: select country_code , birth_date from players where country_code = 1 or country_code = 1
medium gold: SELECT country_code ,  birth_date FROM players WHERE hand  =  'L'

eval_err_num:450
medium pred: select t1 . country_code , t1 . birth_date , t1 . birth_date from tours as t1 join tours as t2 on t1 . country_code = t2 . country_code where t2 . country_code = 1 or t2 . country_code = 1
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

eval_err_num:451
hard pred: select count ( * ) from tours as t1 join matches as t2 on t1 . loser_id = t2 . loser_id where t2 . score = 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours ASC LIMIT 1

eval_err_num:452
hard pred: select count ( * ) from tours as t1 join tours as t2 on t1 . loser_id = t2 . loser_id join tours as t3 on t1 . loser_id = t3 . loser_id where t3 . score = 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:453
hard pred: select t2 . first_name , t2 . country_code from tours as t1 join tours as t2 on t1 . loser_id = t2 . loser_id group by t2 . loser_id having count ( * ) = 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:454
hard pred: select round from tours group by round order by count ( * ) desc limit 1
hard gold: SELECT surface FROM matches GROUP BY surface ORDER  BY count(*) DESC LIMIT 1

eval_err_num:455
hard pred: select t2 . year from tours as t1 join tours as t2 on t1 . loser_id = t2 . loser_id group by t2 . loser_id order by count ( * ) desc limit 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:456
hard pred: select first_name from players where score > ( select max ( minutes ) from players )
hard gold: SELECT loser_name FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:457
hard pred: select t2 . first_name , t2 . score from matches as t1 join matches as t2 on t1 . loser_id = t2 . loser_id order by ranking_points desc limit 1
hard gold: SELECT loser_name, loser_rank_points FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:458
hard pred: select t2 . first_name , t2 . score from tours as t1 join matches as t2 on t1 . loser_id = t2 . loser_id group by t2 . loser_id order by count ( * ) desc limit 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:459
medium pred: select first_name from players order by score desc limit 1
medium gold: SELECT loser_name FROM matches ORDER BY loser_rank_points DESC LIMIT 1

eval_err_num:460
hard pred: select t2 . first_name , t2 . ranking from matches as t1 join tours as t2 on t1 . loser_id = t2 . loser_id where ranking = ( select max ( score ) from tours where winner_seed = 1 )
hard gold: SELECT loser_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY loser_rank_points DESC LIMIT 1

eval_err_num:461
hard pred: select tourney_name from tours where ranking = 1 order by ranking desc limit 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: select minutes from matches order by year desc
medium gold: SELECT minutes FROM matches ORDER BY minutes ASC LIMIT 1

medium pred: select tourney_date from matches order by year desc limit 1
medium gold: SELECT minutes FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:462
medium pred: select t2 . first_name , t2 . last_name from matches as t1 join players as t2 on t1 . loser_id = t2 . loser_id order by t2 . minutes desc limit 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:463
medium pred: select t2 . first_name , t2 . last_name from tours as t1 join tours as t2 on t1 . loser_id = t2 . loser_id join tours as t3 on t1 . loser_id = t3 . loser_id
medium gold: SELECT T2.tours, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:464
medium pred: select avg ( t2 . score ) , t1 . first_name from tours as t1 join tours as t2 on t1 . loser_id = t2 . loser_id group by t2 . player_id
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:465
medium pred: select count ( * ) , t1 . player_id from matches as t1 join matches as t2 on t1 . loser_id = t2 . loser_id group by t2 . player_id
medium gold: SELECT tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:466
medium pred: select avg ( t2 . score ) , avg ( score ) from matches as t1 join matches as t2 on t1 . loser_id = t2 . loser_id join matches as t3 on t1 . loser_id = t3 . loser_id
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:467
medium pred: select t2 . score , avg ( t2 . score ) from matches as t1 join matches as t2 on t1 . loser_id = t2 . loser_id group by t2 . loser_id
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:468
easy pred: select count ( * ) , country_code from tours group by country_code
easy gold: SELECT count(*) FROM players GROUP BY country_code

eval_err_num:469
hard pred: select country_code from tours group by country_code order by count ( * ) desc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) ASC LIMIT 1

eval_err_num:470
hard pred: select country_code from tours group by country_code order by count ( * ) desc limit 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:471
medium pred: select t2 . round , count ( * ) from matches as t1 join matches as t2 on t1 . loser_id = t2 . loser_id group by t2 . loser_id
medium gold: SELECT count(*), hand FROM players GROUP BY hand

medium pred: select country_code from players group by country_code having count ( * ) > 1
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code HAVING count(*) > 50

easy pred: select country_code from players where country_code = 1 group by country_code having count ( * ) > 1
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

medium pred: select tourney_name from matches
medium gold: SELECT DISTINCT loser_name FROM matches ORDER BY loser_age DESC LIMIT 3

eval_err_num:472
medium pred: select first_name from matches order by winner_age desc limit 1
medium gold: SELECT DISTINCT winner_name FROM matches ORDER BY winner_age DESC LIMIT 3

eval_err_num:473
medium pred: select t1 . first_name , t1 . score from matches as t1 join matches as t2 on t1 . loser_id = t2 . winner_id order by ranking asc limit 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:474
easy pred: select count ( distinct t2 . player_id ) from tours as t1 join tours as t2 on t1 . loser_id = t2 . tourney_id where t2 . round = 1
easy gold: SELECT count(DISTINCT loser_name) FROM matches WHERE tourney_name  =  'Australian Open'

eval_err_num:475
easy pred: select t2 . winner_name from tours as t1 join tours as t2 on t1 . loser_id = t2 . tourney_id where t2 . round = 1
easy gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Australian Open'

eval_err_num:476
medium pred: select t2 . first_name , t2 . match_num , count ( * ) from tours as t1 join tours as t2 on t1 . loser_id = t2 . tourney_id where t2 . round = 1 group by t2 . loser_id
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

easy pred: select * from show
easy gold: SELECT * FROM conductor

easy pred: select count ( * ) from show
easy gold: SELECT count(*) FROM conductor

eval_err_num:477
easy pred: select name from show
easy gold: SELECT Name FROM conductor

eval_err_num:478
easy pred: select age from show
easy gold: SELECT Age FROM conductor

eval_err_num:479
easy pred: select name from show where nationality = 1
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

eval_err_num:480
easy pred: select * from record_company
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:481
medium pred: select attendance from orchestra
medium gold: SELECT Record_Company, Year_of_Founded FROM orchestra

eval_err_num:482
easy pred: select * from record_company as t1 join attendance as t2 on t1 . performance_id = t2 . share order by t2 . year_of_founded desc limit 1
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

eval_err_num:483
easy pred: select attendance from attendance
easy gold: SELECT Attendance FROM SHOW

eval_err_num:484
easy pred: select avg ( attendance ) from orchestra
easy gold: SELECT avg(Attendance) FROM SHOW

eval_err_num:485
easy pred: select t2 . name from performance as t1 join show as t2 on t1 . performance_id = t2 . show_id
easy gold: SELECT SHARE FROM performance

eval_err_num:486
easy pred: select t2 . name from performance as t1 join orchestra as t2 on t1 . performance_id = t2 . share where t2 . result = 1
easy gold: SELECT SHARE FROM performance WHERE TYPE != "Live final"

eval_err_num:487
medium pred: select max ( t2 . share ) , min ( t2 . share ) from performance as t1 join orchestra as t2 on t1 . performance_id = t2 . performance_id where t2 . result = 1
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

eval_err_num:488
easy pred: select nationality from show
easy gold: SELECT Nationality FROM conductor

eval_err_num:489
easy pred: select count ( distinct nationality ) from show
easy gold: SELECT count(DISTINCT Nationality) FROM conductor

eval_err_num:490
easy pred: select name from show
easy gold: SELECT Name FROM conductor

eval_err_num:491
easy pred: select t2 . year_of_work from performance as t1 join show as t2 on t1 . show_id = t2 . show_id
easy gold: SELECT Year_of_Work FROM conductor

eval_err_num:492
easy pred: select t2 . name from performance as t1 join show as t2 on t1 . show_id = t2 . show_id order by t2 . year_of_work desc
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

eval_err_num:493
easy pred: select name from show
easy gold: SELECT Name FROM conductor

eval_err_num:494
easy pred: select t2 . year_of_work from performance as t1 join show as t2 on t1 . show_id = t2 . show_id
easy gold: SELECT Year_of_Work FROM conductor

eval_err_num:495
medium pred: select name from conductor order by year_of_founded desc limit 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

eval_err_num:496
easy pred: select name from show
easy gold: SELECT Name FROM conductor

eval_err_num:497
medium pred: select t2 . name from performance as t1 join show as t2 on t1 . show_id = t2 . nationality where t2 . result = 1
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

eval_err_num:498
easy pred: select name from show
easy gold: SELECT Name FROM conductor

eval_err_num:499
medium pred: select t2 . name from attendance as t1 join show as t2 on t1 . performance_id = t2 . performance_id group by t2 . name having count ( * ) > = 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

eval_err_num:500
easy pred: select name from show
easy gold: SELECT Name FROM conductor

eval_err_num:501
extra pred: select t2 . name from attendance as t1 join show as t2 on t1 . show_id = t2 . show_id join show as t3 on t1 . show_id = t3 . show_id group by t2 . name order by count ( * ) desc limit 1
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:502
easy pred: select name from show
easy gold: SELECT Name FROM conductor

eval_err_num:503
medium pred: select name from conductor where year_of_founded = 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

eval_err_num:504
easy pred: select * from record_company as t1 join share as t2 on t1 . performance_id = t2 . share
easy gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company

eval_err_num:505
medium pred: select t2 . name , count ( * ) from performance as t1 join orchestra as t2 on t1 . show_id = t2 . share group by t2 . nationality
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

eval_err_num:506
easy pred: select attendance from orchestra
easy gold: SELECT Major_Record_Format FROM orchestra

eval_err_num:507
medium pred: select major_record_format from orchestra order by attendance asc
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

eval_err_num:508
easy pred: select * from record_company
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:509
hard pred: select * from performance as t1 join attendance as t2 on t1 . performance_id = t2 . share group by t2 . attendance order by count ( * ) desc limit 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:510
easy pred: select name from orchestra
easy gold: SELECT Orchestra FROM orchestra

eval_err_num:511
hard pred: select name from orchestra where show_id not in ( select performance_id from performance )
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

eval_err_num:512
easy pred: select * from record_company
easy gold: SELECT Record_Company FROM orchestra

eval_err_num:513
easy pred: select t2 . name from record_company as t1 join share as t2 on t1 . show_id = t2 . share where t2 . year_of_founded = 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003

eval_err_num:514
easy pred: select t1 . name from record_company as t1 join attendance as t2 on t1 . show_id = t2 . share where t2 . year_of_founded = 1 and t2 . year_of_founded > 1
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:515
hard pred: select t1 . name from record_company as t1 join attendance as t2 on t1 . show_id = t2 . share where t2 . year_of_founded > 1 or t2 . year_of_founded > 1
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:516
medium pred: select t2 . name from performance as t1 join orchestra as t2 on t1 . performance_id = t2 . share where t2 . type = 1
medium gold: SELECT * FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:517
medium pred: select count ( * ) from orchestra where type = 1
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:518
medium pred: select t1 . document_id , t1 . document_name , t2 . document_description from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

eval_err_num:519
medium pred: select t1 . document_name , t1 . paragraph_text from documents as t1 join document_description as t2 on t1 . document_id = t2 . document_id where t2 . document_name like 1
medium gold: SELECT document_name FROM Documents WHERE Document_Description LIKE "%w%"

eval_err_num:520
medium pred: select t1 . document_name , t1 . document_id from documents as t1 join document_description as t2 on t1 . document_id = t2 . document_id where t2 . document_name like 1
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

eval_err_num:521
medium pred: select t1 . document_id , t1 . document_description , t1 . document_description from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id where t2 . document_name = 1
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

eval_err_num:522
medium pred: select document_id , template_type_code , template_type_code from documents
medium gold: SELECT T1.document_id, T2.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID

eval_err_num:523
medium pred: select document_id , template_type_code from documents where template_type_code = 1
medium gold: SELECT T1.document_id FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID where T2.Template_Type_Code  =  'PPT'

eval_err_num:524
medium pred: select count ( * ) from documents where template_type_code = 1
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

eval_err_num:525
medium pred: select template_id , template_type_code from documents
medium gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:526
medium pred: select t1 . document_id , t1 . template_type_code , count ( * ) from documents as t1 join templates as t2 on t1 . template_id = t2 . template_id group by t1 . template_type_code
medium gold: SELECT count(*), T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id

eval_err_num:527
extra pred: select t1 . document_id , count ( * ) from documents as t1 join templates as t2 on t1 . template_type_code = t2 . template_type_code group by t1 . template_type_code order by count ( * ) desc limit 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:528
easy pred: select t1 . document_id from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id group by t1 . document_id having count ( * ) > 1
easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1

eval_err_num:529
hard pred: select document_id from templates except select t1 . template_id from templates as t1 join documents as t2 on t1 . template_id = t2 . template_id
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

medium pred: select template_id , template_type_code , template_type_code from templates
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

medium pred: select template_id from templates where template_type_code = 1
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

easy pred: select count ( distinct template_type_code ) from templates where template_type_code = 1
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

easy pred: select * from templates where version_number > 1
easy gold: SELECT version_number FROM Templates WHERE version_number  >  5

medium pred: select template_type_code , template_type_code from templates where version_number < 1
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

easy pred: select template_type_code from ref_template_types
easy gold: SELECT template_type_code FROM Templates

easy pred: select template_type_code from templates group by template_type_code having count ( * ) > 1
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

easy pred: select max ( version_number ) from templates
easy gold: SELECT min(Version_Number) FROM Templates

eval_err_num:530
medium pred: select template_type_code , template_type_code from documents
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

eval_err_num:531
medium pred: select t2 . template_type_code , t2 . template_type_code from templates as t1 join templates as t2 on t1 . template_type_code = t2 . template_type_code
medium gold: SELECT T1.template_type_code, T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:532
medium pred: select template_type_code from templates where document_name = 1
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

eval_err_num:533
medium pred: select t1 . document_name , t2 . template_type_code from documents as t1 join templates as t2 on t1 . template_type_code = t2 . template_type_code
medium gold: SELECT T2.document_name, T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:534
medium pred: select t1 . document_name from documents as t1 join templates as t2 on t1 . template_type_code = t2 . template_type_code where t2 . template_type_code = 1
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

easy pred: select template_type_code from ref_template_types
easy gold: SELECT template_type_code FROM Templates

medium pred: select distinct template_type_code from templates
medium gold: SELECT T1.template_type_code , T2.document_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: select template_type_code , count ( * ) from templates group by template_type_code
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

medium pred: select template_type_code , count ( * ) from templates group by template_type_code
medium gold: SELECT T1.template_type_code, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

hard pred: select template_type_code from templates group by template_type_code order by count ( * ) desc
hard gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC

extra pred: select template_type_code from templates group by template_type_code order by count ( * ) desc limit 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

easy pred: select template_type_code from ref_template_types
easy gold: SELECT template_type_code FROM Templates

easy pred: select template_type_code from templates
easy gold: SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:535
hard pred: select template_type_code from ref_template_types except select template_type_code from documents
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

easy pred: select template_type_code from ref_template_types where template_type_code = 1
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

easy pred: select template_type_code from ref_template_types where template_type_code = 1
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

medium pred: select template_id , template_type_code from templates where template_type_code = 1
medium gold: select T2.Template_ID, T1.template_type_code from Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.template_ID

eval_err_num:536
medium pred: select t1 . document_name , t1 . template_type_code from templates as t1 join templates as t2 on t1 . template_type_code = t2 . template_type_code
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

eval_err_num:537
medium pred: select distinct template_type_code from documents where template_type_code = 1
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

eval_err_num:538
medium pred: select template_id , template_type_description from templates
medium gold: SELECT T2.template_id, T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code

medium pred: select template_id from templates where template_type_code = 1
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

eval_err_num:539
medium pred: select t1 . paragraph_id , t2 . document_name from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id
medium gold: SELECT T1.paragraph_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID

eval_err_num:540
medium pred: select t1 . document_id from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id where t1 . document_name = 1
medium gold: SELECT T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:541
medium pred: select count ( * ) from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id where t1 . document_name = 1
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:542
medium pred: select paragraph_text , paragraphs from paragraphs
medium gold: SELECT Other_Details, paragraph_text FROM Paragraphs

eval_err_num:543
easy pred: select paragraph_text , paragraphs from paragraphs where paragraph_text like 1
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

eval_err_num:544
medium pred: select t1 . document_id , t1 . paragraph_text , t1 . paragraph_text from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text, T2.Document_Name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:545
medium pred: select t1 . document_id , t1 . paragraph_text from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id where t2 . document_name = 1
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

eval_err_num:546
medium pred: select t1 . paragraph_text , t2 . document_name from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id
medium gold: SELECT T1.paragraph_text, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:547
medium pred: select t1 . paragraph_text from documents as t1 join templates as t2 on t1 . document_id = t2 . document_id where t2 . document_name = 1
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:548
medium pred: select t1 . document_id , count ( * ) from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id group by t1 . document_id order by count ( * )
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

eval_err_num:549
medium pred: select t1 . document_id , t1 . document_name , count ( * ) from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id group by t1 . document_id
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:550
easy pred: select t1 . document_id from documents as t1 join documents as t2 on t1 . template_id = t2 . document_id group by t1 . document_id having count ( * ) > = 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

eval_err_num:551
medium pred: select template_id , document_name , documents from documents
medium gold: SELECT document_id ,  document_name FROM Documents

eval_err_num:552
medium pred: select t1 . document_id , t1 . document_name , t1 . document_id from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id
medium gold: SELECT T1.document_id ,  T2.document_name , T1.paragraph_id FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id

eval_err_num:553
medium pred: select t1 . document_id , t1 . document_name , count ( * ) from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id group by t1 . document_id order by count ( * ) desc
medium gold: SELECT T1.document_id ,  T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

eval_err_num:554
extra pred: select t1 . document_id , t1 . document_name from documents as t1 join documents as t2 on t1 . document_id = t2 . document_id group by t1 . document_id order by count ( * ) desc limit 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

eval_err_num:555
medium pred: select t1 . document_id , count ( * ) from documents as t1 join paragraphs as t2 on t1 . template_id = t2 . document_id group by t1 . document_id
medium gold: SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:556
medium pred: select t1 . document_id , count ( * ) from documents as t1 join templates as t2 on t1 . template_id = t2 . document_id group by t1 . document_id order by count ( * )
medium gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*)

eval_err_num:557
hard pred: select t1 . document_id from documents as t1 join templates as t2 on t1 . template_id = t2 . template_id group by t1 . document_id order by count ( * ) desc limit 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

easy pred: select document_id from documents
easy gold: SELECT document_id FROM Paragraphs

medium pred: select document_id , count ( * ) from documents group by document_id
medium gold: SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id

eval_err_num:558
easy pred: select t1 . document_id from documents as t1 join paragraphs as t2 on t1 . template_id = t2 . template_id group by t1 . document_id having count ( * ) > 1
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

medium pred: select name , age from singer order by age desc
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

eval_err_num:559
medium pred: select avg ( age ) , min ( average ) , max ( average ) from singer where theme = 1
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

eval_err_num:560
easy pred: select name from song_name
easy gold: select song_name from singer

eval_err_num:561
medium pred: select name , year from song_name
medium gold: SELECT song_name ,  song_release_year FROM singer

eval_err_num:562
medium pred: select name , year from concert order by age desc
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age

eval_err_num:563
medium pred: select name , year from concert order by age desc limit 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

eval_err_num:564
easy pred: select country from concert where average > 1
easy gold: SELECT country FROM singer WHERE age  >  20

eval_err_num:565
easy pred: select distinct country from concert where average > 1
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

eval_err_num:566
easy pred: select avg ( average ) from singer
easy gold: SELECT avg(age) FROM singer

eval_err_num:567
hard pred: select name from singer where average > ( select avg ( average ) from singer )
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

easy pred: select name from stadium where capacity > 1 or capacity < 1
easy gold: SELECT name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

medium pred: select name , location from stadium where capacity > 1
medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

eval_err_num:568
medium pred: select t2 . name , t3 . year from concert as t1 join stadium as t2 on t1 . stadium_id = t2 . stadium_id where t2 . year = 1
medium gold: SELECT * FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

medium pred: select count ( * ) from concert where year = 1
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

eval_err_num:569
medium pred: select t2 . name , count ( * ) from concert as t1 join stadium as t2 on t1 . stadium_id = t2 . stadium_id group by t2 . stadium_id
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

eval_err_num:570
extra pred: select name , capacity from stadium where year > = 1 order by capacity desc
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC

eval_err_num:571
extra pred: select name from stadium where year > = 1 group by name order by count ( * ) desc limit 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

hard pred: select stadium_id from stadium
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

eval_err_num:572
easy pred: select country from singer where average > 1
easy gold: SELECT country FROM singer WHERE age  >  40

eval_err_num:573
easy pred: select country from singer where average > 1 intersect select country from singer where average < 1
easy gold: SELECT country FROM singer WHERE age  <  30

eval_err_num:574
hard pred: select country from singer where average > 1 intersect select country from singer where average < 1
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

eval_err_num:575
medium pred: select name from stadium where year = 1
medium gold: SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:576
hard pred: select name from stadium where stadium_id not in ( select stadium from concert )
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:577
medium pred: select name , theme from concert
medium gold: SELECT concert_name ,  theme from concert

eval_err_num:578
medium pred: select t1 . name , count ( * ) from concert as t1 join stadium as t2 on t1 . concert_id = t2 . concert_id group by t2 . name
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

eval_err_num:579
medium pred: select t2 . name , count ( * ) from concert as t1 join stadium as t2 on t1 . singer_id = t2 . singer_id group by t2 . singer_id
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

eval_err_num:580
hard pred: select t2 . name from concert as t1 join concert as t2 on t1 . singer_id = t2 . singer_id where t2 . year = 1
hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

medium pred: select name from singer where name = 1
medium gold: SELECT name FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:581
medium pred: select t2 . name , t3 . country from country as t1 join stadium as t2 on t1 . singer_id = t2 . singer_id join singer as t3 on t1 . singer_id = t3 . singer_id where t2 . name = 1
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:582
medium pred: select name , location from stadium where year < 1
medium gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014

eval_err_num:583
extra pred: select name , location from stadium where year > = 1 or year < 1
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

medium pred: select name from singer where birth_year = 1
medium gold: SELECT Name, Birth_Year from singer WHERE Birth_Year = 1948

medium pred: select name from singer where birth_year = 1 or birth_year < = 1
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

eval_err_num:584
medium pred: select name , sales from singer
medium gold: SELECT Name, Net_Worth_Millions FROM singer

eval_err_num:585
easy pred: select name , sales from singer order by sales desc
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC

eval_err_num:586
medium pred: select name from singer order by sales desc limit 1
medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

eval_err_num:587
medium pred: select t2 . name , t2 . citizenship from citizenship as t1 join citizenship as t2 on t1 . singer_id = t2 . singer_id
medium gold: SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship

medium pred: select name , citizenship from singer group by citizenship order by count ( * ) desc
medium gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC

hard pred: select name from singer order by citizenship desc limit 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:588
medium pred: select name , title from song where title = 1
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID

eval_err_num:589
medium pred: select name from song where sales > 1
medium gold: SELECT t1.name, t2.title from singer as t1 join song as t2 on t1.Singer_ID = t2.Singer_ID WHERE t2.Sales > 300000

eval_err_num:590
medium pred: select distinct name from song where title = 1
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

eval_err_num:591
medium pred: select t2 . name , count ( * ) from citizenship as t1 join citizenship as t2 on t1 . singer_id = t2 . song_id group by t2 . name
medium gold: SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:592
medium pred: select t2 . name from citizenship as t1 join citizenship as t2 on t1 . singer_id = t2 . singer_id group by t2 . name having count ( * ) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

eval_err_num:593
medium pred: select t2 . name , sum ( t2 . sales ) from sales as t1 join song_id as t2 on t1 . singer_id = t2 . song_id group by t2 . name
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:594
easy pred: select distinct singer_id from song where citizenship = 1
easy gold: SELECT DISTINCT Singer_ID from song

eval_err_num:595
hard pred: select name from song where singer_id not in ( select singer_id from citizenship )
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

easy pred: select * from employee where age > 1
easy gold: SELECT * FROM employee WHERE age  <  30

eval_err_num:596
easy pred: select district from employee where age > 1 or age < 1
easy gold: SELECT city FROM employee WHERE age  <  30

medium pred: select city from employee where age > 1 intersect select city from employee where age < 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

easy pred: select count ( * ) from shop
easy gold: SELECT sum(number_products) FROM shop

eval_err_num:597
medium pred: select t1 . shop from shop as t1 join shop as t2 on t1 . shop_id = t2 . shop_id group by t1 . shop_id order by count ( * ) desc limit 1
medium gold: SELECT name FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:598
medium pred: select t1 . name , t1 . district from shop as t1 join shop as t2 on t1 . shop_id = t2 . shop_id group by t1 . shop_id order by count ( * ) desc limit 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:599
hard pred: select distinct t1 . name from shop as t1 join shop as t2 on t1 . shop_id = t2 . shop_id where t2 . number_products > ( select avg ( number_products ) from shop )
hard gold: SELECT name FROM shop WHERE number_products  <  (SELECT avg(number_products) FROM shop)

eval_err_num:600
hard pred: select distinct t1 . name from shop as t1 join shop as t2 on t1 . shop_id = t2 . shop_id where t2 . number_products > ( select avg ( number_products ) from shop )
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

eval_err_num:601
extra pred: select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id group by t1 . employee_id order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:602
easy pred: select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

eval_err_num:603
extra pred: select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id group by t1 . employee_id order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:604
hard pred: select t1 . name from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id order by t2 . bonus desc limit 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

eval_err_num:605
easy pred: select count ( distinct t1 . employee_id ) from employee as t1 join evaluation as t2 on t1 . employee_id = t2 . employee_id
easy gold: SELECT count(distinct Employee_ID) FROM evaluation

eval_err_num:606
easy pred: select name from employee where employee_id not in ( select employee_id from bonus )
easy gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID

easy pred: select count ( * ) from shop
easy gold: SELECT count(distinct Shop_ID) FROM hiring

easy pred: select name from shop
easy gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id

eval_err_num:607
extra pred: select name from shop where employee_id in ( select employee_id from employee )
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

easy pred: select * from employee
easy gold: SELECT * FROM hiring

hard pred: select name from employee where employee_id not in ( select employee_id from employee )
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

eval_err_num:608
easy pred: select count ( * ) from employee where shop_id in ( select employee_id from shop )
easy gold: SELECT count(*) FROM hiring

eval_err_num:609
medium pred: select count ( * ) , t1 . shop_id from shop as t1 join shop as t2 on t1 . shop_id = t2 . shop_id group by t1 . shop_id
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

medium pred: select name from visitor where age > 1 and age > 1 union select name from visitor where age > 1
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

medium pred: select name , level_of_membership from visitor where age > 1 and age > 1
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

easy pred: select count ( * ) from ( select * from museum where open_year = 1 )
easy gold: SELECT count(*) FROM museum

eval_err_num:610
medium pred: select id from museum order by num_of_staff desc limit 1
medium gold: SELECT museum_id FROM museum ORDER BY num_of_staff DESC LIMIT 1

easy pred: select name from museum where open_year = 1
easy gold: SELECT name FROM museum WHERE open_year  <  2010

easy pred: select name from museum where open_year = 1
easy gold: SELECT name FROM museum WHERE open_year  >  2010

eval_err_num:611
easy pred: select min ( total_spent ) from museum where open_year = 1
easy gold: SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010

eval_err_num:612
hard pred: select name from museum where num_of_staff > ( select min ( total_spent ) from museum where open_year = 1 )
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

eval_err_num:613
easy pred: select t1 . name , t3 . visitor from visitor as t1 join visitor as t2 on t1 . id = t2 . id join visitor as t3 on t1 . id = t3 . id
easy gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id

eval_err_num:614
medium pred: select t1 . name from visitor as t1 join visitor as t2 on t1 . id = t2 . id join visitor as t3 on t1 . id = t3 . id where t3 . total_spent > 1
medium gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

eval_err_num:615
medium pred: select name , age from visitor where num_of_ticket > ( select max ( total_spent ) from visitor )
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

eval_err_num:616
easy pred: select sum ( total_spent ) from visitor
easy gold: SELECT sum(Total_spent) FROM visit

eval_err_num:617
extra pred: select name from visitor order by total_spent desc limit 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

eval_err_num:618
extra pred: select t1 . name , t1 . age from visitor as t1 join visitor as t2 on t1 . id = t2 . id where t1 . total_spent = ( select max ( total_spent ) from visitor )
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

eval_err_num:619
medium pred: select t1 . id , t1 . name , count ( * ) from visitor as t1 join visitor as t2 on t1 . museum_id = t2 . museum_id group by t1 . museum_id
medium gold: SELECT t2.Museum_ID ,  t1.name, count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID

eval_err_num:620
extra pred: select t1 . id , t1 . name from museum as t1 join visitor as t2 on t1 . museum_id = t2 . museum_id group by t1 . museum_id order by count ( * ) desc limit 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:621
extra pred: select count ( * ) from ( select * from visitor group by open_year having count ( * ) = 1 )
extra gold: SELECT count(*) FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:622
hard pred: select name from museum where id not in ( select museum_id from visitor )
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:623
easy pred: select count ( * ) from ( select t1 . name from visitor as t1 join visit as t2 on t1 . museum_id = t2 . museum_id group by t1 . id having count ( * ) = 1 )
easy gold: SELECT sum(num_of_ticket) FROM visit

medium pred: select id from visitor group by id order by count ( * ) desc limit 1
medium gold: SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1

eval_err_num:624
hard pred: select t1 . name , t1 . age from visitor as t1 join visitor as t2 on t1 . id = t2 . id where t1 . num_of_ticket = ( select max ( num_of_ticket ) from ( select t1 . name from visitor as t1 join visitor as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) desc limit 1 ) )
hard gold: SELECT t1.name,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

eval_err_num:625
easy pred: select sum ( total_spent ) from visitor
easy gold: SELECT sum(Total_spent) FROM visit

eval_err_num:626
easy pred: select total_spent from visitor order by total_spent desc
easy gold: SELECT max(Total_spent) FROM visit

eval_err_num:627
medium pred: select avg ( total_spent ) , max ( total_spent ) from visitor
medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit

eval_err_num:628
easy pred: select min ( level_of_membership ) from level_of_membership
easy gold: SELECT min(Level_of_membership) FROM visitor

eval_err_num:629
easy pred: select count ( * ) from ( select * from level_of_membership as t1 join visitor as t2 on t1 . id = t2 . id where t2 . level_of_membership = 1 )
easy gold: SELECT count(*) FROM visitor WHERE Level_of_membership  =  1

eval_err_num:630
medium pred: select t1 . id , t1 . total_spent from visitor as t1 join visitor as t2 on t1 . id = t2 . id where t1 . level_of_membership = 1
medium gold: SELECT t2.Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

eval_err_num:631
medium pred: select sum ( t1 . total_spent ) from visitor as t1 join visitor as t2 on t1 . id = t2 . id where t1 . level_of_membership = 1
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

easy pred: select name from museum where open_year = 1
easy gold: SELECT name FROM museum WHERE open_year  <  2009

eval_err_num:632
extra pred: select t1 . name from visitor as t1 join visit as t2 on t1 . id = t2 . museum_id where t1 . open_year > 1 group by t1 . visitor order by count ( * ) desc limit 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

easy pred: select name from museum where open_year = 1
easy gold: SELECT name FROM museum WHERE open_year  >  2010

eval_err_num:633
medium pred: select count ( * ) from ( select t1 . name from museum as t1 join visit as t2 on t1 . museum_id = t2 . museum_id group by t1 . museum_id having count ( * ) = 1 )
medium gold: SELECT count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010

eval_err_num:634
extra pred: select count ( * ) from ( select t1 . visitor from visitor as t1 join visit as t2 on t1 . id = t2 . museum_id group by t1 . id having count ( * ) = 1 )
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

eval_err_num:635
easy pred: select count ( * ) from ( select distinct t1 . name from highschooler as t1 join grade as t2 on t1 . id = t2 . id where t2 . grade = 1 )
easy gold: SELECT count(*) FROM Highschooler

eval_err_num:636
medium pred: select count ( * ) from ( select t1 . name from count ( * ) from from as as t1 join likes as t2 on t1 . id = t2 . id where t2 . grade = 1 )
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  11 OR grade  =  12

eval_err_num:637
medium pred: select count ( * ) from ( select t1 . name from count ( * ) , t1 . grade from group as t1 join likes as t2 on t1 . id = t2 . id where t2 . grade = 1 )
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

eval_err_num:638
easy pred: select count ( distinct grade ) from likes
easy gold: SELECT count(distinct grade) FROM Highschooler

eval_err_num:639
easy pred: select distinct grade from likes
easy gold: SELECT distinct grade FROM Highschooler

eval_err_num:640
hard pred: select distinct t1 . grade from distinct t1 . grade = 1 group by t2 . id order by count ( * ) desc limit 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) ASC LIMIT 1

eval_err_num:641
hard pred: select t1 . name from distinct t1 . grade = ( select distinct t1 . name from distinct t1 . grade = ( select t2 . name from ) as t1 join likes as t2 on t1 . id = t2 . id group by t2 . id order by count ( * ) desc limit 1 )
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

eval_err_num:642
easy pred: select count ( * ) from ( select distinct t1 . name from sum ( t1 . grade ) from as as t1 join grade as t2 on t1 . id = t2 . id group by t2 . id having count ( * ) = ) 1
easy gold: SELECT count(*) FROM Highschooler

eval_err_num:643
medium pred: select count ( * ) , t1 . grade from sum ( t1 . grade ) , t1 . grade from ( select t1 . grade from sum ( t1 . grade ) from as as t1 join grade as t2 on t1 . id = t2 . id group by t2 . grade having count ( * ) = ) 1
medium gold: SELECT grade, count(*) FROM Highschooler GROUP BY grade

eval_err_num:644
easy pred: select count ( * ) from ( select t1 . grade from sum ( t1 . grade ) , t2 . grade from ( select t1 . grade from sum ( t1 . grade ) , t2 . grade from ( select t1 . grade from sum ( t1 . grade ) > = 1 ) ) )
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  10

eval_err_num:645
easy pred: select t1 . grade from sum ( t1 . grade ) , t1 . grade from sum ( t1 . grade ) , t1 . grade from sum ( t1 . grade ) , t1 . grade from ( select t1 . grade from sum ( t1 . grade ) , t2 . grade from ( select t1 . grade from sum ( t1 . grade ) > = 1 ) )
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

eval_err_num:646
easy pred: select name from student_id where student_id in ( select student_id from highschooler )
easy gold: SELECT name FROM highschooler

eval_err_num:647
medium pred: select name , name from student_id where id in ( select id from ( select name from highschooler ) )
medium gold: SELECT T2.name, T3.name FROM friend as T1 join highschooler as T2  on friend_id = T2.ID join highschooler as T3 on student_id = T3.ID

eval_err_num:648
medium pred: select t1 . name , count ( * ) from where as t1 join likes as t2 on t1 . id = t2 . id group by t2 . name
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:649
easy pred: select name from student_id where grade = 1
easy gold: SELECT name FROM highschooler

eval_err_num:650
medium pred: select t1 . name , count ( * ) from highschooler as t1 join likes as t2 on t1 . id = t2 . id group by t2 . name
medium gold: SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:651
extra pred: select t1 . name from highschooler as t1 join likes as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) asc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:652
extra pred: select t1 . name from highschooler as t1 join likes as t2 on t1 . id = t2 . id group by t1 . id order by count ( * ) desc limit 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:653
easy pred: select count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) name
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  > 5)

eval_err_num:654
easy pred: select count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . name from count ( * ) from ( select t1 . ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) name
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 3)

eval_err_num:655
medium pred: select t1 . name from friend as t1 join likes as t2 on t1 . id = t2 . id where t2 . grade > 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:656
hard pred: select count ( * ) from ( select t1 . name from friend as t1 join likes as t2 on t1 . id = t2 . id where t1 . name = 1 )
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:657
hard pred: select t2 . name from friend as t1 join likes as t2 on t1 . id = t2 . id where t2 . name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:658
easy pred: select * from student_id where name = 1
easy gold: SELECT * FROM highschooler where name = "Kyle"

eval_err_num:659
hard pred: select t2 . name from friend as t1 join likes as t2 on t1 . id = t2 . id where t2 . name = 1
hard gold: SELECT T3.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.liked_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:660
hard pred: select t2 . name from friend as t1 join likes as t2 on t1 . id = t2 . id where t2 . name = 1
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:661
hard pred: select count ( distinct t2 . name ) from friend as t1 join likes as t2 on t1 . id = t2 . id where t2 . name = 1
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:662
easy pred: select student_id from highschooler
easy gold: SELECT ID FROM highschooler

eval_err_num:663
medium pred: select t1 . student_id , count ( * ) from where as t1 join likes as t2 on t1 . id = t2 . id group by t1 . id
medium gold: SELECT student_id, count(*) FROM friend group by student_id

eval_err_num:664
easy pred: select t1 . student_id from highschooler as t1 join likes as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > = 1
easy gold: SELECT student_id FROM Friend

eval_err_num:665
hard pred: select student_id from ( select t1 . id , t1 . name from highschooler as t1 join likes as t2 on t1 . id = t2 . id group by t1 . id having count ( * ) > = 1 )
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

eval_err_num:666
easy pred: select name from student_id where grade = 1
easy gold: SELECT name FROM highschooler

eval_err_num:667
easy pred: select t2 . name from having as t1 join likes as t2 on t1 . id = t2 . id where t2 . grade = 1
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 5)

eval_err_num:668
easy pred: select name from student_id where grade = 1 and grade > 1
easy gold: SELECT distinct T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:669
hard pred: select t2 . name from having as t1 join likes as t2 on t1 . id = t2 . id where t2 . grade > 1 group by t2 . name having count ( * ) > = 1
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:670
medium pred: select friend_id , friend , friend from friend
medium gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id

eval_err_num:671
extra pred: select t1 . id , t1 . name , t1 . friend_id from friend as t1 join friend as t2 on t1 . id = t2 . id where t2 . friend_id in ( select id from friend )
extra gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id where T1.student_id in (SELECT liked_id FROM Likes)

eval_err_num:672
hard pred: select friend_id from friend where id not in ( select id from friend )
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

eval_err_num:673
easy pred: select count ( * ) from ( select t1 . name from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . name = 1 )
easy gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:674
easy pred: select name from likes where id not in ( select id from ( select name from likes ) )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:675
easy pred: select count ( distinct friend ) from friend where id not in ( select id from friend )
easy gold: SELECT count (*) FROM (SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id)

eval_err_num:676
hard pred: select name from friend where id not in ( select id from ( select friend from ( select friend from ( select friend from ( select t1 . name from friend as t1 join likes as t2 on t1 . id = t2 . id where t2 . name = 1 ) ) ) ) )
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:677
hard pred: select name from friend where id not in ( select id from friend )
hard gold: SELECT name FROM Highschooler where ID not in (SELECT student_id FROM Likes)

eval_err_num:678
easy pred: select name from friend except select t2 . name from friend as t1 join friend as t2 on t1 . id = t2 . id
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:679
medium pred: select count ( * ) , t2 . name from friend as t1 join likes as t2 on t1 . id = t2 . id group by t2 . friend
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:680
easy pred: select count ( * ) from ( select t1 . name from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . name = 1 )
easy gold: SELECT count(distinct student_id) FROM likes

eval_err_num:681
easy pred: select name from likes where id not in ( select id from ( select name from highschooler ) )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:682
extra pred: select count ( distinct name ) from ( select t1 . name from highschooler as t1 join likes as t2 on t1 . id = t2 . id group by t2 . name order by count ( * ) desc limit 1 )
extra gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:683
extra pred: select count ( * ) from ( select t1 . name from highschooler as t1 join likes as t2 on t1 . id = t2 . id group by t2 . name order by count ( * ) desc limit 1 )
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:684
medium pred: select t2 . name from having as t1 join = as t2 on t1 . id = t2 . id
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  1

eval_err_num:685
medium pred: select name from student_id group by name having count ( * ) > = 1
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:686
medium pred: select t2 . name from friend as t1 join = as t2 on t1 . id = t2 . id
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:687
medium pred: select t1 . name from student_id as t1 join likes as t2 on t1 . id = t2 . id group by t2 . friend having count ( * ) > = 1
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:688
medium pred: select t2 . name , t2 . grade from having as t1 join likes as t2 on t1 . id = t2 . id group by t2 . name having count ( * ) > = 1
medium gold: SELECT T2.name, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:689
hard pred: select t1 . name from friend as t1 join likes as t2 on t1 . id = t2 . id where t2 . grade > 1 group by t2 . name having count ( * ) > 1
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:690
easy pred: select t2 . grade from highschooler as t1 join grade as t2 on t1 . id = t2 . id where t1 . name = 1
easy gold: SELECT grade FROM highschooler where name = "Kyle"

eval_err_num:691
medium pred: select count ( * ) from ( select t1 . name from select as t1 join likes as t2 on t1 . id = t2 . id where t1 . name = 1 )
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:692
hard pred: select t2 . name from ( select t1 . name from where as t1 join likes as t2 on t1 . id = t2 . id where t2 . name = 1 )
hard gold: SELECT T3.name  FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id JOIN Highschooler as T3 on T3.ID = T1.student_id WHERE T2.name  =  "Kyle"

eval_err_num:693
medium pred: select count ( * ) from ( select t1 . name from student_id as t1 join likes as t2 on t1 . id = t2 . id where t2 . name = 1 and t2 . name = 1 )
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:694
medium pred: select student_id , grade from highschooler
medium gold: SELECT id, grade FROM highschooler

eval_err_num:695
extra pred: select avg ( t2 . grade ) from as as t1 join = as t2 on t1 . id = t2 . id where t2 . student_id not in ( select t1 . student_id from ( select t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . student_id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . student_id in ( select student_id from ( select distinct t1 . ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) student_id
extra gold: SELECT avg(grade) FROM Highschooler WHERE id not IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:696
hard pred: select student_id from ( select t1 . student_id from highschooler as t1 join friend as t2 on t1 . id = t2 . id where t2 . name = 1 )
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

easy pred: select name , name from teacher order by age asc
easy gold: SELECT Name FROM teacher ORDER BY Age ASC

easy pred: select age from teacher
easy gold: SELECT Hometown FROM teacher

eval_err_num:697
medium pred: select t1 . name , t1 . age from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id order by t1 . age desc limit 1
medium gold: SELECT Age ,  Hometown FROM teacher

eval_err_num:698
easy pred: select t2 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id where t1 . name = 1
easy gold: SELECT * FROM teacher WHERE Hometown != "Little Lever Urban Distric"

easy pred: select name from teacher where name = 1 or name = 1
easy gold: SELECT Name FROM teacher WHERE Hometown != "Little Lever Urban Distric"

eval_err_num:699
medium pred: select teacher from teacher order by age desc limit 1
medium gold: SELECT * FROM teacher ORDER BY Age ASC LIMIT 1

medium pred: select hometown from teacher order by age desc limit 1
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

eval_err_num:700
easy pred: select t2 . name , t2 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id
easy gold: SELECT * FROM teacher order BY Hometown

eval_err_num:701
medium pred: select count ( * ) , t1 . name from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . name
medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:702
easy pred: select count ( * ) , t1 . hometown from hometown as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:703
hard pred: select t2 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . teacher_id order by count ( * ) desc limit 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:704
easy pred: select t2 . hometown , count ( * ) from hometown as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:705
easy pred: select t2 . hometown from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . teacher_id having count ( * ) > = 1
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

eval_err_num:706
medium pred: select t1 . name from course_arrange as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:707
medium pred: select t1 . name , t2 . course from course_arrange as t1 join course_arrange as t2 on t1 . teacher_id = t2 . teacher_id
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:708
hard pred: select t1 . name , t2 . course from course_arrange as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id order by t1 . name
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

eval_err_num:709
medium pred: select t1 . name , t2 . course from course_arrange as t1 join course_arrange as t2 on t1 . teacher_id = t2 . teacher_id
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:710
hard pred: select t2 . name , t2 . name from course_arrange as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . teacher_id
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

eval_err_num:711
medium pred: select t1 . name , count ( * ) from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:712
medium pred: select t1 . name , count ( * ) from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . name
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:713
medium pred: select t1 . name from teacher as t1 join teacher as t2 on t1 . teacher_id = t2 . teacher_id group by t2 . teacher_id having count ( * ) > = 1
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

easy pred: select * from ref_feature_types
easy gold: SELECT * FROM Other_Available_Features

easy pred: select count ( * ) from ref_feature_types
easy gold: SELECT count(*) FROM Other_Available_Features

eval_err_num:714
easy pred: select * from ref_feature_types as t1 join ref_feature_types as t2 on t1 . feature_id = t2 . feature_id where t1 . feature_name = 1
easy gold: SELECT * FROM Other_Available_Features WHERE feature_name  =  "AirCon"

eval_err_num:715
medium pred: select t1 . feature_type_name from ref_feature_types as t1 join ref_feature_types as t2 on t1 . feature_type_code = t2 . feature_type_code where t1 . feature_name = 1
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"

eval_err_num:716
easy pred: select t2 . property_type_description from properties as t1 join properties as t2 on t1 . property_type_code = t2 . property_type_code
easy gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code

eval_err_num:717
medium pred: select t2 . property_type_description from properties as t1 join properties as t2 on t1 . property_type_code = t2 . property_type_code
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

eval_err_num:718
easy pred: select area_code , state from contestants
easy gold: SELECT * FROM area_code_state

easy pred: select count ( * ) from contestants
easy gold: SELECT count(*) FROM area_code_state

eval_err_num:719
medium pred: select contestant_name , votes from contestants
medium gold: SELECT contestant_number ,  contestant_name FROM contestants

eval_err_num:720
medium pred: select t1 . contestant_name , t2 . votes from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id order by t2 . contestant_name desc
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

easy pred: select * from contestants
easy gold: SELECT state FROM votes

eval_err_num:721
medium pred: select * from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id
medium gold: SELECT vote_id,  state FROM votes

eval_err_num:722
medium pred: select phone_number , phone_number from contestants
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

eval_err_num:723
easy pred: select area_code from contestants
easy gold: SELECT area_code FROM area_code_state

eval_err_num:724
easy pred: select max ( area_code ) from contestants
easy gold: SELECT max(area_code) FROM area_code_state

eval_err_num:725
easy pred: select area_code from contestants order by area_code desc limit 1
easy gold: SELECT min(area_code) FROM area_code_state

eval_err_num:726
medium pred: select t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id order by t2 . votes desc limit 1
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

easy pred: select count ( * ) from contestants
easy gold: SELECT * FROM votes

eval_err_num:727
easy pred: select * from contestants where state = 1
easy gold: SELECT * FROM votes WHERE state  =  'CA'

eval_err_num:728
easy pred: select * from contestants where state = 1 or state = 1
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

easy pred: select contestant_name from contestants where contestant_name like 1
easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'

easy pred: select count ( * ) from contestants
easy gold: SELECT * FROM votes

eval_err_num:729
easy pred: select state from contestants group by state
easy gold: SELECT state FROM votes

eval_err_num:730
medium pred: select distinct state from contestants
medium gold: SELECT DISTINCT state ,  created FROM votes

easy pred: select count ( * ) from contestants
easy gold: SELECT * FROM votes

eval_err_num:731
medium pred: select t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id group by t2 . contestants having count ( * ) > = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

eval_err_num:732
medium pred: select t2 . contestant_name , t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

easy pred: select count ( * ) from contestants
easy gold: SELECT * FROM votes

eval_err_num:733
extra pred: select distinct t1 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id order by votes asc limit 1
extra gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

eval_err_num:734
extra pred: select t2 . contestant_name , t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id group by t2 . vote_id order by count ( * ) asc limit 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

easy pred: select count ( * ) from contestants
easy gold: SELECT * FROM votes

eval_err_num:735
medium pred: select * from contestants where state = 1 or state = 1
medium gold: SELECT * FROM votes WHERE state  =  'NY' OR state  =  'CA'

eval_err_num:736
medium pred: select count ( * ) from contestants where state = 1 or state = 1
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

eval_err_num:737
hard pred: select * from contestants where votes > ( select min ( votes ) from contestants )
hard gold: SELECT * FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

eval_err_num:738
extra pred: select count ( * ) from contestants where votes < ( select max ( votes ) from contestants )
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

eval_err_num:739
easy pred: select area_code , state from contestants
easy gold: SELECT * FROM area_code_state

eval_err_num:740
easy pred: select area_code , count ( * ) from contestants group by area_code
easy gold: SELECT * FROM votes

eval_err_num:741
medium pred: select area_code , count ( * ) from contestants group by area_code
medium gold: SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code

eval_err_num:742
extra pred: select area_code from contestants group by area_code order by count ( * ) desc limit 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

easy pred: select count ( * ) from contestants
easy gold: SELECT * FROM votes

eval_err_num:743
medium pred: select * from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id where t2 . contestant_name = 1
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:744
medium pred: select t1 . state , t1 . phone_number from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id where t2 . contestant_name = 1
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:745
easy pred: select area_code from contestants
easy gold: SELECT * FROM area_code_state

eval_err_num:746
hard pred: select area_code from contestants where contestant_name = 1
hard gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:747
extra pred: select t2 . contestant_name from contestants as t1 join contestants as t2 on t1 . vote_id = t2 . vote_id where t2 . contestant_name = 1 or t2 . contestant_name = 1
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

eval_err_num:748
extra pred: select course_name from departments order by semesters desc limit 1
extra gold: SELECT T2.department_description ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:749
extra pred: select t1 . department_name , t2 . department_id from departments as t1 join departments as t2 on t1 . department_id = t2 . department_id group by t1 . department_id order by count ( * ) desc limit 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:750
medium pred: select degree_programs from departments as t1 join departments as t2 on t1 . department_id = t2 . department_id where t1 . department_name = 1
medium gold: SELECT * FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:751
medium pred: select count ( * ) from departments as t1 join departments as t2 on t1 . department_id = t2 . department_id where t1 . department_name = 1
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:752
medium pred: select * from sections as t1 join sections as t2 on t1 . course_id = t2 . course_id group by t1 . course_id having count ( * ) = 1
medium gold: SELECT * FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  =  2

eval_err_num:753
medium pred: select t1 . course_id , t1 . course_id from courses as t1 join sections as t2 on t1 . course_id = t2 . course_id group by t1 . course_id order by count ( * ) desc limit 1
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

eval_err_num:754
extra pred: select t1 . first_name , t1 . student_id from transcripts as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:755
extra pred: select t1 . first_name , t1 . student_id , count ( * ) from transcripts as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

medium pred: select department_name from departments where department_name like 1
medium gold: SELECT * FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:756
medium pred: select course_description from departments where department_name like 1
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:757
medium pred: select count ( * ) from student_enrolment where semesters = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:758
medium pred: select date_first_registered , last_name from student_enrolment where semesters = 1 and last_name = 1
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:759
hard pred: select count ( * ) from student_enrolment where semesters = 1
hard gold: SELECT DISTINCT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:760
hard pred: select t1 . student_enrolment , t1 . middle_name from student_enrolment as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . semesters = 1 and t2 . semesters = 1
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:761
extra pred: select t1 . course_description from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id where t2 . semesters = 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 3

eval_err_num:762
extra pred: select t1 . course_name from courses as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id group by t1 . course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:763
extra pred: select t1 . course_description from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_id order by count ( * ) asc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:764
extra pred: select t1 . course_description from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:765
extra pred: select course_id , transcript_contents from student_enrolment where student_enrolment_id = ( select student_id from student_enrolment group by semester_id order by count ( * ) desc limit 1 )
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:766
extra pred: select t1 . student_id , t2 . first_name from student_enrolment as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 3

extra pred: select student_id from student_enrolment group by student_id order by count ( * ) desc limit 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:767
hard pred: select t1 . course_description from transcripts as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . student_enrolment = 1
hard gold: SELECT semester_description FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:768
hard pred: select t1 . course_name from transcripts as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . student_enrolment = ( select semesters from student_enrolment where semesters = 1 )
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:769
extra pred: select t1 . course_name from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_id order by count ( * ) desc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) ASC LIMIT 1

eval_err_num:770
extra pred: select count ( * ) from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_name order by count ( * ) desc limit 1
extra gold: SELECT count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:771
extra pred: select t1 . course_name from courses as t1 join student_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_name order by count ( * ) desc limit 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:772
medium pred: select count ( * ) from transcripts as t1 join students as t2 on t1 . student_id = t2 . student_id where t2 . state_province_county = 1
medium gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina'

eval_err_num:773
extra pred: select count ( * ) from transcripts as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . state_province_county = 1
extra gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:774
extra pred: select t1 . last_name from transcripts as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . state_province_county = 1
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:775
medium pred: select t1 . transcript_date from transcripts as t1 join sections as t2 on t1 . course_id = t2 . course_id group by t1 . student_id having count ( * ) > = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  = 2

eval_err_num:776
medium pred: select t1 . transcript_date from transcripts as t1 join sections as t2 on t1 . course_id = t2 . transcript_id group by t1 . student_id having count ( * ) > = 1
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

eval_err_num:777
medium pred: select email_address from transcripts where first_name = 1 and last_name = 1
medium gold: SELECT current_address_id FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

eval_err_num:778
medium pred: select cell_mobile_number from transcripts where first_name = 1 and last_name = 1
medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

eval_err_num:779
medium pred: select date_first_registered , last_name from transcripts
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered DESC LIMIT 1

eval_err_num:780
medium pred: select t1 . first_name , t1 . last_name from transcripts as t1 join transcripts as t2 on t1 . student_id = t2 . student_id order by t2 . date_first_registered desc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

eval_err_num:781
medium pred: select first_name , last_name , date_left from transcripts order by date_left desc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left DESC LIMIT 1

eval_err_num:782
medium pred: select first_name from transcripts order by date_left desc limit 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

eval_err_num:783
extra pred: select address_id from student_enrolment group by address_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:784
extra pred: select count ( * ) from transcripts as t1 join students as t2 on t1 . address_id = t2 . address_id
extra gold: SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:785
extra pred: select t3 . department_id , t3 . city from transcripts as t1 join students as t2 on t1 . address_id = t2 . address_id join transcripts as t3 on t2 . address_id = t3 . student_id group by t3 . address_id order by count ( * ) desc limit 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:786
medium pred: select * from transcripts where date_left = 1
medium gold: SELECT other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:787
medium pred: select t1 . last_name , t1 . last_name , t1 . other_details from sections as t1 join sections as t2 on t1 . section_id = t2 . section_id where t1 . last_name = 1
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:788
medium pred: select max ( date_first_registered ) from transcripts
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:789
medium pred: select date_first_registered from transcripts order by date_first_registered desc limit 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:790
hard pred: select count ( * ) from transcripts as t1 join student_enrolment as t2 on t1 . ssn = t2 . semester_id
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:791
hard pred: select count ( * ) from transcripts as t1 join student_enrolment as t2 on t1 . ssn = t2 . semester_id where t2 . semesters = 1
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:792
extra pred: select t1 . other_details from transcripts as t1 join sections as t2 on t1 . course_id = t2 . semester_id group by t1 . course_id order by count ( * ) desc limit 1
extra gold: SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:793
extra pred: select t1 . transcript_date , t1 . student_id from transcripts as t1 join sections as t2 on t1 . student_id = t2 . transcript_id where t2 . semesters = 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:794
medium pred: select * from student_enrolment as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'

eval_err_num:795
medium pred: select * from student_enrolment as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . semesters = 1
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:796
extra pred: select * from student_enrolment as t1 join student_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . student_enrolment = 1 and t2 . semesters = 1
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

easy pred: select * from owners
easy gold: SELECT * FROM Professionals

easy pred: select state from owners
easy gold: SELECT state FROM Professionals

hard pred: select state from owners except select state from owners
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

easy pred: select * from breeds
easy gold: SELECT age FROM Dogs

eval_err_num:797
medium pred: select max ( age ) , min ( dogs ) from breeds
medium gold: SELECT max(age), min(age) FROM Dogs

eval_err_num:798
hard pred: select name from breeds where dogs = ( select max ( dogs ) from breeds )
hard gold: SELECT * FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:799
hard pred: select avg ( age ) from breeds where breed_code = 1
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

easy pred: select * from professionals
easy gold: SELECT * FROM Professionals WHERE role_code = 'Employee'

eval_err_num:800
easy pred: select count ( * ) from professionals as t1 join professionals as t2 on t1 . owner_id = t2 . owner_id where t1 . state = 1
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Indiana'

eval_err_num:801
medium pred: select t1 . name from professionals as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id where t1 . state = 1 intersect select t1 . name from professionals as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id where t2 . state = 1
medium gold: SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  =  1

eval_err_num:802
extra pred: select t1 . name from professionals as t1 join professionals as t2 on t1 . owner_id = t2 . owner_id where t1 . state = 1 intersect select t1 . first_name , t1 . last_name from professionals as t1 join professionals as t2 on t1 . owner_id = t2 . owner_id where t1 . state = 1
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

eval_err_num:803
medium pred: select name , sum ( dogs ) from breeds group by breeds
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:804
medium pred: select name from breeds where sizes > 1
medium gold: SELECT name FROM Treatments  AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 500

eval_err_num:805
hard pred: select name , sum ( dogs ) from dogs where sizes > 1
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

eval_err_num:806
hard pred: select name from professionals union select name from professionals
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

eval_err_num:807
easy pred: select name from professionals where name = 1
easy gold: SELECT name FROM Dogs

eval_err_num:808
hard pred: select name from professionals where dogs = 1 or name = 1
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:809
medium pred: select name , treatment_type_code from professionals
medium gold: SELECT T1.first_name, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:810
medium pred: select t1 . name , t1 . name , t2 . zip_code , t2 . zip_code from professionals as t1 join breeds as t2 on t1 . dog_id = t2 . treatment_id join treatment_types as t3 on t1 . dog_id = t3 . charge_id
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.email_address, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:811
extra pred: select t1 . name , t1 . name , t1 . email_address from professionals as t1 join dogs as t2 on t1 . dog_id = t2 . owner_id where t1 . zip_code = 1 intersect select t1 . name from professionals as t1 join dogs as t2 on t1 . dog_id = t2 . treatment_id where t2 . treatment_type_code = 1
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:812
medium pred: select count ( * ) , t1 . name from owners as t1 join owners as t2 on t1 . owner_id = t2 . owner_id group by t1 . owner_id
medium gold: SELECT T1.owner_id ,count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id

eval_err_num:813
medium pred: select owner_id from city group by owner_id order by count ( * ) desc limit 1
medium gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name, count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id Having count(*) = 2

eval_err_num:814
extra pred: select t1 . name from owners as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id group by t2 . owner_id order by count ( * ) desc limit 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:815
medium pred: select count ( * ) from professionals as t1 join dogs as t2 on t1 . treatment_id = t2 . treatment_id group by t1 . treatment_id
medium gold: SELECT T1.professional_id , count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:816
medium pred: select t1 . name from professionals as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id group by t1 . name order by count ( * ) desc limit 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) = 1

eval_err_num:817
medium pred: select t1 . name from professionals as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id group by t1 . name having count ( * ) > = 1
medium gold: SELECT T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id Having count(*) >= 2

eval_err_num:818
medium pred: select t1 . name , t1 . professional_id from professionals as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id group by t1 . owner_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:819
medium pred: select zip_code , count ( * ) from dogs group by zip_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

eval_err_num:820
medium pred: select breed_code from dogs group by zip_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 2

medium pred: select breed_code from dogs group by breed_code order by count ( * ) desc limit 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 1

eval_err_num:821
extra pred: select t1 . name from breeds as t1 join breeds as t2 on t1 . dog_id = t2 . dog_id group by t1 . dog_id order by count ( * ) desc limit 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:822
medium pred: select name , sum ( dogs ) from breeds group by breeds
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:823
hard pred: select name , charge_amount from dogs
hard gold: SELECT T1.owner_id, T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id

eval_err_num:824
extra pred: select t1 . name , t2 . charge_amount from breeds as t1 join dogs as t2 on t1 . dog_id = t2 . dog_id join professionals as t3 on t1 . charge_id = t3 . charge_id where t3 . name = 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:825
easy pred: select treatment_type_code , breeds from breeds
easy gold: SELECT * FROM Treatment_Types

eval_err_num:826
extra pred: select t1 . breeds , t2 . treatment_type_description , sum ( t2 . charge_amount ) from dogs as t1 join breeds as t2 on t1 . dog_id = t2 . treatment_type_code group by t2 . treatment_type_code
extra gold: SELECT treatment_type_code, sum(cost_of_treatment) FROM Treatments group by treatment_type_code order by sum(cost_of_treatment) desc

eval_err_num:827
extra pred: select t1 . breeds , t2 . breeds from breeds as t1 join breeds as t2 on t1 . dogs = t2 . treatment_type_code group by t2 . breeds order by sum ( t2 . dogs ) desc limit 1
extra gold: SELECT T2.treatment_type_code, T1.treatment_type_description,  sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:828
extra pred: select t1 . breeds from breeds as t1 join breeds as t2 on t1 . breeds = t2 . treatment_type_code group by t2 . breeds order by sum ( t2 . charge_amount ) desc limit 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:829
medium pred: select name , sum ( dogs ) from breeds group by breeds
medium gold: SELECT name, sum(cost_of_treatment) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id

eval_err_num:830
medium pred: select count ( * ) from breeds where sizes > 1
medium gold: SELECT count(name) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 700

eval_err_num:831
hard pred: select t1 . owner_id , t1 . zip_code from professionals as t1 join dogs as t2 on t1 . dog_id = t2 . dog_id where t2 . charge_amount > 1
hard gold: SELECT T1.owner_id ,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id Having sum(T3.cost_of_treatment) > 400

eval_err_num:832
extra pred: select t1 . name from professionals as t1 join dogs as t2 on t1 . dog_id = t2 . dog_id where t1 . charge_amount > 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

eval_err_num:833
medium pred: select name , breeds from breeds
medium gold: SELECT T1.first_name, T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:834
medium pred: select t1 . name , count ( * ) from professionals as t1 join breeds as t2 on t1 . dog_id = t2 . treatment_id group by t1 . dog_id
medium gold: SELECT T1.first_name, T2.treatment_type_code, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

eval_err_num:835
medium pred: select t1 . name , t1 . cell_number , count ( * ) from professionals as t1 join breeds as t2 on t1 . dog_id = t2 . treatment_id group by t1 . treatment_id
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  = 1

eval_err_num:836
medium pred: select t1 . name from professionals as t1 join breeds as t2 on t1 . dog_id = t2 . treatment_id group by t1 . dog_id having count ( * ) > = 1
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:837
medium pred: select min ( charges ) , avg ( charges ) from professionals
medium gold: SELECT min(cost_of_treatment), max(cost_of_treatment), avg(cost_of_treatment) FROM Treatments

eval_err_num:838
extra pred: select t1 . name , t2 . avg ( t2 . charges ) from professionals as t1 join professionals as t2 on t1 . owner_id = t2 . owner_id group by t2 . name order by t2 . charge_amount limit 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT min(cost_of_treatment) FROM Treatments )

eval_err_num:839
extra pred: select max ( charges ) from professionals
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT max(cost_of_treatment) FROM Treatments )

eval_err_num:840
extra pred: select avg ( t1 . charge_amount ) from professionals as t1 join dogs as t2 on t1 . charge_id = t2 . owner_id order by t2 . charge_amount desc limit 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

eval_err_num:841
medium pred: select zip_code , count ( * ) from dogs group by zip_code
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code

eval_err_num:842
hard pred: select zip_code from dogs group by zip_code order by count ( * ) desc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) DESC LIMIT 1

eval_err_num:843
hard pred: select zip_code from dogs group by zip_code order by count ( * ) desc limit 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) ASC LIMIT 1

eval_err_num:844
extra pred: select t1 . breeds from breeds as t1 join breeds as t2 on t1 . dog_id = t2 . dog_id group by t1 . dog_id order by count ( * ) desc limit 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:845
medium pred: select name from professionals where city = 1
medium gold: SELECT T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

eval_err_num:846
medium pred: select name , zip_code from professionals where city = 1 or name = 1
medium gold: SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.city  =  'Lake Tia'

eval_err_num:847
medium pred: select t1 . name from owners as t1 join state as t2 on t1 . owner_id = t2 . owner_id where t1 . name = 1
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

eval_err_num:848
medium pred: select * from dogs order by breeds desc limit 1
medium gold: SELECT * FROM Dogs order by age asc limit 1

eval_err_num:849
extra pred: select last_name from dogs order by age desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

eval_err_num:850
extra pred: select last_name from professionals order by age desc limit 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT min(age) FROM Dogs )

medium pred: select city , count ( * ) from professionals group by city
medium gold: SELECT city, state FROM professionals

easy pred: select count ( * ) from professionals where zip_code = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Hawaii'

eval_err_num:851
medium pred: select t1 . email_address from owners as t1 join state as t2 on t1 . owner_id = t2 . owner_id where t1 . state = 1 or t1 . state = 1
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

eval_err_num:852
easy pred: select count ( * ) from professionals where breed_code = 1
easy gold: SELECT count(*) FROM professionals WHERE state = 'Wisconsin'

eval_err_num:853
medium pred: select t1 . name , t1 . city from professionals as t1 join professionals as t2 on t1 . role_code = t2 . role_code where t2 . breeds = 1
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE state = 'Wisconsin'

eval_err_num:854
medium pred: select t1 . name , t1 . city from professionals as t1 join state as t2 on t1 . owner_id = t2 . owner_id where t1 . city like 1 order by t2 . name
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

eval_err_num:855
easy pred: select count ( * ) from professionals where breed_name = 1
easy gold: SELECT count(*) FROM Owners WHERE state = 'Vermont'

eval_err_num:856
medium pred: select name , email_address from owners where state like 1
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

easy pred: select name from dogs order by age desc
easy gold: SELECT age FROM Dogs ORDER BY age

eval_err_num:857
easy pred: select count ( * ) from dogs where zip_code = 1
easy gold: SELECT count(*) FROM Dogs WHERE age  < 4

eval_err_num:858
hard pred: select avg ( dogs ) from dogs
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

eval_err_num:859
easy pred: select breeds from breeds
easy gold: SELECT * FROM Treatments

eval_err_num:860
easy pred: select size_description from dogs order by size_description
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment ASC

eval_err_num:861
easy pred: select size_description from dogs order by size_description desc
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment DESC

eval_err_num:862
medium pred: select name from dogs order by charges desc limit 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

easy pred: select * from professionals
easy gold: SELECT count(*) FROM Dogs

eval_err_num:863
hard pred: select count ( * ) from owners where dog_id in ( select dog_id from owners )
hard gold: SELECT count(*) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:864
extra pred: select name from owners except select t1 . name from owners as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

eval_err_num:865
extra pred: select name from owners except select t1 . name from owners as t1 join dogs as t2 on t1 . owner_id = t2 . owner_id where t2 . state = 1
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

                     easy                 medium               hard                 extra                all                  joint_all           
count                481                  441                  145                  133                  1200                 421                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.316                0.093                0.028                0.000                0.164                0.062               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.836                0.783                0.750                0.500                0.812                0.000               
select(no AGG)       0.875                0.783                0.750                0.500                0.839                0.000               
where                0.565                0.320                0.200                0.000                0.449                0.000               
where(no OP)         0.804                0.520                0.200                0.000                0.654                0.000               
group(no Having)     0.750                0.900                1.000                0.800                0.865                0.000               
group                0.625                0.900                1.000                0.800                0.838                0.000               
order                0.500                0.571                0.800                0.833                0.615                0.000               
and/or               1.000                0.920                0.924                0.887                0.949                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.785                0.732                0.818                0.750                0.764                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.403                0.147                0.062                0.030                0.227                0.000               
select(no AGG)       0.422                0.147                0.062                0.030                0.234                0.000               
where                0.177                0.047                0.013                0.000                0.074                0.000               
where(no OP)         0.252                0.076                0.013                0.000                0.108                0.000               
group(no Having)     0.286                0.151                0.108                0.066                0.134                0.000               
group                0.238                0.151                0.108                0.066                0.130                0.000               
order                0.368                0.116                0.082                0.075                0.118                0.000               
and/or               0.996                0.993                1.000                1.000                0.996                0.000               
IUEN                 0.000                0.000                0.000                0.000                0.000                0.000               
keywords             0.273                0.117                0.062                0.045                0.131                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.544                0.248                0.115                0.057                0.354                1.000               
select(no AGG)       0.569                0.248                0.115                0.057                0.366                1.000               
where                0.269                0.082                0.024                1.000                0.127                1.000               
where(no OP)         0.383                0.133                0.024                1.000                0.185                1.000               
group(no Having)     0.414                0.259                0.195                0.121                0.233                1.000               
group                0.345                0.259                0.195                0.121                0.225                1.000               
order                0.424                0.193                0.148                0.137                0.198                1.000               
and/or               0.998                0.955                0.961                0.940                0.972                1.000               
IUEN                 1.000                1.000                1.000                1.000                1.000                1.000               
keywords             0.405                0.202                0.115                0.085                0.224                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                421                  421                  269                  88                   1                   

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.316                0.119                0.048                0.011                0.000               
